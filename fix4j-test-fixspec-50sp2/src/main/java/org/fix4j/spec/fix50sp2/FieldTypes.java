package org.fix4j.spec.fix50sp2;

import org.fix4j.spec.fix50sp2.fieldtype.*;
import org.fix4j.test.fixspec.FieldClass;
import org.fix4j.test.fixspec.Tag;
import org.fix4j.test.fixspec.FieldType;
import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.Map;

public class FieldTypes{
    private static final Map<Integer, FieldType> fieldTypesByTagInt = new LinkedHashMap<>();
    private static final Map<String, FieldType> fieldTypesByName = new LinkedHashMap<>();
    public static final Account Account = register(org.fix4j.spec.fix50sp2.fieldtype.Account.INSTANCE);
    public static final AdvId AdvId = register(org.fix4j.spec.fix50sp2.fieldtype.AdvId.INSTANCE);
    public static final AdvRefID AdvRefID = register(org.fix4j.spec.fix50sp2.fieldtype.AdvRefID.INSTANCE);
    public static final AdvSide AdvSide = register(org.fix4j.spec.fix50sp2.fieldtype.AdvSide.INSTANCE);
    public static final AdvTransType AdvTransType = register(org.fix4j.spec.fix50sp2.fieldtype.AdvTransType.INSTANCE);
    public static final AvgPx AvgPx = register(org.fix4j.spec.fix50sp2.fieldtype.AvgPx.INSTANCE);
    public static final BeginSeqNo BeginSeqNo = register(org.fix4j.spec.fix50sp2.fieldtype.BeginSeqNo.INSTANCE);
    public static final BeginString BeginString = register(org.fix4j.spec.fix50sp2.fieldtype.BeginString.INSTANCE);
    public static final BodyLength BodyLength = register(org.fix4j.spec.fix50sp2.fieldtype.BodyLength.INSTANCE);
    public static final CheckSum CheckSum = register(org.fix4j.spec.fix50sp2.fieldtype.CheckSum.INSTANCE);
    public static final ClOrdID ClOrdID = register(org.fix4j.spec.fix50sp2.fieldtype.ClOrdID.INSTANCE);
    public static final Commission Commission = register(org.fix4j.spec.fix50sp2.fieldtype.Commission.INSTANCE);
    public static final CommType CommType = register(org.fix4j.spec.fix50sp2.fieldtype.CommType.INSTANCE);
    public static final CumQty CumQty = register(org.fix4j.spec.fix50sp2.fieldtype.CumQty.INSTANCE);
    public static final Currency Currency = register(org.fix4j.spec.fix50sp2.fieldtype.Currency.INSTANCE);
    public static final EndSeqNo EndSeqNo = register(org.fix4j.spec.fix50sp2.fieldtype.EndSeqNo.INSTANCE);
    public static final ExecID ExecID = register(org.fix4j.spec.fix50sp2.fieldtype.ExecID.INSTANCE);
    public static final ExecInst ExecInst = register(org.fix4j.spec.fix50sp2.fieldtype.ExecInst.INSTANCE);
    public static final ExecRefID ExecRefID = register(org.fix4j.spec.fix50sp2.fieldtype.ExecRefID.INSTANCE);
    public static final ExecTransType ExecTransType = register(org.fix4j.spec.fix50sp2.fieldtype.ExecTransType.INSTANCE);
    public static final HandlInst HandlInst = register(org.fix4j.spec.fix50sp2.fieldtype.HandlInst.INSTANCE);
    public static final SecurityIDSource SecurityIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityIDSource.INSTANCE);
    public static final IOIID IOIID = register(org.fix4j.spec.fix50sp2.fieldtype.IOIID.INSTANCE);
    public static final IOIQltyInd IOIQltyInd = register(org.fix4j.spec.fix50sp2.fieldtype.IOIQltyInd.INSTANCE);
    public static final IOIRefID IOIRefID = register(org.fix4j.spec.fix50sp2.fieldtype.IOIRefID.INSTANCE);
    public static final IOIQty IOIQty = register(org.fix4j.spec.fix50sp2.fieldtype.IOIQty.INSTANCE);
    public static final IOITransType IOITransType = register(org.fix4j.spec.fix50sp2.fieldtype.IOITransType.INSTANCE);
    public static final LastCapacity LastCapacity = register(org.fix4j.spec.fix50sp2.fieldtype.LastCapacity.INSTANCE);
    public static final LastMkt LastMkt = register(org.fix4j.spec.fix50sp2.fieldtype.LastMkt.INSTANCE);
    public static final LastPx LastPx = register(org.fix4j.spec.fix50sp2.fieldtype.LastPx.INSTANCE);
    public static final LastQty LastQty = register(org.fix4j.spec.fix50sp2.fieldtype.LastQty.INSTANCE);
    public static final NoLinesOfText NoLinesOfText = register(org.fix4j.spec.fix50sp2.fieldtype.NoLinesOfText.INSTANCE);
    public static final MsgSeqNum MsgSeqNum = register(org.fix4j.spec.fix50sp2.fieldtype.MsgSeqNum.INSTANCE);
    public static final MsgType MsgType = register(org.fix4j.spec.fix50sp2.fieldtype.MsgType.INSTANCE);
    public static final NewSeqNo NewSeqNo = register(org.fix4j.spec.fix50sp2.fieldtype.NewSeqNo.INSTANCE);
    public static final OrderID OrderID = register(org.fix4j.spec.fix50sp2.fieldtype.OrderID.INSTANCE);
    public static final OrderQty OrderQty = register(org.fix4j.spec.fix50sp2.fieldtype.OrderQty.INSTANCE);
    public static final OrdStatus OrdStatus = register(org.fix4j.spec.fix50sp2.fieldtype.OrdStatus.INSTANCE);
    public static final OrdType OrdType = register(org.fix4j.spec.fix50sp2.fieldtype.OrdType.INSTANCE);
    public static final OrigClOrdID OrigClOrdID = register(org.fix4j.spec.fix50sp2.fieldtype.OrigClOrdID.INSTANCE);
    public static final OrigTime OrigTime = register(org.fix4j.spec.fix50sp2.fieldtype.OrigTime.INSTANCE);
    public static final PossDupFlag PossDupFlag = register(org.fix4j.spec.fix50sp2.fieldtype.PossDupFlag.INSTANCE);
    public static final Price Price = register(org.fix4j.spec.fix50sp2.fieldtype.Price.INSTANCE);
    public static final RefSeqNum RefSeqNum = register(org.fix4j.spec.fix50sp2.fieldtype.RefSeqNum.INSTANCE);
    public static final SecurityID SecurityID = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityID.INSTANCE);
    public static final SenderCompID SenderCompID = register(org.fix4j.spec.fix50sp2.fieldtype.SenderCompID.INSTANCE);
    public static final SenderSubID SenderSubID = register(org.fix4j.spec.fix50sp2.fieldtype.SenderSubID.INSTANCE);
    public static final SendingTime SendingTime = register(org.fix4j.spec.fix50sp2.fieldtype.SendingTime.INSTANCE);
    public static final Quantity Quantity = register(org.fix4j.spec.fix50sp2.fieldtype.Quantity.INSTANCE);
    public static final Side Side = register(org.fix4j.spec.fix50sp2.fieldtype.Side.INSTANCE);
    public static final Symbol Symbol = register(org.fix4j.spec.fix50sp2.fieldtype.Symbol.INSTANCE);
    public static final TargetCompID TargetCompID = register(org.fix4j.spec.fix50sp2.fieldtype.TargetCompID.INSTANCE);
    public static final TargetSubID TargetSubID = register(org.fix4j.spec.fix50sp2.fieldtype.TargetSubID.INSTANCE);
    public static final Text Text = register(org.fix4j.spec.fix50sp2.fieldtype.Text.INSTANCE);
    public static final TimeInForce TimeInForce = register(org.fix4j.spec.fix50sp2.fieldtype.TimeInForce.INSTANCE);
    public static final TransactTime TransactTime = register(org.fix4j.spec.fix50sp2.fieldtype.TransactTime.INSTANCE);
    public static final Urgency Urgency = register(org.fix4j.spec.fix50sp2.fieldtype.Urgency.INSTANCE);
    public static final ValidUntilTime ValidUntilTime = register(org.fix4j.spec.fix50sp2.fieldtype.ValidUntilTime.INSTANCE);
    public static final SettlType SettlType = register(org.fix4j.spec.fix50sp2.fieldtype.SettlType.INSTANCE);
    public static final SettlDate SettlDate = register(org.fix4j.spec.fix50sp2.fieldtype.SettlDate.INSTANCE);
    public static final SymbolSfx SymbolSfx = register(org.fix4j.spec.fix50sp2.fieldtype.SymbolSfx.INSTANCE);
    public static final ListID ListID = register(org.fix4j.spec.fix50sp2.fieldtype.ListID.INSTANCE);
    public static final ListSeqNo ListSeqNo = register(org.fix4j.spec.fix50sp2.fieldtype.ListSeqNo.INSTANCE);
    public static final TotNoOrders TotNoOrders = register(org.fix4j.spec.fix50sp2.fieldtype.TotNoOrders.INSTANCE);
    public static final ListExecInst ListExecInst = register(org.fix4j.spec.fix50sp2.fieldtype.ListExecInst.INSTANCE);
    public static final AllocID AllocID = register(org.fix4j.spec.fix50sp2.fieldtype.AllocID.INSTANCE);
    public static final AllocTransType AllocTransType = register(org.fix4j.spec.fix50sp2.fieldtype.AllocTransType.INSTANCE);
    public static final RefAllocID RefAllocID = register(org.fix4j.spec.fix50sp2.fieldtype.RefAllocID.INSTANCE);
    public static final NoOrders NoOrders = register(org.fix4j.spec.fix50sp2.fieldtype.NoOrders.INSTANCE);
    public static final AvgPxPrecision AvgPxPrecision = register(org.fix4j.spec.fix50sp2.fieldtype.AvgPxPrecision.INSTANCE);
    public static final TradeDate TradeDate = register(org.fix4j.spec.fix50sp2.fieldtype.TradeDate.INSTANCE);
    public static final ExecBroker ExecBroker = register(org.fix4j.spec.fix50sp2.fieldtype.ExecBroker.INSTANCE);
    public static final PositionEffect PositionEffect = register(org.fix4j.spec.fix50sp2.fieldtype.PositionEffect.INSTANCE);
    public static final NoAllocs NoAllocs = register(org.fix4j.spec.fix50sp2.fieldtype.NoAllocs.INSTANCE);
    public static final AllocAccount AllocAccount = register(org.fix4j.spec.fix50sp2.fieldtype.AllocAccount.INSTANCE);
    public static final AllocQty AllocQty = register(org.fix4j.spec.fix50sp2.fieldtype.AllocQty.INSTANCE);
    public static final ProcessCode ProcessCode = register(org.fix4j.spec.fix50sp2.fieldtype.ProcessCode.INSTANCE);
    public static final NoRpts NoRpts = register(org.fix4j.spec.fix50sp2.fieldtype.NoRpts.INSTANCE);
    public static final RptSeq RptSeq = register(org.fix4j.spec.fix50sp2.fieldtype.RptSeq.INSTANCE);
    public static final CxlQty CxlQty = register(org.fix4j.spec.fix50sp2.fieldtype.CxlQty.INSTANCE);
    public static final NoDlvyInst NoDlvyInst = register(org.fix4j.spec.fix50sp2.fieldtype.NoDlvyInst.INSTANCE);
    public static final DlvyInst DlvyInst = register(org.fix4j.spec.fix50sp2.fieldtype.DlvyInst.INSTANCE);
    public static final AllocStatus AllocStatus = register(org.fix4j.spec.fix50sp2.fieldtype.AllocStatus.INSTANCE);
    public static final AllocRejCode AllocRejCode = register(org.fix4j.spec.fix50sp2.fieldtype.AllocRejCode.INSTANCE);
    public static final Signature Signature = register(org.fix4j.spec.fix50sp2.fieldtype.Signature.INSTANCE);
    public static final SecureDataLen SecureDataLen = register(org.fix4j.spec.fix50sp2.fieldtype.SecureDataLen.INSTANCE);
    public static final SecureData SecureData = register(org.fix4j.spec.fix50sp2.fieldtype.SecureData.INSTANCE);
    public static final BrokerOfCredit BrokerOfCredit = register(org.fix4j.spec.fix50sp2.fieldtype.BrokerOfCredit.INSTANCE);
    public static final SignatureLength SignatureLength = register(org.fix4j.spec.fix50sp2.fieldtype.SignatureLength.INSTANCE);
    public static final EmailType EmailType = register(org.fix4j.spec.fix50sp2.fieldtype.EmailType.INSTANCE);
    public static final RawDataLength RawDataLength = register(org.fix4j.spec.fix50sp2.fieldtype.RawDataLength.INSTANCE);
    public static final RawData RawData = register(org.fix4j.spec.fix50sp2.fieldtype.RawData.INSTANCE);
    public static final PossResend PossResend = register(org.fix4j.spec.fix50sp2.fieldtype.PossResend.INSTANCE);
    public static final EncryptMethod EncryptMethod = register(org.fix4j.spec.fix50sp2.fieldtype.EncryptMethod.INSTANCE);
    public static final StopPx StopPx = register(org.fix4j.spec.fix50sp2.fieldtype.StopPx.INSTANCE);
    public static final ExDestination ExDestination = register(org.fix4j.spec.fix50sp2.fieldtype.ExDestination.INSTANCE);
    public static final CxlRejReason CxlRejReason = register(org.fix4j.spec.fix50sp2.fieldtype.CxlRejReason.INSTANCE);
    public static final OrdRejReason OrdRejReason = register(org.fix4j.spec.fix50sp2.fieldtype.OrdRejReason.INSTANCE);
    public static final IOIQualifier IOIQualifier = register(org.fix4j.spec.fix50sp2.fieldtype.IOIQualifier.INSTANCE);
    public static final WaveNo WaveNo = register(org.fix4j.spec.fix50sp2.fieldtype.WaveNo.INSTANCE);
    public static final Issuer Issuer = register(org.fix4j.spec.fix50sp2.fieldtype.Issuer.INSTANCE);
    public static final SecurityDesc SecurityDesc = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityDesc.INSTANCE);
    public static final HeartBtInt HeartBtInt = register(org.fix4j.spec.fix50sp2.fieldtype.HeartBtInt.INSTANCE);
    public static final ClientID ClientID = register(org.fix4j.spec.fix50sp2.fieldtype.ClientID.INSTANCE);
    public static final MinQty MinQty = register(org.fix4j.spec.fix50sp2.fieldtype.MinQty.INSTANCE);
    public static final MaxFloor MaxFloor = register(org.fix4j.spec.fix50sp2.fieldtype.MaxFloor.INSTANCE);
    public static final TestReqID TestReqID = register(org.fix4j.spec.fix50sp2.fieldtype.TestReqID.INSTANCE);
    public static final ReportToExch ReportToExch = register(org.fix4j.spec.fix50sp2.fieldtype.ReportToExch.INSTANCE);
    public static final LocateReqd LocateReqd = register(org.fix4j.spec.fix50sp2.fieldtype.LocateReqd.INSTANCE);
    public static final OnBehalfOfCompID OnBehalfOfCompID = register(org.fix4j.spec.fix50sp2.fieldtype.OnBehalfOfCompID.INSTANCE);
    public static final OnBehalfOfSubID OnBehalfOfSubID = register(org.fix4j.spec.fix50sp2.fieldtype.OnBehalfOfSubID.INSTANCE);
    public static final QuoteID QuoteID = register(org.fix4j.spec.fix50sp2.fieldtype.QuoteID.INSTANCE);
    public static final NetMoney NetMoney = register(org.fix4j.spec.fix50sp2.fieldtype.NetMoney.INSTANCE);
    public static final SettlCurrAmt SettlCurrAmt = register(org.fix4j.spec.fix50sp2.fieldtype.SettlCurrAmt.INSTANCE);
    public static final SettlCurrency SettlCurrency = register(org.fix4j.spec.fix50sp2.fieldtype.SettlCurrency.INSTANCE);
    public static final ForexReq ForexReq = register(org.fix4j.spec.fix50sp2.fieldtype.ForexReq.INSTANCE);
    public static final OrigSendingTime OrigSendingTime = register(org.fix4j.spec.fix50sp2.fieldtype.OrigSendingTime.INSTANCE);
    public static final GapFillFlag GapFillFlag = register(org.fix4j.spec.fix50sp2.fieldtype.GapFillFlag.INSTANCE);
    public static final NoExecs NoExecs = register(org.fix4j.spec.fix50sp2.fieldtype.NoExecs.INSTANCE);
    public static final CxlType CxlType = register(org.fix4j.spec.fix50sp2.fieldtype.CxlType.INSTANCE);
    public static final ExpireTime ExpireTime = register(org.fix4j.spec.fix50sp2.fieldtype.ExpireTime.INSTANCE);
    public static final DKReason DKReason = register(org.fix4j.spec.fix50sp2.fieldtype.DKReason.INSTANCE);
    public static final DeliverToCompID DeliverToCompID = register(org.fix4j.spec.fix50sp2.fieldtype.DeliverToCompID.INSTANCE);
    public static final DeliverToSubID DeliverToSubID = register(org.fix4j.spec.fix50sp2.fieldtype.DeliverToSubID.INSTANCE);
    public static final IOINaturalFlag IOINaturalFlag = register(org.fix4j.spec.fix50sp2.fieldtype.IOINaturalFlag.INSTANCE);
    public static final QuoteReqID QuoteReqID = register(org.fix4j.spec.fix50sp2.fieldtype.QuoteReqID.INSTANCE);
    public static final BidPx BidPx = register(org.fix4j.spec.fix50sp2.fieldtype.BidPx.INSTANCE);
    public static final OfferPx OfferPx = register(org.fix4j.spec.fix50sp2.fieldtype.OfferPx.INSTANCE);
    public static final BidSize BidSize = register(org.fix4j.spec.fix50sp2.fieldtype.BidSize.INSTANCE);
    public static final OfferSize OfferSize = register(org.fix4j.spec.fix50sp2.fieldtype.OfferSize.INSTANCE);
    public static final NoMiscFees NoMiscFees = register(org.fix4j.spec.fix50sp2.fieldtype.NoMiscFees.INSTANCE);
    public static final MiscFeeAmt MiscFeeAmt = register(org.fix4j.spec.fix50sp2.fieldtype.MiscFeeAmt.INSTANCE);
    public static final MiscFeeCurr MiscFeeCurr = register(org.fix4j.spec.fix50sp2.fieldtype.MiscFeeCurr.INSTANCE);
    public static final MiscFeeType MiscFeeType = register(org.fix4j.spec.fix50sp2.fieldtype.MiscFeeType.INSTANCE);
    public static final PrevClosePx PrevClosePx = register(org.fix4j.spec.fix50sp2.fieldtype.PrevClosePx.INSTANCE);
    public static final ResetSeqNumFlag ResetSeqNumFlag = register(org.fix4j.spec.fix50sp2.fieldtype.ResetSeqNumFlag.INSTANCE);
    public static final SenderLocationID SenderLocationID = register(org.fix4j.spec.fix50sp2.fieldtype.SenderLocationID.INSTANCE);
    public static final TargetLocationID TargetLocationID = register(org.fix4j.spec.fix50sp2.fieldtype.TargetLocationID.INSTANCE);
    public static final OnBehalfOfLocationID OnBehalfOfLocationID = register(org.fix4j.spec.fix50sp2.fieldtype.OnBehalfOfLocationID.INSTANCE);
    public static final DeliverToLocationID DeliverToLocationID = register(org.fix4j.spec.fix50sp2.fieldtype.DeliverToLocationID.INSTANCE);
    public static final NoRelatedSym NoRelatedSym = register(org.fix4j.spec.fix50sp2.fieldtype.NoRelatedSym.INSTANCE);
    public static final Subject Subject = register(org.fix4j.spec.fix50sp2.fieldtype.Subject.INSTANCE);
    public static final Headline Headline = register(org.fix4j.spec.fix50sp2.fieldtype.Headline.INSTANCE);
    public static final URLLink URLLink = register(org.fix4j.spec.fix50sp2.fieldtype.URLLink.INSTANCE);
    public static final ExecType ExecType = register(org.fix4j.spec.fix50sp2.fieldtype.ExecType.INSTANCE);
    public static final LeavesQty LeavesQty = register(org.fix4j.spec.fix50sp2.fieldtype.LeavesQty.INSTANCE);
    public static final CashOrderQty CashOrderQty = register(org.fix4j.spec.fix50sp2.fieldtype.CashOrderQty.INSTANCE);
    public static final AllocAvgPx AllocAvgPx = register(org.fix4j.spec.fix50sp2.fieldtype.AllocAvgPx.INSTANCE);
    public static final AllocNetMoney AllocNetMoney = register(org.fix4j.spec.fix50sp2.fieldtype.AllocNetMoney.INSTANCE);
    public static final SettlCurrFxRate SettlCurrFxRate = register(org.fix4j.spec.fix50sp2.fieldtype.SettlCurrFxRate.INSTANCE);
    public static final SettlCurrFxRateCalc SettlCurrFxRateCalc = register(org.fix4j.spec.fix50sp2.fieldtype.SettlCurrFxRateCalc.INSTANCE);
    public static final NumDaysInterest NumDaysInterest = register(org.fix4j.spec.fix50sp2.fieldtype.NumDaysInterest.INSTANCE);
    public static final AccruedInterestRate AccruedInterestRate = register(org.fix4j.spec.fix50sp2.fieldtype.AccruedInterestRate.INSTANCE);
    public static final AccruedInterestAmt AccruedInterestAmt = register(org.fix4j.spec.fix50sp2.fieldtype.AccruedInterestAmt.INSTANCE);
    public static final SettlInstMode SettlInstMode = register(org.fix4j.spec.fix50sp2.fieldtype.SettlInstMode.INSTANCE);
    public static final AllocText AllocText = register(org.fix4j.spec.fix50sp2.fieldtype.AllocText.INSTANCE);
    public static final SettlInstID SettlInstID = register(org.fix4j.spec.fix50sp2.fieldtype.SettlInstID.INSTANCE);
    public static final SettlInstTransType SettlInstTransType = register(org.fix4j.spec.fix50sp2.fieldtype.SettlInstTransType.INSTANCE);
    public static final EmailThreadID EmailThreadID = register(org.fix4j.spec.fix50sp2.fieldtype.EmailThreadID.INSTANCE);
    public static final SettlInstSource SettlInstSource = register(org.fix4j.spec.fix50sp2.fieldtype.SettlInstSource.INSTANCE);
    public static final SettlLocation SettlLocation = register(org.fix4j.spec.fix50sp2.fieldtype.SettlLocation.INSTANCE);
    public static final SecurityType SecurityType = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityType.INSTANCE);
    public static final EffectiveTime EffectiveTime = register(org.fix4j.spec.fix50sp2.fieldtype.EffectiveTime.INSTANCE);
    public static final StandInstDbType StandInstDbType = register(org.fix4j.spec.fix50sp2.fieldtype.StandInstDbType.INSTANCE);
    public static final StandInstDbName StandInstDbName = register(org.fix4j.spec.fix50sp2.fieldtype.StandInstDbName.INSTANCE);
    public static final StandInstDbID StandInstDbID = register(org.fix4j.spec.fix50sp2.fieldtype.StandInstDbID.INSTANCE);
    public static final SettlDeliveryType SettlDeliveryType = register(org.fix4j.spec.fix50sp2.fieldtype.SettlDeliveryType.INSTANCE);
    public static final SettlDepositoryCode SettlDepositoryCode = register(org.fix4j.spec.fix50sp2.fieldtype.SettlDepositoryCode.INSTANCE);
    public static final SettlBrkrCode SettlBrkrCode = register(org.fix4j.spec.fix50sp2.fieldtype.SettlBrkrCode.INSTANCE);
    public static final SettlInstCode SettlInstCode = register(org.fix4j.spec.fix50sp2.fieldtype.SettlInstCode.INSTANCE);
    public static final SecuritySettlAgentName SecuritySettlAgentName = register(org.fix4j.spec.fix50sp2.fieldtype.SecuritySettlAgentName.INSTANCE);
    public static final SecuritySettlAgentCode SecuritySettlAgentCode = register(org.fix4j.spec.fix50sp2.fieldtype.SecuritySettlAgentCode.INSTANCE);
    public static final SecuritySettlAgentAcctNum SecuritySettlAgentAcctNum = register(org.fix4j.spec.fix50sp2.fieldtype.SecuritySettlAgentAcctNum.INSTANCE);
    public static final SecuritySettlAgentAcctName SecuritySettlAgentAcctName = register(org.fix4j.spec.fix50sp2.fieldtype.SecuritySettlAgentAcctName.INSTANCE);
    public static final SecuritySettlAgentContactName SecuritySettlAgentContactName = register(org.fix4j.spec.fix50sp2.fieldtype.SecuritySettlAgentContactName.INSTANCE);
    public static final SecuritySettlAgentContactPhone SecuritySettlAgentContactPhone = register(org.fix4j.spec.fix50sp2.fieldtype.SecuritySettlAgentContactPhone.INSTANCE);
    public static final CashSettlAgentName CashSettlAgentName = register(org.fix4j.spec.fix50sp2.fieldtype.CashSettlAgentName.INSTANCE);
    public static final CashSettlAgentCode CashSettlAgentCode = register(org.fix4j.spec.fix50sp2.fieldtype.CashSettlAgentCode.INSTANCE);
    public static final CashSettlAgentAcctNum CashSettlAgentAcctNum = register(org.fix4j.spec.fix50sp2.fieldtype.CashSettlAgentAcctNum.INSTANCE);
    public static final CashSettlAgentAcctName CashSettlAgentAcctName = register(org.fix4j.spec.fix50sp2.fieldtype.CashSettlAgentAcctName.INSTANCE);
    public static final CashSettlAgentContactName CashSettlAgentContactName = register(org.fix4j.spec.fix50sp2.fieldtype.CashSettlAgentContactName.INSTANCE);
    public static final CashSettlAgentContactPhone CashSettlAgentContactPhone = register(org.fix4j.spec.fix50sp2.fieldtype.CashSettlAgentContactPhone.INSTANCE);
    public static final BidSpotRate BidSpotRate = register(org.fix4j.spec.fix50sp2.fieldtype.BidSpotRate.INSTANCE);
    public static final BidForwardPoints BidForwardPoints = register(org.fix4j.spec.fix50sp2.fieldtype.BidForwardPoints.INSTANCE);
    public static final OfferSpotRate OfferSpotRate = register(org.fix4j.spec.fix50sp2.fieldtype.OfferSpotRate.INSTANCE);
    public static final OfferForwardPoints OfferForwardPoints = register(org.fix4j.spec.fix50sp2.fieldtype.OfferForwardPoints.INSTANCE);
    public static final OrderQty2 OrderQty2 = register(org.fix4j.spec.fix50sp2.fieldtype.OrderQty2.INSTANCE);
    public static final SettlDate2 SettlDate2 = register(org.fix4j.spec.fix50sp2.fieldtype.SettlDate2.INSTANCE);
    public static final LastSpotRate LastSpotRate = register(org.fix4j.spec.fix50sp2.fieldtype.LastSpotRate.INSTANCE);
    public static final LastForwardPoints LastForwardPoints = register(org.fix4j.spec.fix50sp2.fieldtype.LastForwardPoints.INSTANCE);
    public static final AllocLinkID AllocLinkID = register(org.fix4j.spec.fix50sp2.fieldtype.AllocLinkID.INSTANCE);
    public static final AllocLinkType AllocLinkType = register(org.fix4j.spec.fix50sp2.fieldtype.AllocLinkType.INSTANCE);
    public static final SecondaryOrderID SecondaryOrderID = register(org.fix4j.spec.fix50sp2.fieldtype.SecondaryOrderID.INSTANCE);
    public static final NoIOIQualifiers NoIOIQualifiers = register(org.fix4j.spec.fix50sp2.fieldtype.NoIOIQualifiers.INSTANCE);
    public static final MaturityMonthYear MaturityMonthYear = register(org.fix4j.spec.fix50sp2.fieldtype.MaturityMonthYear.INSTANCE);
    public static final PutOrCall PutOrCall = register(org.fix4j.spec.fix50sp2.fieldtype.PutOrCall.INSTANCE);
    public static final StrikePrice StrikePrice = register(org.fix4j.spec.fix50sp2.fieldtype.StrikePrice.INSTANCE);
    public static final CoveredOrUncovered CoveredOrUncovered = register(org.fix4j.spec.fix50sp2.fieldtype.CoveredOrUncovered.INSTANCE);
    public static final CustomerOrFirm CustomerOrFirm = register(org.fix4j.spec.fix50sp2.fieldtype.CustomerOrFirm.INSTANCE);
    public static final MaturityDay MaturityDay = register(org.fix4j.spec.fix50sp2.fieldtype.MaturityDay.INSTANCE);
    public static final OptAttribute OptAttribute = register(org.fix4j.spec.fix50sp2.fieldtype.OptAttribute.INSTANCE);
    public static final SecurityExchange SecurityExchange = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityExchange.INSTANCE);
    public static final NotifyBrokerOfCredit NotifyBrokerOfCredit = register(org.fix4j.spec.fix50sp2.fieldtype.NotifyBrokerOfCredit.INSTANCE);
    public static final AllocHandlInst AllocHandlInst = register(org.fix4j.spec.fix50sp2.fieldtype.AllocHandlInst.INSTANCE);
    public static final MaxShow MaxShow = register(org.fix4j.spec.fix50sp2.fieldtype.MaxShow.INSTANCE);
    public static final PegOffsetValue PegOffsetValue = register(org.fix4j.spec.fix50sp2.fieldtype.PegOffsetValue.INSTANCE);
    public static final XmlDataLen XmlDataLen = register(org.fix4j.spec.fix50sp2.fieldtype.XmlDataLen.INSTANCE);
    public static final XmlData XmlData = register(org.fix4j.spec.fix50sp2.fieldtype.XmlData.INSTANCE);
    public static final SettlInstRefID SettlInstRefID = register(org.fix4j.spec.fix50sp2.fieldtype.SettlInstRefID.INSTANCE);
    public static final NoRoutingIDs NoRoutingIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoRoutingIDs.INSTANCE);
    public static final RoutingType RoutingType = register(org.fix4j.spec.fix50sp2.fieldtype.RoutingType.INSTANCE);
    public static final RoutingID RoutingID = register(org.fix4j.spec.fix50sp2.fieldtype.RoutingID.INSTANCE);
    public static final Spread Spread = register(org.fix4j.spec.fix50sp2.fieldtype.Spread.INSTANCE);
    public static final Benchmark Benchmark = register(org.fix4j.spec.fix50sp2.fieldtype.Benchmark.INSTANCE);
    public static final BenchmarkCurveCurrency BenchmarkCurveCurrency = register(org.fix4j.spec.fix50sp2.fieldtype.BenchmarkCurveCurrency.INSTANCE);
    public static final BenchmarkCurveName BenchmarkCurveName = register(org.fix4j.spec.fix50sp2.fieldtype.BenchmarkCurveName.INSTANCE);
    public static final BenchmarkCurvePoint BenchmarkCurvePoint = register(org.fix4j.spec.fix50sp2.fieldtype.BenchmarkCurvePoint.INSTANCE);
    public static final CouponRate CouponRate = register(org.fix4j.spec.fix50sp2.fieldtype.CouponRate.INSTANCE);
    public static final CouponPaymentDate CouponPaymentDate = register(org.fix4j.spec.fix50sp2.fieldtype.CouponPaymentDate.INSTANCE);
    public static final IssueDate IssueDate = register(org.fix4j.spec.fix50sp2.fieldtype.IssueDate.INSTANCE);
    public static final RepurchaseTerm RepurchaseTerm = register(org.fix4j.spec.fix50sp2.fieldtype.RepurchaseTerm.INSTANCE);
    public static final RepurchaseRate RepurchaseRate = register(org.fix4j.spec.fix50sp2.fieldtype.RepurchaseRate.INSTANCE);
    public static final Factor Factor = register(org.fix4j.spec.fix50sp2.fieldtype.Factor.INSTANCE);
    public static final TradeOriginationDate TradeOriginationDate = register(org.fix4j.spec.fix50sp2.fieldtype.TradeOriginationDate.INSTANCE);
    public static final ExDate ExDate = register(org.fix4j.spec.fix50sp2.fieldtype.ExDate.INSTANCE);
    public static final ContractMultiplier ContractMultiplier = register(org.fix4j.spec.fix50sp2.fieldtype.ContractMultiplier.INSTANCE);
    public static final NoStipulations NoStipulations = register(org.fix4j.spec.fix50sp2.fieldtype.NoStipulations.INSTANCE);
    public static final StipulationType StipulationType = register(org.fix4j.spec.fix50sp2.fieldtype.StipulationType.INSTANCE);
    public static final StipulationValue StipulationValue = register(org.fix4j.spec.fix50sp2.fieldtype.StipulationValue.INSTANCE);
    public static final YieldType YieldType = register(org.fix4j.spec.fix50sp2.fieldtype.YieldType.INSTANCE);
    public static final Yield Yield = register(org.fix4j.spec.fix50sp2.fieldtype.Yield.INSTANCE);
    public static final TotalTakedown TotalTakedown = register(org.fix4j.spec.fix50sp2.fieldtype.TotalTakedown.INSTANCE);
    public static final Concession Concession = register(org.fix4j.spec.fix50sp2.fieldtype.Concession.INSTANCE);
    public static final RepoCollateralSecurityType RepoCollateralSecurityType = register(org.fix4j.spec.fix50sp2.fieldtype.RepoCollateralSecurityType.INSTANCE);
    public static final RedemptionDate RedemptionDate = register(org.fix4j.spec.fix50sp2.fieldtype.RedemptionDate.INSTANCE);
    public static final UnderlyingCouponPaymentDate UnderlyingCouponPaymentDate = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingCouponPaymentDate.INSTANCE);
    public static final UnderlyingIssueDate UnderlyingIssueDate = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingIssueDate.INSTANCE);
    public static final UnderlyingRepoCollateralSecurityType UnderlyingRepoCollateralSecurityType = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingRepoCollateralSecurityType.INSTANCE);
    public static final UnderlyingRepurchaseTerm UnderlyingRepurchaseTerm = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingRepurchaseTerm.INSTANCE);
    public static final UnderlyingRepurchaseRate UnderlyingRepurchaseRate = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingRepurchaseRate.INSTANCE);
    public static final UnderlyingFactor UnderlyingFactor = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingFactor.INSTANCE);
    public static final UnderlyingRedemptionDate UnderlyingRedemptionDate = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingRedemptionDate.INSTANCE);
    public static final LegCouponPaymentDate LegCouponPaymentDate = register(org.fix4j.spec.fix50sp2.fieldtype.LegCouponPaymentDate.INSTANCE);
    public static final LegIssueDate LegIssueDate = register(org.fix4j.spec.fix50sp2.fieldtype.LegIssueDate.INSTANCE);
    public static final LegRepoCollateralSecurityType LegRepoCollateralSecurityType = register(org.fix4j.spec.fix50sp2.fieldtype.LegRepoCollateralSecurityType.INSTANCE);
    public static final LegRepurchaseTerm LegRepurchaseTerm = register(org.fix4j.spec.fix50sp2.fieldtype.LegRepurchaseTerm.INSTANCE);
    public static final LegRepurchaseRate LegRepurchaseRate = register(org.fix4j.spec.fix50sp2.fieldtype.LegRepurchaseRate.INSTANCE);
    public static final LegFactor LegFactor = register(org.fix4j.spec.fix50sp2.fieldtype.LegFactor.INSTANCE);
    public static final LegRedemptionDate LegRedemptionDate = register(org.fix4j.spec.fix50sp2.fieldtype.LegRedemptionDate.INSTANCE);
    public static final CreditRating CreditRating = register(org.fix4j.spec.fix50sp2.fieldtype.CreditRating.INSTANCE);
    public static final UnderlyingCreditRating UnderlyingCreditRating = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingCreditRating.INSTANCE);
    public static final LegCreditRating LegCreditRating = register(org.fix4j.spec.fix50sp2.fieldtype.LegCreditRating.INSTANCE);
    public static final TradedFlatSwitch TradedFlatSwitch = register(org.fix4j.spec.fix50sp2.fieldtype.TradedFlatSwitch.INSTANCE);
    public static final BasisFeatureDate BasisFeatureDate = register(org.fix4j.spec.fix50sp2.fieldtype.BasisFeatureDate.INSTANCE);
    public static final BasisFeaturePrice BasisFeaturePrice = register(org.fix4j.spec.fix50sp2.fieldtype.BasisFeaturePrice.INSTANCE);
    public static final MDReqID MDReqID = register(org.fix4j.spec.fix50sp2.fieldtype.MDReqID.INSTANCE);
    public static final SubscriptionRequestType SubscriptionRequestType = register(org.fix4j.spec.fix50sp2.fieldtype.SubscriptionRequestType.INSTANCE);
    public static final MarketDepth MarketDepth = register(org.fix4j.spec.fix50sp2.fieldtype.MarketDepth.INSTANCE);
    public static final MDUpdateType MDUpdateType = register(org.fix4j.spec.fix50sp2.fieldtype.MDUpdateType.INSTANCE);
    public static final AggregatedBook AggregatedBook = register(org.fix4j.spec.fix50sp2.fieldtype.AggregatedBook.INSTANCE);
    public static final NoMDEntryTypes NoMDEntryTypes = register(org.fix4j.spec.fix50sp2.fieldtype.NoMDEntryTypes.INSTANCE);
    public static final NoMDEntries NoMDEntries = register(org.fix4j.spec.fix50sp2.fieldtype.NoMDEntries.INSTANCE);
    public static final MDEntryType MDEntryType = register(org.fix4j.spec.fix50sp2.fieldtype.MDEntryType.INSTANCE);
    public static final MDEntryPx MDEntryPx = register(org.fix4j.spec.fix50sp2.fieldtype.MDEntryPx.INSTANCE);
    public static final MDEntrySize MDEntrySize = register(org.fix4j.spec.fix50sp2.fieldtype.MDEntrySize.INSTANCE);
    public static final MDEntryDate MDEntryDate = register(org.fix4j.spec.fix50sp2.fieldtype.MDEntryDate.INSTANCE);
    public static final MDEntryTime MDEntryTime = register(org.fix4j.spec.fix50sp2.fieldtype.MDEntryTime.INSTANCE);
    public static final TickDirection TickDirection = register(org.fix4j.spec.fix50sp2.fieldtype.TickDirection.INSTANCE);
    public static final MDMkt MDMkt = register(org.fix4j.spec.fix50sp2.fieldtype.MDMkt.INSTANCE);
    public static final QuoteCondition QuoteCondition = register(org.fix4j.spec.fix50sp2.fieldtype.QuoteCondition.INSTANCE);
    public static final TradeCondition TradeCondition = register(org.fix4j.spec.fix50sp2.fieldtype.TradeCondition.INSTANCE);
    public static final MDEntryID MDEntryID = register(org.fix4j.spec.fix50sp2.fieldtype.MDEntryID.INSTANCE);
    public static final MDUpdateAction MDUpdateAction = register(org.fix4j.spec.fix50sp2.fieldtype.MDUpdateAction.INSTANCE);
    public static final MDEntryRefID MDEntryRefID = register(org.fix4j.spec.fix50sp2.fieldtype.MDEntryRefID.INSTANCE);
    public static final MDReqRejReason MDReqRejReason = register(org.fix4j.spec.fix50sp2.fieldtype.MDReqRejReason.INSTANCE);
    public static final MDEntryOriginator MDEntryOriginator = register(org.fix4j.spec.fix50sp2.fieldtype.MDEntryOriginator.INSTANCE);
    public static final LocationID LocationID = register(org.fix4j.spec.fix50sp2.fieldtype.LocationID.INSTANCE);
    public static final DeskID DeskID = register(org.fix4j.spec.fix50sp2.fieldtype.DeskID.INSTANCE);
    public static final DeleteReason DeleteReason = register(org.fix4j.spec.fix50sp2.fieldtype.DeleteReason.INSTANCE);
    public static final OpenCloseSettlFlag OpenCloseSettlFlag = register(org.fix4j.spec.fix50sp2.fieldtype.OpenCloseSettlFlag.INSTANCE);
    public static final SellerDays SellerDays = register(org.fix4j.spec.fix50sp2.fieldtype.SellerDays.INSTANCE);
    public static final MDEntryBuyer MDEntryBuyer = register(org.fix4j.spec.fix50sp2.fieldtype.MDEntryBuyer.INSTANCE);
    public static final MDEntrySeller MDEntrySeller = register(org.fix4j.spec.fix50sp2.fieldtype.MDEntrySeller.INSTANCE);
    public static final MDEntryPositionNo MDEntryPositionNo = register(org.fix4j.spec.fix50sp2.fieldtype.MDEntryPositionNo.INSTANCE);
    public static final FinancialStatus FinancialStatus = register(org.fix4j.spec.fix50sp2.fieldtype.FinancialStatus.INSTANCE);
    public static final CorporateAction CorporateAction = register(org.fix4j.spec.fix50sp2.fieldtype.CorporateAction.INSTANCE);
    public static final DefBidSize DefBidSize = register(org.fix4j.spec.fix50sp2.fieldtype.DefBidSize.INSTANCE);
    public static final DefOfferSize DefOfferSize = register(org.fix4j.spec.fix50sp2.fieldtype.DefOfferSize.INSTANCE);
    public static final NoQuoteEntries NoQuoteEntries = register(org.fix4j.spec.fix50sp2.fieldtype.NoQuoteEntries.INSTANCE);
    public static final NoQuoteSets NoQuoteSets = register(org.fix4j.spec.fix50sp2.fieldtype.NoQuoteSets.INSTANCE);
    public static final QuoteStatus QuoteStatus = register(org.fix4j.spec.fix50sp2.fieldtype.QuoteStatus.INSTANCE);
    public static final QuoteCancelType QuoteCancelType = register(org.fix4j.spec.fix50sp2.fieldtype.QuoteCancelType.INSTANCE);
    public static final QuoteEntryID QuoteEntryID = register(org.fix4j.spec.fix50sp2.fieldtype.QuoteEntryID.INSTANCE);
    public static final QuoteRejectReason QuoteRejectReason = register(org.fix4j.spec.fix50sp2.fieldtype.QuoteRejectReason.INSTANCE);
    public static final QuoteResponseLevel QuoteResponseLevel = register(org.fix4j.spec.fix50sp2.fieldtype.QuoteResponseLevel.INSTANCE);
    public static final QuoteSetID QuoteSetID = register(org.fix4j.spec.fix50sp2.fieldtype.QuoteSetID.INSTANCE);
    public static final QuoteRequestType QuoteRequestType = register(org.fix4j.spec.fix50sp2.fieldtype.QuoteRequestType.INSTANCE);
    public static final TotNoQuoteEntries TotNoQuoteEntries = register(org.fix4j.spec.fix50sp2.fieldtype.TotNoQuoteEntries.INSTANCE);
    public static final UnderlyingSecurityIDSource UnderlyingSecurityIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingSecurityIDSource.INSTANCE);
    public static final UnderlyingIssuer UnderlyingIssuer = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingIssuer.INSTANCE);
    public static final UnderlyingSecurityDesc UnderlyingSecurityDesc = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingSecurityDesc.INSTANCE);
    public static final UnderlyingSecurityExchange UnderlyingSecurityExchange = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingSecurityExchange.INSTANCE);
    public static final UnderlyingSecurityID UnderlyingSecurityID = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingSecurityID.INSTANCE);
    public static final UnderlyingSecurityType UnderlyingSecurityType = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingSecurityType.INSTANCE);
    public static final UnderlyingSymbol UnderlyingSymbol = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingSymbol.INSTANCE);
    public static final UnderlyingSymbolSfx UnderlyingSymbolSfx = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingSymbolSfx.INSTANCE);
    public static final UnderlyingMaturityMonthYear UnderlyingMaturityMonthYear = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingMaturityMonthYear.INSTANCE);
    public static final UnderlyingMaturityDay UnderlyingMaturityDay = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingMaturityDay.INSTANCE);
    public static final UnderlyingPutOrCall UnderlyingPutOrCall = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingPutOrCall.INSTANCE);
    public static final UnderlyingStrikePrice UnderlyingStrikePrice = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingStrikePrice.INSTANCE);
    public static final UnderlyingOptAttribute UnderlyingOptAttribute = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingOptAttribute.INSTANCE);
    public static final UnderlyingCurrency UnderlyingCurrency = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingCurrency.INSTANCE);
    public static final RatioQty RatioQty = register(org.fix4j.spec.fix50sp2.fieldtype.RatioQty.INSTANCE);
    public static final SecurityReqID SecurityReqID = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityReqID.INSTANCE);
    public static final SecurityRequestType SecurityRequestType = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityRequestType.INSTANCE);
    public static final SecurityResponseID SecurityResponseID = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityResponseID.INSTANCE);
    public static final SecurityResponseType SecurityResponseType = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityResponseType.INSTANCE);
    public static final SecurityStatusReqID SecurityStatusReqID = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityStatusReqID.INSTANCE);
    public static final UnsolicitedIndicator UnsolicitedIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.UnsolicitedIndicator.INSTANCE);
    public static final SecurityTradingStatus SecurityTradingStatus = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityTradingStatus.INSTANCE);
    public static final HaltReason HaltReason = register(org.fix4j.spec.fix50sp2.fieldtype.HaltReason.INSTANCE);
    public static final InViewOfCommon InViewOfCommon = register(org.fix4j.spec.fix50sp2.fieldtype.InViewOfCommon.INSTANCE);
    public static final DueToRelated DueToRelated = register(org.fix4j.spec.fix50sp2.fieldtype.DueToRelated.INSTANCE);
    public static final BuyVolume BuyVolume = register(org.fix4j.spec.fix50sp2.fieldtype.BuyVolume.INSTANCE);
    public static final SellVolume SellVolume = register(org.fix4j.spec.fix50sp2.fieldtype.SellVolume.INSTANCE);
    public static final HighPx HighPx = register(org.fix4j.spec.fix50sp2.fieldtype.HighPx.INSTANCE);
    public static final LowPx LowPx = register(org.fix4j.spec.fix50sp2.fieldtype.LowPx.INSTANCE);
    public static final Adjustment Adjustment = register(org.fix4j.spec.fix50sp2.fieldtype.Adjustment.INSTANCE);
    public static final TradSesReqID TradSesReqID = register(org.fix4j.spec.fix50sp2.fieldtype.TradSesReqID.INSTANCE);
    public static final TradingSessionID TradingSessionID = register(org.fix4j.spec.fix50sp2.fieldtype.TradingSessionID.INSTANCE);
    public static final ContraTrader ContraTrader = register(org.fix4j.spec.fix50sp2.fieldtype.ContraTrader.INSTANCE);
    public static final TradSesMethod TradSesMethod = register(org.fix4j.spec.fix50sp2.fieldtype.TradSesMethod.INSTANCE);
    public static final TradSesMode TradSesMode = register(org.fix4j.spec.fix50sp2.fieldtype.TradSesMode.INSTANCE);
    public static final TradSesStatus TradSesStatus = register(org.fix4j.spec.fix50sp2.fieldtype.TradSesStatus.INSTANCE);
    public static final TradSesStartTime TradSesStartTime = register(org.fix4j.spec.fix50sp2.fieldtype.TradSesStartTime.INSTANCE);
    public static final TradSesOpenTime TradSesOpenTime = register(org.fix4j.spec.fix50sp2.fieldtype.TradSesOpenTime.INSTANCE);
    public static final TradSesPreCloseTime TradSesPreCloseTime = register(org.fix4j.spec.fix50sp2.fieldtype.TradSesPreCloseTime.INSTANCE);
    public static final TradSesCloseTime TradSesCloseTime = register(org.fix4j.spec.fix50sp2.fieldtype.TradSesCloseTime.INSTANCE);
    public static final TradSesEndTime TradSesEndTime = register(org.fix4j.spec.fix50sp2.fieldtype.TradSesEndTime.INSTANCE);
    public static final NumberOfOrders NumberOfOrders = register(org.fix4j.spec.fix50sp2.fieldtype.NumberOfOrders.INSTANCE);
    public static final MessageEncoding MessageEncoding = register(org.fix4j.spec.fix50sp2.fieldtype.MessageEncoding.INSTANCE);
    public static final EncodedIssuerLen EncodedIssuerLen = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedIssuerLen.INSTANCE);
    public static final EncodedIssuer EncodedIssuer = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedIssuer.INSTANCE);
    public static final EncodedSecurityDescLen EncodedSecurityDescLen = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedSecurityDescLen.INSTANCE);
    public static final EncodedSecurityDesc EncodedSecurityDesc = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedSecurityDesc.INSTANCE);
    public static final EncodedListExecInstLen EncodedListExecInstLen = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedListExecInstLen.INSTANCE);
    public static final EncodedListExecInst EncodedListExecInst = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedListExecInst.INSTANCE);
    public static final EncodedTextLen EncodedTextLen = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedTextLen.INSTANCE);
    public static final EncodedText EncodedText = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedText.INSTANCE);
    public static final EncodedSubjectLen EncodedSubjectLen = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedSubjectLen.INSTANCE);
    public static final EncodedSubject EncodedSubject = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedSubject.INSTANCE);
    public static final EncodedHeadlineLen EncodedHeadlineLen = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedHeadlineLen.INSTANCE);
    public static final EncodedHeadline EncodedHeadline = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedHeadline.INSTANCE);
    public static final EncodedAllocTextLen EncodedAllocTextLen = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedAllocTextLen.INSTANCE);
    public static final EncodedAllocText EncodedAllocText = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedAllocText.INSTANCE);
    public static final EncodedUnderlyingIssuerLen EncodedUnderlyingIssuerLen = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedUnderlyingIssuerLen.INSTANCE);
    public static final EncodedUnderlyingIssuer EncodedUnderlyingIssuer = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedUnderlyingIssuer.INSTANCE);
    public static final EncodedUnderlyingSecurityDescLen EncodedUnderlyingSecurityDescLen = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedUnderlyingSecurityDescLen.INSTANCE);
    public static final EncodedUnderlyingSecurityDesc EncodedUnderlyingSecurityDesc = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedUnderlyingSecurityDesc.INSTANCE);
    public static final AllocPrice AllocPrice = register(org.fix4j.spec.fix50sp2.fieldtype.AllocPrice.INSTANCE);
    public static final QuoteSetValidUntilTime QuoteSetValidUntilTime = register(org.fix4j.spec.fix50sp2.fieldtype.QuoteSetValidUntilTime.INSTANCE);
    public static final QuoteEntryRejectReason QuoteEntryRejectReason = register(org.fix4j.spec.fix50sp2.fieldtype.QuoteEntryRejectReason.INSTANCE);
    public static final LastMsgSeqNumProcessed LastMsgSeqNumProcessed = register(org.fix4j.spec.fix50sp2.fieldtype.LastMsgSeqNumProcessed.INSTANCE);
    public static final OnBehalfOfSendingTime OnBehalfOfSendingTime = register(org.fix4j.spec.fix50sp2.fieldtype.OnBehalfOfSendingTime.INSTANCE);
    public static final RefTagID RefTagID = register(org.fix4j.spec.fix50sp2.fieldtype.RefTagID.INSTANCE);
    public static final RefMsgType RefMsgType = register(org.fix4j.spec.fix50sp2.fieldtype.RefMsgType.INSTANCE);
    public static final SessionRejectReason SessionRejectReason = register(org.fix4j.spec.fix50sp2.fieldtype.SessionRejectReason.INSTANCE);
    public static final BidRequestTransType BidRequestTransType = register(org.fix4j.spec.fix50sp2.fieldtype.BidRequestTransType.INSTANCE);
    public static final ContraBroker ContraBroker = register(org.fix4j.spec.fix50sp2.fieldtype.ContraBroker.INSTANCE);
    public static final ComplianceID ComplianceID = register(org.fix4j.spec.fix50sp2.fieldtype.ComplianceID.INSTANCE);
    public static final SolicitedFlag SolicitedFlag = register(org.fix4j.spec.fix50sp2.fieldtype.SolicitedFlag.INSTANCE);
    public static final ExecRestatementReason ExecRestatementReason = register(org.fix4j.spec.fix50sp2.fieldtype.ExecRestatementReason.INSTANCE);
    public static final BusinessRejectRefID BusinessRejectRefID = register(org.fix4j.spec.fix50sp2.fieldtype.BusinessRejectRefID.INSTANCE);
    public static final BusinessRejectReason BusinessRejectReason = register(org.fix4j.spec.fix50sp2.fieldtype.BusinessRejectReason.INSTANCE);
    public static final GrossTradeAmt GrossTradeAmt = register(org.fix4j.spec.fix50sp2.fieldtype.GrossTradeAmt.INSTANCE);
    public static final NoContraBrokers NoContraBrokers = register(org.fix4j.spec.fix50sp2.fieldtype.NoContraBrokers.INSTANCE);
    public static final MaxMessageSize MaxMessageSize = register(org.fix4j.spec.fix50sp2.fieldtype.MaxMessageSize.INSTANCE);
    public static final NoMsgTypes NoMsgTypes = register(org.fix4j.spec.fix50sp2.fieldtype.NoMsgTypes.INSTANCE);
    public static final MsgDirection MsgDirection = register(org.fix4j.spec.fix50sp2.fieldtype.MsgDirection.INSTANCE);
    public static final NoTradingSessions NoTradingSessions = register(org.fix4j.spec.fix50sp2.fieldtype.NoTradingSessions.INSTANCE);
    public static final TotalVolumeTraded TotalVolumeTraded = register(org.fix4j.spec.fix50sp2.fieldtype.TotalVolumeTraded.INSTANCE);
    public static final DiscretionInst DiscretionInst = register(org.fix4j.spec.fix50sp2.fieldtype.DiscretionInst.INSTANCE);
    public static final DiscretionOffsetValue DiscretionOffsetValue = register(org.fix4j.spec.fix50sp2.fieldtype.DiscretionOffsetValue.INSTANCE);
    public static final BidID BidID = register(org.fix4j.spec.fix50sp2.fieldtype.BidID.INSTANCE);
    public static final ClientBidID ClientBidID = register(org.fix4j.spec.fix50sp2.fieldtype.ClientBidID.INSTANCE);
    public static final ListName ListName = register(org.fix4j.spec.fix50sp2.fieldtype.ListName.INSTANCE);
    public static final TotNoRelatedSym TotNoRelatedSym = register(org.fix4j.spec.fix50sp2.fieldtype.TotNoRelatedSym.INSTANCE);
    public static final BidType BidType = register(org.fix4j.spec.fix50sp2.fieldtype.BidType.INSTANCE);
    public static final NumTickets NumTickets = register(org.fix4j.spec.fix50sp2.fieldtype.NumTickets.INSTANCE);
    public static final SideValue1 SideValue1 = register(org.fix4j.spec.fix50sp2.fieldtype.SideValue1.INSTANCE);
    public static final SideValue2 SideValue2 = register(org.fix4j.spec.fix50sp2.fieldtype.SideValue2.INSTANCE);
    public static final NoBidDescriptors NoBidDescriptors = register(org.fix4j.spec.fix50sp2.fieldtype.NoBidDescriptors.INSTANCE);
    public static final BidDescriptorType BidDescriptorType = register(org.fix4j.spec.fix50sp2.fieldtype.BidDescriptorType.INSTANCE);
    public static final BidDescriptor BidDescriptor = register(org.fix4j.spec.fix50sp2.fieldtype.BidDescriptor.INSTANCE);
    public static final SideValueInd SideValueInd = register(org.fix4j.spec.fix50sp2.fieldtype.SideValueInd.INSTANCE);
    public static final LiquidityPctLow LiquidityPctLow = register(org.fix4j.spec.fix50sp2.fieldtype.LiquidityPctLow.INSTANCE);
    public static final LiquidityPctHigh LiquidityPctHigh = register(org.fix4j.spec.fix50sp2.fieldtype.LiquidityPctHigh.INSTANCE);
    public static final LiquidityValue LiquidityValue = register(org.fix4j.spec.fix50sp2.fieldtype.LiquidityValue.INSTANCE);
    public static final EFPTrackingError EFPTrackingError = register(org.fix4j.spec.fix50sp2.fieldtype.EFPTrackingError.INSTANCE);
    public static final FairValue FairValue = register(org.fix4j.spec.fix50sp2.fieldtype.FairValue.INSTANCE);
    public static final OutsideIndexPct OutsideIndexPct = register(org.fix4j.spec.fix50sp2.fieldtype.OutsideIndexPct.INSTANCE);
    public static final ValueOfFutures ValueOfFutures = register(org.fix4j.spec.fix50sp2.fieldtype.ValueOfFutures.INSTANCE);
    public static final LiquidityIndType LiquidityIndType = register(org.fix4j.spec.fix50sp2.fieldtype.LiquidityIndType.INSTANCE);
    public static final WtAverageLiquidity WtAverageLiquidity = register(org.fix4j.spec.fix50sp2.fieldtype.WtAverageLiquidity.INSTANCE);
    public static final ExchangeForPhysical ExchangeForPhysical = register(org.fix4j.spec.fix50sp2.fieldtype.ExchangeForPhysical.INSTANCE);
    public static final OutMainCntryUIndex OutMainCntryUIndex = register(org.fix4j.spec.fix50sp2.fieldtype.OutMainCntryUIndex.INSTANCE);
    public static final CrossPercent CrossPercent = register(org.fix4j.spec.fix50sp2.fieldtype.CrossPercent.INSTANCE);
    public static final ProgRptReqs ProgRptReqs = register(org.fix4j.spec.fix50sp2.fieldtype.ProgRptReqs.INSTANCE);
    public static final ProgPeriodInterval ProgPeriodInterval = register(org.fix4j.spec.fix50sp2.fieldtype.ProgPeriodInterval.INSTANCE);
    public static final IncTaxInd IncTaxInd = register(org.fix4j.spec.fix50sp2.fieldtype.IncTaxInd.INSTANCE);
    public static final NumBidders NumBidders = register(org.fix4j.spec.fix50sp2.fieldtype.NumBidders.INSTANCE);
    public static final BidTradeType BidTradeType = register(org.fix4j.spec.fix50sp2.fieldtype.BidTradeType.INSTANCE);
    public static final BasisPxType BasisPxType = register(org.fix4j.spec.fix50sp2.fieldtype.BasisPxType.INSTANCE);
    public static final NoBidComponents NoBidComponents = register(org.fix4j.spec.fix50sp2.fieldtype.NoBidComponents.INSTANCE);
    public static final Country Country = register(org.fix4j.spec.fix50sp2.fieldtype.Country.INSTANCE);
    public static final TotNoStrikes TotNoStrikes = register(org.fix4j.spec.fix50sp2.fieldtype.TotNoStrikes.INSTANCE);
    public static final PriceType PriceType = register(org.fix4j.spec.fix50sp2.fieldtype.PriceType.INSTANCE);
    public static final DayOrderQty DayOrderQty = register(org.fix4j.spec.fix50sp2.fieldtype.DayOrderQty.INSTANCE);
    public static final DayCumQty DayCumQty = register(org.fix4j.spec.fix50sp2.fieldtype.DayCumQty.INSTANCE);
    public static final DayAvgPx DayAvgPx = register(org.fix4j.spec.fix50sp2.fieldtype.DayAvgPx.INSTANCE);
    public static final GTBookingInst GTBookingInst = register(org.fix4j.spec.fix50sp2.fieldtype.GTBookingInst.INSTANCE);
    public static final NoStrikes NoStrikes = register(org.fix4j.spec.fix50sp2.fieldtype.NoStrikes.INSTANCE);
    public static final ListStatusType ListStatusType = register(org.fix4j.spec.fix50sp2.fieldtype.ListStatusType.INSTANCE);
    public static final NetGrossInd NetGrossInd = register(org.fix4j.spec.fix50sp2.fieldtype.NetGrossInd.INSTANCE);
    public static final ListOrderStatus ListOrderStatus = register(org.fix4j.spec.fix50sp2.fieldtype.ListOrderStatus.INSTANCE);
    public static final ExpireDate ExpireDate = register(org.fix4j.spec.fix50sp2.fieldtype.ExpireDate.INSTANCE);
    public static final ListExecInstType ListExecInstType = register(org.fix4j.spec.fix50sp2.fieldtype.ListExecInstType.INSTANCE);
    public static final CxlRejResponseTo CxlRejResponseTo = register(org.fix4j.spec.fix50sp2.fieldtype.CxlRejResponseTo.INSTANCE);
    public static final UnderlyingCouponRate UnderlyingCouponRate = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingCouponRate.INSTANCE);
    public static final UnderlyingContractMultiplier UnderlyingContractMultiplier = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingContractMultiplier.INSTANCE);
    public static final ContraTradeQty ContraTradeQty = register(org.fix4j.spec.fix50sp2.fieldtype.ContraTradeQty.INSTANCE);
    public static final ContraTradeTime ContraTradeTime = register(org.fix4j.spec.fix50sp2.fieldtype.ContraTradeTime.INSTANCE);
    public static final ClearingFirm ClearingFirm = register(org.fix4j.spec.fix50sp2.fieldtype.ClearingFirm.INSTANCE);
    public static final ClearingAccount ClearingAccount = register(org.fix4j.spec.fix50sp2.fieldtype.ClearingAccount.INSTANCE);
    public static final LiquidityNumSecurities LiquidityNumSecurities = register(org.fix4j.spec.fix50sp2.fieldtype.LiquidityNumSecurities.INSTANCE);
    public static final MultiLegReportingType MultiLegReportingType = register(org.fix4j.spec.fix50sp2.fieldtype.MultiLegReportingType.INSTANCE);
    public static final StrikeTime StrikeTime = register(org.fix4j.spec.fix50sp2.fieldtype.StrikeTime.INSTANCE);
    public static final ListStatusText ListStatusText = register(org.fix4j.spec.fix50sp2.fieldtype.ListStatusText.INSTANCE);
    public static final EncodedListStatusTextLen EncodedListStatusTextLen = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedListStatusTextLen.INSTANCE);
    public static final EncodedListStatusText EncodedListStatusText = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedListStatusText.INSTANCE);
    public static final PartyIDSource PartyIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.PartyIDSource.INSTANCE);
    public static final PartyID PartyID = register(org.fix4j.spec.fix50sp2.fieldtype.PartyID.INSTANCE);
    public static final TotalVolumeTradedDate TotalVolumeTradedDate = register(org.fix4j.spec.fix50sp2.fieldtype.TotalVolumeTradedDate.INSTANCE);
    public static final NetChgPrevDay NetChgPrevDay = register(org.fix4j.spec.fix50sp2.fieldtype.NetChgPrevDay.INSTANCE);
    public static final PartyRole PartyRole = register(org.fix4j.spec.fix50sp2.fieldtype.PartyRole.INSTANCE);
    public static final NoPartyIDs NoPartyIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoPartyIDs.INSTANCE);
    public static final NoSecurityAltID NoSecurityAltID = register(org.fix4j.spec.fix50sp2.fieldtype.NoSecurityAltID.INSTANCE);
    public static final SecurityAltID SecurityAltID = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityAltID.INSTANCE);
    public static final SecurityAltIDSource SecurityAltIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityAltIDSource.INSTANCE);
    public static final NoUnderlyingSecurityAltID NoUnderlyingSecurityAltID = register(org.fix4j.spec.fix50sp2.fieldtype.NoUnderlyingSecurityAltID.INSTANCE);
    public static final UnderlyingSecurityAltID UnderlyingSecurityAltID = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingSecurityAltID.INSTANCE);
    public static final UnderlyingSecurityAltIDSource UnderlyingSecurityAltIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingSecurityAltIDSource.INSTANCE);
    public static final Product Product = register(org.fix4j.spec.fix50sp2.fieldtype.Product.INSTANCE);
    public static final CFICode CFICode = register(org.fix4j.spec.fix50sp2.fieldtype.CFICode.INSTANCE);
    public static final UnderlyingProduct UnderlyingProduct = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingProduct.INSTANCE);
    public static final UnderlyingCFICode UnderlyingCFICode = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingCFICode.INSTANCE);
    public static final TestMessageIndicator TestMessageIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.TestMessageIndicator.INSTANCE);
    public static final QuantityType QuantityType = register(org.fix4j.spec.fix50sp2.fieldtype.QuantityType.INSTANCE);
    public static final BookingRefID BookingRefID = register(org.fix4j.spec.fix50sp2.fieldtype.BookingRefID.INSTANCE);
    public static final IndividualAllocID IndividualAllocID = register(org.fix4j.spec.fix50sp2.fieldtype.IndividualAllocID.INSTANCE);
    public static final RoundingDirection RoundingDirection = register(org.fix4j.spec.fix50sp2.fieldtype.RoundingDirection.INSTANCE);
    public static final RoundingModulus RoundingModulus = register(org.fix4j.spec.fix50sp2.fieldtype.RoundingModulus.INSTANCE);
    public static final CountryOfIssue CountryOfIssue = register(org.fix4j.spec.fix50sp2.fieldtype.CountryOfIssue.INSTANCE);
    public static final StateOrProvinceOfIssue StateOrProvinceOfIssue = register(org.fix4j.spec.fix50sp2.fieldtype.StateOrProvinceOfIssue.INSTANCE);
    public static final LocaleOfIssue LocaleOfIssue = register(org.fix4j.spec.fix50sp2.fieldtype.LocaleOfIssue.INSTANCE);
    public static final NoRegistDtls NoRegistDtls = register(org.fix4j.spec.fix50sp2.fieldtype.NoRegistDtls.INSTANCE);
    public static final MailingDtls MailingDtls = register(org.fix4j.spec.fix50sp2.fieldtype.MailingDtls.INSTANCE);
    public static final InvestorCountryOfResidence InvestorCountryOfResidence = register(org.fix4j.spec.fix50sp2.fieldtype.InvestorCountryOfResidence.INSTANCE);
    public static final PaymentRef PaymentRef = register(org.fix4j.spec.fix50sp2.fieldtype.PaymentRef.INSTANCE);
    public static final DistribPaymentMethod DistribPaymentMethod = register(org.fix4j.spec.fix50sp2.fieldtype.DistribPaymentMethod.INSTANCE);
    public static final CashDistribCurr CashDistribCurr = register(org.fix4j.spec.fix50sp2.fieldtype.CashDistribCurr.INSTANCE);
    public static final CommCurrency CommCurrency = register(org.fix4j.spec.fix50sp2.fieldtype.CommCurrency.INSTANCE);
    public static final CancellationRights CancellationRights = register(org.fix4j.spec.fix50sp2.fieldtype.CancellationRights.INSTANCE);
    public static final MoneyLaunderingStatus MoneyLaunderingStatus = register(org.fix4j.spec.fix50sp2.fieldtype.MoneyLaunderingStatus.INSTANCE);
    public static final MailingInst MailingInst = register(org.fix4j.spec.fix50sp2.fieldtype.MailingInst.INSTANCE);
    public static final TransBkdTime TransBkdTime = register(org.fix4j.spec.fix50sp2.fieldtype.TransBkdTime.INSTANCE);
    public static final ExecPriceType ExecPriceType = register(org.fix4j.spec.fix50sp2.fieldtype.ExecPriceType.INSTANCE);
    public static final ExecPriceAdjustment ExecPriceAdjustment = register(org.fix4j.spec.fix50sp2.fieldtype.ExecPriceAdjustment.INSTANCE);
    public static final DateOfBirth DateOfBirth = register(org.fix4j.spec.fix50sp2.fieldtype.DateOfBirth.INSTANCE);
    public static final TradeReportTransType TradeReportTransType = register(org.fix4j.spec.fix50sp2.fieldtype.TradeReportTransType.INSTANCE);
    public static final CardHolderName CardHolderName = register(org.fix4j.spec.fix50sp2.fieldtype.CardHolderName.INSTANCE);
    public static final CardNumber CardNumber = register(org.fix4j.spec.fix50sp2.fieldtype.CardNumber.INSTANCE);
    public static final CardExpDate CardExpDate = register(org.fix4j.spec.fix50sp2.fieldtype.CardExpDate.INSTANCE);
    public static final CardIssNum CardIssNum = register(org.fix4j.spec.fix50sp2.fieldtype.CardIssNum.INSTANCE);
    public static final PaymentMethod PaymentMethod = register(org.fix4j.spec.fix50sp2.fieldtype.PaymentMethod.INSTANCE);
    public static final RegistAcctType RegistAcctType = register(org.fix4j.spec.fix50sp2.fieldtype.RegistAcctType.INSTANCE);
    public static final Designation Designation = register(org.fix4j.spec.fix50sp2.fieldtype.Designation.INSTANCE);
    public static final TaxAdvantageType TaxAdvantageType = register(org.fix4j.spec.fix50sp2.fieldtype.TaxAdvantageType.INSTANCE);
    public static final RegistRejReasonText RegistRejReasonText = register(org.fix4j.spec.fix50sp2.fieldtype.RegistRejReasonText.INSTANCE);
    public static final FundRenewWaiv FundRenewWaiv = register(org.fix4j.spec.fix50sp2.fieldtype.FundRenewWaiv.INSTANCE);
    public static final CashDistribAgentName CashDistribAgentName = register(org.fix4j.spec.fix50sp2.fieldtype.CashDistribAgentName.INSTANCE);
    public static final CashDistribAgentCode CashDistribAgentCode = register(org.fix4j.spec.fix50sp2.fieldtype.CashDistribAgentCode.INSTANCE);
    public static final CashDistribAgentAcctNumber CashDistribAgentAcctNumber = register(org.fix4j.spec.fix50sp2.fieldtype.CashDistribAgentAcctNumber.INSTANCE);
    public static final CashDistribPayRef CashDistribPayRef = register(org.fix4j.spec.fix50sp2.fieldtype.CashDistribPayRef.INSTANCE);
    public static final CashDistribAgentAcctName CashDistribAgentAcctName = register(org.fix4j.spec.fix50sp2.fieldtype.CashDistribAgentAcctName.INSTANCE);
    public static final CardStartDate CardStartDate = register(org.fix4j.spec.fix50sp2.fieldtype.CardStartDate.INSTANCE);
    public static final PaymentDate PaymentDate = register(org.fix4j.spec.fix50sp2.fieldtype.PaymentDate.INSTANCE);
    public static final PaymentRemitterID PaymentRemitterID = register(org.fix4j.spec.fix50sp2.fieldtype.PaymentRemitterID.INSTANCE);
    public static final RegistStatus RegistStatus = register(org.fix4j.spec.fix50sp2.fieldtype.RegistStatus.INSTANCE);
    public static final RegistRejReasonCode RegistRejReasonCode = register(org.fix4j.spec.fix50sp2.fieldtype.RegistRejReasonCode.INSTANCE);
    public static final RegistRefID RegistRefID = register(org.fix4j.spec.fix50sp2.fieldtype.RegistRefID.INSTANCE);
    public static final RegistDtls RegistDtls = register(org.fix4j.spec.fix50sp2.fieldtype.RegistDtls.INSTANCE);
    public static final NoDistribInsts NoDistribInsts = register(org.fix4j.spec.fix50sp2.fieldtype.NoDistribInsts.INSTANCE);
    public static final RegistEmail RegistEmail = register(org.fix4j.spec.fix50sp2.fieldtype.RegistEmail.INSTANCE);
    public static final DistribPercentage DistribPercentage = register(org.fix4j.spec.fix50sp2.fieldtype.DistribPercentage.INSTANCE);
    public static final RegistID RegistID = register(org.fix4j.spec.fix50sp2.fieldtype.RegistID.INSTANCE);
    public static final RegistTransType RegistTransType = register(org.fix4j.spec.fix50sp2.fieldtype.RegistTransType.INSTANCE);
    public static final ExecValuationPoint ExecValuationPoint = register(org.fix4j.spec.fix50sp2.fieldtype.ExecValuationPoint.INSTANCE);
    public static final OrderPercent OrderPercent = register(org.fix4j.spec.fix50sp2.fieldtype.OrderPercent.INSTANCE);
    public static final OwnershipType OwnershipType = register(org.fix4j.spec.fix50sp2.fieldtype.OwnershipType.INSTANCE);
    public static final NoContAmts NoContAmts = register(org.fix4j.spec.fix50sp2.fieldtype.NoContAmts.INSTANCE);
    public static final ContAmtType ContAmtType = register(org.fix4j.spec.fix50sp2.fieldtype.ContAmtType.INSTANCE);
    public static final ContAmtValue ContAmtValue = register(org.fix4j.spec.fix50sp2.fieldtype.ContAmtValue.INSTANCE);
    public static final ContAmtCurr ContAmtCurr = register(org.fix4j.spec.fix50sp2.fieldtype.ContAmtCurr.INSTANCE);
    public static final OwnerType OwnerType = register(org.fix4j.spec.fix50sp2.fieldtype.OwnerType.INSTANCE);
    public static final PartySubID PartySubID = register(org.fix4j.spec.fix50sp2.fieldtype.PartySubID.INSTANCE);
    public static final NestedPartyID NestedPartyID = register(org.fix4j.spec.fix50sp2.fieldtype.NestedPartyID.INSTANCE);
    public static final NestedPartyIDSource NestedPartyIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.NestedPartyIDSource.INSTANCE);
    public static final SecondaryClOrdID SecondaryClOrdID = register(org.fix4j.spec.fix50sp2.fieldtype.SecondaryClOrdID.INSTANCE);
    public static final SecondaryExecID SecondaryExecID = register(org.fix4j.spec.fix50sp2.fieldtype.SecondaryExecID.INSTANCE);
    public static final OrderCapacity OrderCapacity = register(org.fix4j.spec.fix50sp2.fieldtype.OrderCapacity.INSTANCE);
    public static final OrderRestrictions OrderRestrictions = register(org.fix4j.spec.fix50sp2.fieldtype.OrderRestrictions.INSTANCE);
    public static final MassCancelRequestType MassCancelRequestType = register(org.fix4j.spec.fix50sp2.fieldtype.MassCancelRequestType.INSTANCE);
    public static final MassCancelResponse MassCancelResponse = register(org.fix4j.spec.fix50sp2.fieldtype.MassCancelResponse.INSTANCE);
    public static final MassCancelRejectReason MassCancelRejectReason = register(org.fix4j.spec.fix50sp2.fieldtype.MassCancelRejectReason.INSTANCE);
    public static final TotalAffectedOrders TotalAffectedOrders = register(org.fix4j.spec.fix50sp2.fieldtype.TotalAffectedOrders.INSTANCE);
    public static final NoAffectedOrders NoAffectedOrders = register(org.fix4j.spec.fix50sp2.fieldtype.NoAffectedOrders.INSTANCE);
    public static final AffectedOrderID AffectedOrderID = register(org.fix4j.spec.fix50sp2.fieldtype.AffectedOrderID.INSTANCE);
    public static final AffectedSecondaryOrderID AffectedSecondaryOrderID = register(org.fix4j.spec.fix50sp2.fieldtype.AffectedSecondaryOrderID.INSTANCE);
    public static final QuoteType QuoteType = register(org.fix4j.spec.fix50sp2.fieldtype.QuoteType.INSTANCE);
    public static final NestedPartyRole NestedPartyRole = register(org.fix4j.spec.fix50sp2.fieldtype.NestedPartyRole.INSTANCE);
    public static final NoNestedPartyIDs NoNestedPartyIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoNestedPartyIDs.INSTANCE);
    public static final TotalAccruedInterestAmt TotalAccruedInterestAmt = register(org.fix4j.spec.fix50sp2.fieldtype.TotalAccruedInterestAmt.INSTANCE);
    public static final MaturityDate MaturityDate = register(org.fix4j.spec.fix50sp2.fieldtype.MaturityDate.INSTANCE);
    public static final UnderlyingMaturityDate UnderlyingMaturityDate = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingMaturityDate.INSTANCE);
    public static final InstrRegistry InstrRegistry = register(org.fix4j.spec.fix50sp2.fieldtype.InstrRegistry.INSTANCE);
    public static final CashMargin CashMargin = register(org.fix4j.spec.fix50sp2.fieldtype.CashMargin.INSTANCE);
    public static final NestedPartySubID NestedPartySubID = register(org.fix4j.spec.fix50sp2.fieldtype.NestedPartySubID.INSTANCE);
    public static final Scope Scope = register(org.fix4j.spec.fix50sp2.fieldtype.Scope.INSTANCE);
    public static final MDImplicitDelete MDImplicitDelete = register(org.fix4j.spec.fix50sp2.fieldtype.MDImplicitDelete.INSTANCE);
    public static final CrossID CrossID = register(org.fix4j.spec.fix50sp2.fieldtype.CrossID.INSTANCE);
    public static final CrossType CrossType = register(org.fix4j.spec.fix50sp2.fieldtype.CrossType.INSTANCE);
    public static final CrossPrioritization CrossPrioritization = register(org.fix4j.spec.fix50sp2.fieldtype.CrossPrioritization.INSTANCE);
    public static final OrigCrossID OrigCrossID = register(org.fix4j.spec.fix50sp2.fieldtype.OrigCrossID.INSTANCE);
    public static final NoSides NoSides = register(org.fix4j.spec.fix50sp2.fieldtype.NoSides.INSTANCE);
    public static final Username Username = register(org.fix4j.spec.fix50sp2.fieldtype.Username.INSTANCE);
    public static final Password Password = register(org.fix4j.spec.fix50sp2.fieldtype.Password.INSTANCE);
    public static final NoLegs NoLegs = register(org.fix4j.spec.fix50sp2.fieldtype.NoLegs.INSTANCE);
    public static final LegCurrency LegCurrency = register(org.fix4j.spec.fix50sp2.fieldtype.LegCurrency.INSTANCE);
    public static final TotNoSecurityTypes TotNoSecurityTypes = register(org.fix4j.spec.fix50sp2.fieldtype.TotNoSecurityTypes.INSTANCE);
    public static final NoSecurityTypes NoSecurityTypes = register(org.fix4j.spec.fix50sp2.fieldtype.NoSecurityTypes.INSTANCE);
    public static final SecurityListRequestType SecurityListRequestType = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityListRequestType.INSTANCE);
    public static final SecurityRequestResult SecurityRequestResult = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityRequestResult.INSTANCE);
    public static final RoundLot RoundLot = register(org.fix4j.spec.fix50sp2.fieldtype.RoundLot.INSTANCE);
    public static final MinTradeVol MinTradeVol = register(org.fix4j.spec.fix50sp2.fieldtype.MinTradeVol.INSTANCE);
    public static final MultiLegRptTypeReq MultiLegRptTypeReq = register(org.fix4j.spec.fix50sp2.fieldtype.MultiLegRptTypeReq.INSTANCE);
    public static final LegPositionEffect LegPositionEffect = register(org.fix4j.spec.fix50sp2.fieldtype.LegPositionEffect.INSTANCE);
    public static final LegCoveredOrUncovered LegCoveredOrUncovered = register(org.fix4j.spec.fix50sp2.fieldtype.LegCoveredOrUncovered.INSTANCE);
    public static final LegPrice LegPrice = register(org.fix4j.spec.fix50sp2.fieldtype.LegPrice.INSTANCE);
    public static final TradSesStatusRejReason TradSesStatusRejReason = register(org.fix4j.spec.fix50sp2.fieldtype.TradSesStatusRejReason.INSTANCE);
    public static final TradeRequestID TradeRequestID = register(org.fix4j.spec.fix50sp2.fieldtype.TradeRequestID.INSTANCE);
    public static final TradeRequestType TradeRequestType = register(org.fix4j.spec.fix50sp2.fieldtype.TradeRequestType.INSTANCE);
    public static final PreviouslyReported PreviouslyReported = register(org.fix4j.spec.fix50sp2.fieldtype.PreviouslyReported.INSTANCE);
    public static final TradeReportID TradeReportID = register(org.fix4j.spec.fix50sp2.fieldtype.TradeReportID.INSTANCE);
    public static final TradeReportRefID TradeReportRefID = register(org.fix4j.spec.fix50sp2.fieldtype.TradeReportRefID.INSTANCE);
    public static final MatchStatus MatchStatus = register(org.fix4j.spec.fix50sp2.fieldtype.MatchStatus.INSTANCE);
    public static final MatchType MatchType = register(org.fix4j.spec.fix50sp2.fieldtype.MatchType.INSTANCE);
    public static final OddLot OddLot = register(org.fix4j.spec.fix50sp2.fieldtype.OddLot.INSTANCE);
    public static final NoClearingInstructions NoClearingInstructions = register(org.fix4j.spec.fix50sp2.fieldtype.NoClearingInstructions.INSTANCE);
    public static final ClearingInstruction ClearingInstruction = register(org.fix4j.spec.fix50sp2.fieldtype.ClearingInstruction.INSTANCE);
    public static final TradeInputSource TradeInputSource = register(org.fix4j.spec.fix50sp2.fieldtype.TradeInputSource.INSTANCE);
    public static final TradeInputDevice TradeInputDevice = register(org.fix4j.spec.fix50sp2.fieldtype.TradeInputDevice.INSTANCE);
    public static final NoDates NoDates = register(org.fix4j.spec.fix50sp2.fieldtype.NoDates.INSTANCE);
    public static final AccountType AccountType = register(org.fix4j.spec.fix50sp2.fieldtype.AccountType.INSTANCE);
    public static final CustOrderCapacity CustOrderCapacity = register(org.fix4j.spec.fix50sp2.fieldtype.CustOrderCapacity.INSTANCE);
    public static final ClOrdLinkID ClOrdLinkID = register(org.fix4j.spec.fix50sp2.fieldtype.ClOrdLinkID.INSTANCE);
    public static final MassStatusReqID MassStatusReqID = register(org.fix4j.spec.fix50sp2.fieldtype.MassStatusReqID.INSTANCE);
    public static final MassStatusReqType MassStatusReqType = register(org.fix4j.spec.fix50sp2.fieldtype.MassStatusReqType.INSTANCE);
    public static final OrigOrdModTime OrigOrdModTime = register(org.fix4j.spec.fix50sp2.fieldtype.OrigOrdModTime.INSTANCE);
    public static final LegSettlType LegSettlType = register(org.fix4j.spec.fix50sp2.fieldtype.LegSettlType.INSTANCE);
    public static final LegSettlDate LegSettlDate = register(org.fix4j.spec.fix50sp2.fieldtype.LegSettlDate.INSTANCE);
    public static final DayBookingInst DayBookingInst = register(org.fix4j.spec.fix50sp2.fieldtype.DayBookingInst.INSTANCE);
    public static final BookingUnit BookingUnit = register(org.fix4j.spec.fix50sp2.fieldtype.BookingUnit.INSTANCE);
    public static final PreallocMethod PreallocMethod = register(org.fix4j.spec.fix50sp2.fieldtype.PreallocMethod.INSTANCE);
    public static final UnderlyingCountryOfIssue UnderlyingCountryOfIssue = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingCountryOfIssue.INSTANCE);
    public static final UnderlyingStateOrProvinceOfIssue UnderlyingStateOrProvinceOfIssue = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingStateOrProvinceOfIssue.INSTANCE);
    public static final UnderlyingLocaleOfIssue UnderlyingLocaleOfIssue = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingLocaleOfIssue.INSTANCE);
    public static final UnderlyingInstrRegistry UnderlyingInstrRegistry = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingInstrRegistry.INSTANCE);
    public static final LegCountryOfIssue LegCountryOfIssue = register(org.fix4j.spec.fix50sp2.fieldtype.LegCountryOfIssue.INSTANCE);
    public static final LegStateOrProvinceOfIssue LegStateOrProvinceOfIssue = register(org.fix4j.spec.fix50sp2.fieldtype.LegStateOrProvinceOfIssue.INSTANCE);
    public static final LegLocaleOfIssue LegLocaleOfIssue = register(org.fix4j.spec.fix50sp2.fieldtype.LegLocaleOfIssue.INSTANCE);
    public static final LegInstrRegistry LegInstrRegistry = register(org.fix4j.spec.fix50sp2.fieldtype.LegInstrRegistry.INSTANCE);
    public static final LegSymbol LegSymbol = register(org.fix4j.spec.fix50sp2.fieldtype.LegSymbol.INSTANCE);
    public static final LegSymbolSfx LegSymbolSfx = register(org.fix4j.spec.fix50sp2.fieldtype.LegSymbolSfx.INSTANCE);
    public static final LegSecurityID LegSecurityID = register(org.fix4j.spec.fix50sp2.fieldtype.LegSecurityID.INSTANCE);
    public static final LegSecurityIDSource LegSecurityIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.LegSecurityIDSource.INSTANCE);
    public static final NoLegSecurityAltID NoLegSecurityAltID = register(org.fix4j.spec.fix50sp2.fieldtype.NoLegSecurityAltID.INSTANCE);
    public static final LegSecurityAltID LegSecurityAltID = register(org.fix4j.spec.fix50sp2.fieldtype.LegSecurityAltID.INSTANCE);
    public static final LegSecurityAltIDSource LegSecurityAltIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.LegSecurityAltIDSource.INSTANCE);
    public static final LegProduct LegProduct = register(org.fix4j.spec.fix50sp2.fieldtype.LegProduct.INSTANCE);
    public static final LegCFICode LegCFICode = register(org.fix4j.spec.fix50sp2.fieldtype.LegCFICode.INSTANCE);
    public static final LegSecurityType LegSecurityType = register(org.fix4j.spec.fix50sp2.fieldtype.LegSecurityType.INSTANCE);
    public static final LegMaturityMonthYear LegMaturityMonthYear = register(org.fix4j.spec.fix50sp2.fieldtype.LegMaturityMonthYear.INSTANCE);
    public static final LegMaturityDate LegMaturityDate = register(org.fix4j.spec.fix50sp2.fieldtype.LegMaturityDate.INSTANCE);
    public static final LegStrikePrice LegStrikePrice = register(org.fix4j.spec.fix50sp2.fieldtype.LegStrikePrice.INSTANCE);
    public static final LegOptAttribute LegOptAttribute = register(org.fix4j.spec.fix50sp2.fieldtype.LegOptAttribute.INSTANCE);
    public static final LegContractMultiplier LegContractMultiplier = register(org.fix4j.spec.fix50sp2.fieldtype.LegContractMultiplier.INSTANCE);
    public static final LegCouponRate LegCouponRate = register(org.fix4j.spec.fix50sp2.fieldtype.LegCouponRate.INSTANCE);
    public static final LegSecurityExchange LegSecurityExchange = register(org.fix4j.spec.fix50sp2.fieldtype.LegSecurityExchange.INSTANCE);
    public static final LegIssuer LegIssuer = register(org.fix4j.spec.fix50sp2.fieldtype.LegIssuer.INSTANCE);
    public static final EncodedLegIssuerLen EncodedLegIssuerLen = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedLegIssuerLen.INSTANCE);
    public static final EncodedLegIssuer EncodedLegIssuer = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedLegIssuer.INSTANCE);
    public static final LegSecurityDesc LegSecurityDesc = register(org.fix4j.spec.fix50sp2.fieldtype.LegSecurityDesc.INSTANCE);
    public static final EncodedLegSecurityDescLen EncodedLegSecurityDescLen = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedLegSecurityDescLen.INSTANCE);
    public static final EncodedLegSecurityDesc EncodedLegSecurityDesc = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedLegSecurityDesc.INSTANCE);
    public static final LegRatioQty LegRatioQty = register(org.fix4j.spec.fix50sp2.fieldtype.LegRatioQty.INSTANCE);
    public static final LegSide LegSide = register(org.fix4j.spec.fix50sp2.fieldtype.LegSide.INSTANCE);
    public static final TradingSessionSubID TradingSessionSubID = register(org.fix4j.spec.fix50sp2.fieldtype.TradingSessionSubID.INSTANCE);
    public static final AllocType AllocType = register(org.fix4j.spec.fix50sp2.fieldtype.AllocType.INSTANCE);
    public static final NoHops NoHops = register(org.fix4j.spec.fix50sp2.fieldtype.NoHops.INSTANCE);
    public static final HopCompID HopCompID = register(org.fix4j.spec.fix50sp2.fieldtype.HopCompID.INSTANCE);
    public static final HopSendingTime HopSendingTime = register(org.fix4j.spec.fix50sp2.fieldtype.HopSendingTime.INSTANCE);
    public static final HopRefID HopRefID = register(org.fix4j.spec.fix50sp2.fieldtype.HopRefID.INSTANCE);
    public static final MidPx MidPx = register(org.fix4j.spec.fix50sp2.fieldtype.MidPx.INSTANCE);
    public static final BidYield BidYield = register(org.fix4j.spec.fix50sp2.fieldtype.BidYield.INSTANCE);
    public static final MidYield MidYield = register(org.fix4j.spec.fix50sp2.fieldtype.MidYield.INSTANCE);
    public static final OfferYield OfferYield = register(org.fix4j.spec.fix50sp2.fieldtype.OfferYield.INSTANCE);
    public static final ClearingFeeIndicator ClearingFeeIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.ClearingFeeIndicator.INSTANCE);
    public static final WorkingIndicator WorkingIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.WorkingIndicator.INSTANCE);
    public static final LegLastPx LegLastPx = register(org.fix4j.spec.fix50sp2.fieldtype.LegLastPx.INSTANCE);
    public static final PriorityIndicator PriorityIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.PriorityIndicator.INSTANCE);
    public static final PriceImprovement PriceImprovement = register(org.fix4j.spec.fix50sp2.fieldtype.PriceImprovement.INSTANCE);
    public static final Price2 Price2 = register(org.fix4j.spec.fix50sp2.fieldtype.Price2.INSTANCE);
    public static final LastForwardPoints2 LastForwardPoints2 = register(org.fix4j.spec.fix50sp2.fieldtype.LastForwardPoints2.INSTANCE);
    public static final BidForwardPoints2 BidForwardPoints2 = register(org.fix4j.spec.fix50sp2.fieldtype.BidForwardPoints2.INSTANCE);
    public static final OfferForwardPoints2 OfferForwardPoints2 = register(org.fix4j.spec.fix50sp2.fieldtype.OfferForwardPoints2.INSTANCE);
    public static final RFQReqID RFQReqID = register(org.fix4j.spec.fix50sp2.fieldtype.RFQReqID.INSTANCE);
    public static final MktBidPx MktBidPx = register(org.fix4j.spec.fix50sp2.fieldtype.MktBidPx.INSTANCE);
    public static final MktOfferPx MktOfferPx = register(org.fix4j.spec.fix50sp2.fieldtype.MktOfferPx.INSTANCE);
    public static final MinBidSize MinBidSize = register(org.fix4j.spec.fix50sp2.fieldtype.MinBidSize.INSTANCE);
    public static final MinOfferSize MinOfferSize = register(org.fix4j.spec.fix50sp2.fieldtype.MinOfferSize.INSTANCE);
    public static final QuoteStatusReqID QuoteStatusReqID = register(org.fix4j.spec.fix50sp2.fieldtype.QuoteStatusReqID.INSTANCE);
    public static final LegalConfirm LegalConfirm = register(org.fix4j.spec.fix50sp2.fieldtype.LegalConfirm.INSTANCE);
    public static final UnderlyingLastPx UnderlyingLastPx = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingLastPx.INSTANCE);
    public static final UnderlyingLastQty UnderlyingLastQty = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingLastQty.INSTANCE);
    public static final SecDefStatus SecDefStatus = register(org.fix4j.spec.fix50sp2.fieldtype.SecDefStatus.INSTANCE);
    public static final LegRefID LegRefID = register(org.fix4j.spec.fix50sp2.fieldtype.LegRefID.INSTANCE);
    public static final ContraLegRefID ContraLegRefID = register(org.fix4j.spec.fix50sp2.fieldtype.ContraLegRefID.INSTANCE);
    public static final SettlCurrBidFxRate SettlCurrBidFxRate = register(org.fix4j.spec.fix50sp2.fieldtype.SettlCurrBidFxRate.INSTANCE);
    public static final SettlCurrOfferFxRate SettlCurrOfferFxRate = register(org.fix4j.spec.fix50sp2.fieldtype.SettlCurrOfferFxRate.INSTANCE);
    public static final QuoteRequestRejectReason QuoteRequestRejectReason = register(org.fix4j.spec.fix50sp2.fieldtype.QuoteRequestRejectReason.INSTANCE);
    public static final SideComplianceID SideComplianceID = register(org.fix4j.spec.fix50sp2.fieldtype.SideComplianceID.INSTANCE);
    public static final AcctIDSource AcctIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.AcctIDSource.INSTANCE);
    public static final AllocAcctIDSource AllocAcctIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.AllocAcctIDSource.INSTANCE);
    public static final BenchmarkPrice BenchmarkPrice = register(org.fix4j.spec.fix50sp2.fieldtype.BenchmarkPrice.INSTANCE);
    public static final BenchmarkPriceType BenchmarkPriceType = register(org.fix4j.spec.fix50sp2.fieldtype.BenchmarkPriceType.INSTANCE);
    public static final ConfirmID ConfirmID = register(org.fix4j.spec.fix50sp2.fieldtype.ConfirmID.INSTANCE);
    public static final ConfirmStatus ConfirmStatus = register(org.fix4j.spec.fix50sp2.fieldtype.ConfirmStatus.INSTANCE);
    public static final ConfirmTransType ConfirmTransType = register(org.fix4j.spec.fix50sp2.fieldtype.ConfirmTransType.INSTANCE);
    public static final ContractSettlMonth ContractSettlMonth = register(org.fix4j.spec.fix50sp2.fieldtype.ContractSettlMonth.INSTANCE);
    public static final DeliveryForm DeliveryForm = register(org.fix4j.spec.fix50sp2.fieldtype.DeliveryForm.INSTANCE);
    public static final LastParPx LastParPx = register(org.fix4j.spec.fix50sp2.fieldtype.LastParPx.INSTANCE);
    public static final NoLegAllocs NoLegAllocs = register(org.fix4j.spec.fix50sp2.fieldtype.NoLegAllocs.INSTANCE);
    public static final LegAllocAccount LegAllocAccount = register(org.fix4j.spec.fix50sp2.fieldtype.LegAllocAccount.INSTANCE);
    public static final LegIndividualAllocID LegIndividualAllocID = register(org.fix4j.spec.fix50sp2.fieldtype.LegIndividualAllocID.INSTANCE);
    public static final LegAllocQty LegAllocQty = register(org.fix4j.spec.fix50sp2.fieldtype.LegAllocQty.INSTANCE);
    public static final LegAllocAcctIDSource LegAllocAcctIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.LegAllocAcctIDSource.INSTANCE);
    public static final LegSettlCurrency LegSettlCurrency = register(org.fix4j.spec.fix50sp2.fieldtype.LegSettlCurrency.INSTANCE);
    public static final LegBenchmarkCurveCurrency LegBenchmarkCurveCurrency = register(org.fix4j.spec.fix50sp2.fieldtype.LegBenchmarkCurveCurrency.INSTANCE);
    public static final LegBenchmarkCurveName LegBenchmarkCurveName = register(org.fix4j.spec.fix50sp2.fieldtype.LegBenchmarkCurveName.INSTANCE);
    public static final LegBenchmarkCurvePoint LegBenchmarkCurvePoint = register(org.fix4j.spec.fix50sp2.fieldtype.LegBenchmarkCurvePoint.INSTANCE);
    public static final LegBenchmarkPrice LegBenchmarkPrice = register(org.fix4j.spec.fix50sp2.fieldtype.LegBenchmarkPrice.INSTANCE);
    public static final LegBenchmarkPriceType LegBenchmarkPriceType = register(org.fix4j.spec.fix50sp2.fieldtype.LegBenchmarkPriceType.INSTANCE);
    public static final LegBidPx LegBidPx = register(org.fix4j.spec.fix50sp2.fieldtype.LegBidPx.INSTANCE);
    public static final LegIOIQty LegIOIQty = register(org.fix4j.spec.fix50sp2.fieldtype.LegIOIQty.INSTANCE);
    public static final NoLegStipulations NoLegStipulations = register(org.fix4j.spec.fix50sp2.fieldtype.NoLegStipulations.INSTANCE);
    public static final LegOfferPx LegOfferPx = register(org.fix4j.spec.fix50sp2.fieldtype.LegOfferPx.INSTANCE);
    public static final LegOrderQty LegOrderQty = register(org.fix4j.spec.fix50sp2.fieldtype.LegOrderQty.INSTANCE);
    public static final LegPriceType LegPriceType = register(org.fix4j.spec.fix50sp2.fieldtype.LegPriceType.INSTANCE);
    public static final LegQty LegQty = register(org.fix4j.spec.fix50sp2.fieldtype.LegQty.INSTANCE);
    public static final LegStipulationType LegStipulationType = register(org.fix4j.spec.fix50sp2.fieldtype.LegStipulationType.INSTANCE);
    public static final LegStipulationValue LegStipulationValue = register(org.fix4j.spec.fix50sp2.fieldtype.LegStipulationValue.INSTANCE);
    public static final LegSwapType LegSwapType = register(org.fix4j.spec.fix50sp2.fieldtype.LegSwapType.INSTANCE);
    public static final Pool Pool = register(org.fix4j.spec.fix50sp2.fieldtype.Pool.INSTANCE);
    public static final QuotePriceType QuotePriceType = register(org.fix4j.spec.fix50sp2.fieldtype.QuotePriceType.INSTANCE);
    public static final QuoteRespID QuoteRespID = register(org.fix4j.spec.fix50sp2.fieldtype.QuoteRespID.INSTANCE);
    public static final QuoteRespType QuoteRespType = register(org.fix4j.spec.fix50sp2.fieldtype.QuoteRespType.INSTANCE);
    public static final QuoteQualifier QuoteQualifier = register(org.fix4j.spec.fix50sp2.fieldtype.QuoteQualifier.INSTANCE);
    public static final YieldRedemptionDate YieldRedemptionDate = register(org.fix4j.spec.fix50sp2.fieldtype.YieldRedemptionDate.INSTANCE);
    public static final YieldRedemptionPrice YieldRedemptionPrice = register(org.fix4j.spec.fix50sp2.fieldtype.YieldRedemptionPrice.INSTANCE);
    public static final YieldRedemptionPriceType YieldRedemptionPriceType = register(org.fix4j.spec.fix50sp2.fieldtype.YieldRedemptionPriceType.INSTANCE);
    public static final BenchmarkSecurityID BenchmarkSecurityID = register(org.fix4j.spec.fix50sp2.fieldtype.BenchmarkSecurityID.INSTANCE);
    public static final ReversalIndicator ReversalIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.ReversalIndicator.INSTANCE);
    public static final YieldCalcDate YieldCalcDate = register(org.fix4j.spec.fix50sp2.fieldtype.YieldCalcDate.INSTANCE);
    public static final NoPositions NoPositions = register(org.fix4j.spec.fix50sp2.fieldtype.NoPositions.INSTANCE);
    public static final PosType PosType = register(org.fix4j.spec.fix50sp2.fieldtype.PosType.INSTANCE);
    public static final LongQty LongQty = register(org.fix4j.spec.fix50sp2.fieldtype.LongQty.INSTANCE);
    public static final ShortQty ShortQty = register(org.fix4j.spec.fix50sp2.fieldtype.ShortQty.INSTANCE);
    public static final PosQtyStatus PosQtyStatus = register(org.fix4j.spec.fix50sp2.fieldtype.PosQtyStatus.INSTANCE);
    public static final PosAmtType PosAmtType = register(org.fix4j.spec.fix50sp2.fieldtype.PosAmtType.INSTANCE);
    public static final PosAmt PosAmt = register(org.fix4j.spec.fix50sp2.fieldtype.PosAmt.INSTANCE);
    public static final PosTransType PosTransType = register(org.fix4j.spec.fix50sp2.fieldtype.PosTransType.INSTANCE);
    public static final PosReqID PosReqID = register(org.fix4j.spec.fix50sp2.fieldtype.PosReqID.INSTANCE);
    public static final NoUnderlyings NoUnderlyings = register(org.fix4j.spec.fix50sp2.fieldtype.NoUnderlyings.INSTANCE);
    public static final PosMaintAction PosMaintAction = register(org.fix4j.spec.fix50sp2.fieldtype.PosMaintAction.INSTANCE);
    public static final OrigPosReqRefID OrigPosReqRefID = register(org.fix4j.spec.fix50sp2.fieldtype.OrigPosReqRefID.INSTANCE);
    public static final PosMaintRptRefID PosMaintRptRefID = register(org.fix4j.spec.fix50sp2.fieldtype.PosMaintRptRefID.INSTANCE);
    public static final ClearingBusinessDate ClearingBusinessDate = register(org.fix4j.spec.fix50sp2.fieldtype.ClearingBusinessDate.INSTANCE);
    public static final SettlSessID SettlSessID = register(org.fix4j.spec.fix50sp2.fieldtype.SettlSessID.INSTANCE);
    public static final SettlSessSubID SettlSessSubID = register(org.fix4j.spec.fix50sp2.fieldtype.SettlSessSubID.INSTANCE);
    public static final AdjustmentType AdjustmentType = register(org.fix4j.spec.fix50sp2.fieldtype.AdjustmentType.INSTANCE);
    public static final ContraryInstructionIndicator ContraryInstructionIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.ContraryInstructionIndicator.INSTANCE);
    public static final PriorSpreadIndicator PriorSpreadIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.PriorSpreadIndicator.INSTANCE);
    public static final PosMaintRptID PosMaintRptID = register(org.fix4j.spec.fix50sp2.fieldtype.PosMaintRptID.INSTANCE);
    public static final PosMaintStatus PosMaintStatus = register(org.fix4j.spec.fix50sp2.fieldtype.PosMaintStatus.INSTANCE);
    public static final PosMaintResult PosMaintResult = register(org.fix4j.spec.fix50sp2.fieldtype.PosMaintResult.INSTANCE);
    public static final PosReqType PosReqType = register(org.fix4j.spec.fix50sp2.fieldtype.PosReqType.INSTANCE);
    public static final ResponseTransportType ResponseTransportType = register(org.fix4j.spec.fix50sp2.fieldtype.ResponseTransportType.INSTANCE);
    public static final ResponseDestination ResponseDestination = register(org.fix4j.spec.fix50sp2.fieldtype.ResponseDestination.INSTANCE);
    public static final TotalNumPosReports TotalNumPosReports = register(org.fix4j.spec.fix50sp2.fieldtype.TotalNumPosReports.INSTANCE);
    public static final PosReqResult PosReqResult = register(org.fix4j.spec.fix50sp2.fieldtype.PosReqResult.INSTANCE);
    public static final PosReqStatus PosReqStatus = register(org.fix4j.spec.fix50sp2.fieldtype.PosReqStatus.INSTANCE);
    public static final SettlPrice SettlPrice = register(org.fix4j.spec.fix50sp2.fieldtype.SettlPrice.INSTANCE);
    public static final SettlPriceType SettlPriceType = register(org.fix4j.spec.fix50sp2.fieldtype.SettlPriceType.INSTANCE);
    public static final UnderlyingSettlPrice UnderlyingSettlPrice = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingSettlPrice.INSTANCE);
    public static final UnderlyingSettlPriceType UnderlyingSettlPriceType = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingSettlPriceType.INSTANCE);
    public static final PriorSettlPrice PriorSettlPrice = register(org.fix4j.spec.fix50sp2.fieldtype.PriorSettlPrice.INSTANCE);
    public static final NoQuoteQualifiers NoQuoteQualifiers = register(org.fix4j.spec.fix50sp2.fieldtype.NoQuoteQualifiers.INSTANCE);
    public static final AllocSettlCurrency AllocSettlCurrency = register(org.fix4j.spec.fix50sp2.fieldtype.AllocSettlCurrency.INSTANCE);
    public static final AllocSettlCurrAmt AllocSettlCurrAmt = register(org.fix4j.spec.fix50sp2.fieldtype.AllocSettlCurrAmt.INSTANCE);
    public static final InterestAtMaturity InterestAtMaturity = register(org.fix4j.spec.fix50sp2.fieldtype.InterestAtMaturity.INSTANCE);
    public static final LegDatedDate LegDatedDate = register(org.fix4j.spec.fix50sp2.fieldtype.LegDatedDate.INSTANCE);
    public static final LegPool LegPool = register(org.fix4j.spec.fix50sp2.fieldtype.LegPool.INSTANCE);
    public static final AllocInterestAtMaturity AllocInterestAtMaturity = register(org.fix4j.spec.fix50sp2.fieldtype.AllocInterestAtMaturity.INSTANCE);
    public static final AllocAccruedInterestAmt AllocAccruedInterestAmt = register(org.fix4j.spec.fix50sp2.fieldtype.AllocAccruedInterestAmt.INSTANCE);
    public static final DeliveryDate DeliveryDate = register(org.fix4j.spec.fix50sp2.fieldtype.DeliveryDate.INSTANCE);
    public static final AssignmentMethod AssignmentMethod = register(org.fix4j.spec.fix50sp2.fieldtype.AssignmentMethod.INSTANCE);
    public static final AssignmentUnit AssignmentUnit = register(org.fix4j.spec.fix50sp2.fieldtype.AssignmentUnit.INSTANCE);
    public static final OpenInterest OpenInterest = register(org.fix4j.spec.fix50sp2.fieldtype.OpenInterest.INSTANCE);
    public static final ExerciseMethod ExerciseMethod = register(org.fix4j.spec.fix50sp2.fieldtype.ExerciseMethod.INSTANCE);
    public static final TotNumTradeReports TotNumTradeReports = register(org.fix4j.spec.fix50sp2.fieldtype.TotNumTradeReports.INSTANCE);
    public static final TradeRequestResult TradeRequestResult = register(org.fix4j.spec.fix50sp2.fieldtype.TradeRequestResult.INSTANCE);
    public static final TradeRequestStatus TradeRequestStatus = register(org.fix4j.spec.fix50sp2.fieldtype.TradeRequestStatus.INSTANCE);
    public static final TradeReportRejectReason TradeReportRejectReason = register(org.fix4j.spec.fix50sp2.fieldtype.TradeReportRejectReason.INSTANCE);
    public static final SideMultiLegReportingType SideMultiLegReportingType = register(org.fix4j.spec.fix50sp2.fieldtype.SideMultiLegReportingType.INSTANCE);
    public static final NoPosAmt NoPosAmt = register(org.fix4j.spec.fix50sp2.fieldtype.NoPosAmt.INSTANCE);
    public static final AutoAcceptIndicator AutoAcceptIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.AutoAcceptIndicator.INSTANCE);
    public static final AllocReportID AllocReportID = register(org.fix4j.spec.fix50sp2.fieldtype.AllocReportID.INSTANCE);
    public static final NoNested2PartyIDs NoNested2PartyIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoNested2PartyIDs.INSTANCE);
    public static final Nested2PartyID Nested2PartyID = register(org.fix4j.spec.fix50sp2.fieldtype.Nested2PartyID.INSTANCE);
    public static final Nested2PartyIDSource Nested2PartyIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.Nested2PartyIDSource.INSTANCE);
    public static final Nested2PartyRole Nested2PartyRole = register(org.fix4j.spec.fix50sp2.fieldtype.Nested2PartyRole.INSTANCE);
    public static final Nested2PartySubID Nested2PartySubID = register(org.fix4j.spec.fix50sp2.fieldtype.Nested2PartySubID.INSTANCE);
    public static final BenchmarkSecurityIDSource BenchmarkSecurityIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.BenchmarkSecurityIDSource.INSTANCE);
    public static final SecuritySubType SecuritySubType = register(org.fix4j.spec.fix50sp2.fieldtype.SecuritySubType.INSTANCE);
    public static final UnderlyingSecuritySubType UnderlyingSecuritySubType = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingSecuritySubType.INSTANCE);
    public static final LegSecuritySubType LegSecuritySubType = register(org.fix4j.spec.fix50sp2.fieldtype.LegSecuritySubType.INSTANCE);
    public static final AllowableOneSidednessPct AllowableOneSidednessPct = register(org.fix4j.spec.fix50sp2.fieldtype.AllowableOneSidednessPct.INSTANCE);
    public static final AllowableOneSidednessValue AllowableOneSidednessValue = register(org.fix4j.spec.fix50sp2.fieldtype.AllowableOneSidednessValue.INSTANCE);
    public static final AllowableOneSidednessCurr AllowableOneSidednessCurr = register(org.fix4j.spec.fix50sp2.fieldtype.AllowableOneSidednessCurr.INSTANCE);
    public static final NoTrdRegTimestamps NoTrdRegTimestamps = register(org.fix4j.spec.fix50sp2.fieldtype.NoTrdRegTimestamps.INSTANCE);
    public static final TrdRegTimestamp TrdRegTimestamp = register(org.fix4j.spec.fix50sp2.fieldtype.TrdRegTimestamp.INSTANCE);
    public static final TrdRegTimestampType TrdRegTimestampType = register(org.fix4j.spec.fix50sp2.fieldtype.TrdRegTimestampType.INSTANCE);
    public static final TrdRegTimestampOrigin TrdRegTimestampOrigin = register(org.fix4j.spec.fix50sp2.fieldtype.TrdRegTimestampOrigin.INSTANCE);
    public static final ConfirmRefID ConfirmRefID = register(org.fix4j.spec.fix50sp2.fieldtype.ConfirmRefID.INSTANCE);
    public static final ConfirmType ConfirmType = register(org.fix4j.spec.fix50sp2.fieldtype.ConfirmType.INSTANCE);
    public static final ConfirmRejReason ConfirmRejReason = register(org.fix4j.spec.fix50sp2.fieldtype.ConfirmRejReason.INSTANCE);
    public static final BookingType BookingType = register(org.fix4j.spec.fix50sp2.fieldtype.BookingType.INSTANCE);
    public static final IndividualAllocRejCode IndividualAllocRejCode = register(org.fix4j.spec.fix50sp2.fieldtype.IndividualAllocRejCode.INSTANCE);
    public static final SettlInstMsgID SettlInstMsgID = register(org.fix4j.spec.fix50sp2.fieldtype.SettlInstMsgID.INSTANCE);
    public static final NoSettlInst NoSettlInst = register(org.fix4j.spec.fix50sp2.fieldtype.NoSettlInst.INSTANCE);
    public static final LastUpdateTime LastUpdateTime = register(org.fix4j.spec.fix50sp2.fieldtype.LastUpdateTime.INSTANCE);
    public static final AllocSettlInstType AllocSettlInstType = register(org.fix4j.spec.fix50sp2.fieldtype.AllocSettlInstType.INSTANCE);
    public static final NoSettlPartyIDs NoSettlPartyIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoSettlPartyIDs.INSTANCE);
    public static final SettlPartyID SettlPartyID = register(org.fix4j.spec.fix50sp2.fieldtype.SettlPartyID.INSTANCE);
    public static final SettlPartyIDSource SettlPartyIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.SettlPartyIDSource.INSTANCE);
    public static final SettlPartyRole SettlPartyRole = register(org.fix4j.spec.fix50sp2.fieldtype.SettlPartyRole.INSTANCE);
    public static final SettlPartySubID SettlPartySubID = register(org.fix4j.spec.fix50sp2.fieldtype.SettlPartySubID.INSTANCE);
    public static final SettlPartySubIDType SettlPartySubIDType = register(org.fix4j.spec.fix50sp2.fieldtype.SettlPartySubIDType.INSTANCE);
    public static final DlvyInstType DlvyInstType = register(org.fix4j.spec.fix50sp2.fieldtype.DlvyInstType.INSTANCE);
    public static final TerminationType TerminationType = register(org.fix4j.spec.fix50sp2.fieldtype.TerminationType.INSTANCE);
    public static final NextExpectedMsgSeqNum NextExpectedMsgSeqNum = register(org.fix4j.spec.fix50sp2.fieldtype.NextExpectedMsgSeqNum.INSTANCE);
    public static final OrdStatusReqID OrdStatusReqID = register(org.fix4j.spec.fix50sp2.fieldtype.OrdStatusReqID.INSTANCE);
    public static final SettlInstReqID SettlInstReqID = register(org.fix4j.spec.fix50sp2.fieldtype.SettlInstReqID.INSTANCE);
    public static final SettlInstReqRejCode SettlInstReqRejCode = register(org.fix4j.spec.fix50sp2.fieldtype.SettlInstReqRejCode.INSTANCE);
    public static final SecondaryAllocID SecondaryAllocID = register(org.fix4j.spec.fix50sp2.fieldtype.SecondaryAllocID.INSTANCE);
    public static final AllocReportType AllocReportType = register(org.fix4j.spec.fix50sp2.fieldtype.AllocReportType.INSTANCE);
    public static final AllocReportRefID AllocReportRefID = register(org.fix4j.spec.fix50sp2.fieldtype.AllocReportRefID.INSTANCE);
    public static final AllocCancReplaceReason AllocCancReplaceReason = register(org.fix4j.spec.fix50sp2.fieldtype.AllocCancReplaceReason.INSTANCE);
    public static final CopyMsgIndicator CopyMsgIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.CopyMsgIndicator.INSTANCE);
    public static final AllocAccountType AllocAccountType = register(org.fix4j.spec.fix50sp2.fieldtype.AllocAccountType.INSTANCE);
    public static final OrderAvgPx OrderAvgPx = register(org.fix4j.spec.fix50sp2.fieldtype.OrderAvgPx.INSTANCE);
    public static final OrderBookingQty OrderBookingQty = register(org.fix4j.spec.fix50sp2.fieldtype.OrderBookingQty.INSTANCE);
    public static final NoSettlPartySubIDs NoSettlPartySubIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoSettlPartySubIDs.INSTANCE);
    public static final NoPartySubIDs NoPartySubIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoPartySubIDs.INSTANCE);
    public static final PartySubIDType PartySubIDType = register(org.fix4j.spec.fix50sp2.fieldtype.PartySubIDType.INSTANCE);
    public static final NoNestedPartySubIDs NoNestedPartySubIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoNestedPartySubIDs.INSTANCE);
    public static final NestedPartySubIDType NestedPartySubIDType = register(org.fix4j.spec.fix50sp2.fieldtype.NestedPartySubIDType.INSTANCE);
    public static final NoNested2PartySubIDs NoNested2PartySubIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoNested2PartySubIDs.INSTANCE);
    public static final Nested2PartySubIDType Nested2PartySubIDType = register(org.fix4j.spec.fix50sp2.fieldtype.Nested2PartySubIDType.INSTANCE);
    public static final AllocIntermedReqType AllocIntermedReqType = register(org.fix4j.spec.fix50sp2.fieldtype.AllocIntermedReqType.INSTANCE);
    public static final UnderlyingPx UnderlyingPx = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingPx.INSTANCE);
    public static final PriceDelta PriceDelta = register(org.fix4j.spec.fix50sp2.fieldtype.PriceDelta.INSTANCE);
    public static final ApplQueueMax ApplQueueMax = register(org.fix4j.spec.fix50sp2.fieldtype.ApplQueueMax.INSTANCE);
    public static final ApplQueueDepth ApplQueueDepth = register(org.fix4j.spec.fix50sp2.fieldtype.ApplQueueDepth.INSTANCE);
    public static final ApplQueueResolution ApplQueueResolution = register(org.fix4j.spec.fix50sp2.fieldtype.ApplQueueResolution.INSTANCE);
    public static final ApplQueueAction ApplQueueAction = register(org.fix4j.spec.fix50sp2.fieldtype.ApplQueueAction.INSTANCE);
    public static final NoAltMDSource NoAltMDSource = register(org.fix4j.spec.fix50sp2.fieldtype.NoAltMDSource.INSTANCE);
    public static final AltMDSourceID AltMDSourceID = register(org.fix4j.spec.fix50sp2.fieldtype.AltMDSourceID.INSTANCE);
    public static final SecondaryTradeReportID SecondaryTradeReportID = register(org.fix4j.spec.fix50sp2.fieldtype.SecondaryTradeReportID.INSTANCE);
    public static final AvgPxIndicator AvgPxIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.AvgPxIndicator.INSTANCE);
    public static final TradeLinkID TradeLinkID = register(org.fix4j.spec.fix50sp2.fieldtype.TradeLinkID.INSTANCE);
    public static final OrderInputDevice OrderInputDevice = register(org.fix4j.spec.fix50sp2.fieldtype.OrderInputDevice.INSTANCE);
    public static final UnderlyingTradingSessionID UnderlyingTradingSessionID = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingTradingSessionID.INSTANCE);
    public static final UnderlyingTradingSessionSubID UnderlyingTradingSessionSubID = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingTradingSessionSubID.INSTANCE);
    public static final TradeLegRefID TradeLegRefID = register(org.fix4j.spec.fix50sp2.fieldtype.TradeLegRefID.INSTANCE);
    public static final ExchangeRule ExchangeRule = register(org.fix4j.spec.fix50sp2.fieldtype.ExchangeRule.INSTANCE);
    public static final TradeAllocIndicator TradeAllocIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.TradeAllocIndicator.INSTANCE);
    public static final ExpirationCycle ExpirationCycle = register(org.fix4j.spec.fix50sp2.fieldtype.ExpirationCycle.INSTANCE);
    public static final TrdType TrdType = register(org.fix4j.spec.fix50sp2.fieldtype.TrdType.INSTANCE);
    public static final TrdSubType TrdSubType = register(org.fix4j.spec.fix50sp2.fieldtype.TrdSubType.INSTANCE);
    public static final TransferReason TransferReason = register(org.fix4j.spec.fix50sp2.fieldtype.TransferReason.INSTANCE);
    public static final AsgnReqID AsgnReqID = register(org.fix4j.spec.fix50sp2.fieldtype.AsgnReqID.INSTANCE);
    public static final TotNumAssignmentReports TotNumAssignmentReports = register(org.fix4j.spec.fix50sp2.fieldtype.TotNumAssignmentReports.INSTANCE);
    public static final AsgnRptID AsgnRptID = register(org.fix4j.spec.fix50sp2.fieldtype.AsgnRptID.INSTANCE);
    public static final ThresholdAmount ThresholdAmount = register(org.fix4j.spec.fix50sp2.fieldtype.ThresholdAmount.INSTANCE);
    public static final PegMoveType PegMoveType = register(org.fix4j.spec.fix50sp2.fieldtype.PegMoveType.INSTANCE);
    public static final PegOffsetType PegOffsetType = register(org.fix4j.spec.fix50sp2.fieldtype.PegOffsetType.INSTANCE);
    public static final PegLimitType PegLimitType = register(org.fix4j.spec.fix50sp2.fieldtype.PegLimitType.INSTANCE);
    public static final PegRoundDirection PegRoundDirection = register(org.fix4j.spec.fix50sp2.fieldtype.PegRoundDirection.INSTANCE);
    public static final PeggedPrice PeggedPrice = register(org.fix4j.spec.fix50sp2.fieldtype.PeggedPrice.INSTANCE);
    public static final PegScope PegScope = register(org.fix4j.spec.fix50sp2.fieldtype.PegScope.INSTANCE);
    public static final DiscretionMoveType DiscretionMoveType = register(org.fix4j.spec.fix50sp2.fieldtype.DiscretionMoveType.INSTANCE);
    public static final DiscretionOffsetType DiscretionOffsetType = register(org.fix4j.spec.fix50sp2.fieldtype.DiscretionOffsetType.INSTANCE);
    public static final DiscretionLimitType DiscretionLimitType = register(org.fix4j.spec.fix50sp2.fieldtype.DiscretionLimitType.INSTANCE);
    public static final DiscretionRoundDirection DiscretionRoundDirection = register(org.fix4j.spec.fix50sp2.fieldtype.DiscretionRoundDirection.INSTANCE);
    public static final DiscretionPrice DiscretionPrice = register(org.fix4j.spec.fix50sp2.fieldtype.DiscretionPrice.INSTANCE);
    public static final DiscretionScope DiscretionScope = register(org.fix4j.spec.fix50sp2.fieldtype.DiscretionScope.INSTANCE);
    public static final TargetStrategy TargetStrategy = register(org.fix4j.spec.fix50sp2.fieldtype.TargetStrategy.INSTANCE);
    public static final TargetStrategyParameters TargetStrategyParameters = register(org.fix4j.spec.fix50sp2.fieldtype.TargetStrategyParameters.INSTANCE);
    public static final ParticipationRate ParticipationRate = register(org.fix4j.spec.fix50sp2.fieldtype.ParticipationRate.INSTANCE);
    public static final TargetStrategyPerformance TargetStrategyPerformance = register(org.fix4j.spec.fix50sp2.fieldtype.TargetStrategyPerformance.INSTANCE);
    public static final LastLiquidityInd LastLiquidityInd = register(org.fix4j.spec.fix50sp2.fieldtype.LastLiquidityInd.INSTANCE);
    public static final PublishTrdIndicator PublishTrdIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.PublishTrdIndicator.INSTANCE);
    public static final ShortSaleReason ShortSaleReason = register(org.fix4j.spec.fix50sp2.fieldtype.ShortSaleReason.INSTANCE);
    public static final QtyType QtyType = register(org.fix4j.spec.fix50sp2.fieldtype.QtyType.INSTANCE);
    public static final SecondaryTrdType SecondaryTrdType = register(org.fix4j.spec.fix50sp2.fieldtype.SecondaryTrdType.INSTANCE);
    public static final TradeReportType TradeReportType = register(org.fix4j.spec.fix50sp2.fieldtype.TradeReportType.INSTANCE);
    public static final AllocNoOrdersType AllocNoOrdersType = register(org.fix4j.spec.fix50sp2.fieldtype.AllocNoOrdersType.INSTANCE);
    public static final SharedCommission SharedCommission = register(org.fix4j.spec.fix50sp2.fieldtype.SharedCommission.INSTANCE);
    public static final ConfirmReqID ConfirmReqID = register(org.fix4j.spec.fix50sp2.fieldtype.ConfirmReqID.INSTANCE);
    public static final AvgParPx AvgParPx = register(org.fix4j.spec.fix50sp2.fieldtype.AvgParPx.INSTANCE);
    public static final ReportedPx ReportedPx = register(org.fix4j.spec.fix50sp2.fieldtype.ReportedPx.INSTANCE);
    public static final NoCapacities NoCapacities = register(org.fix4j.spec.fix50sp2.fieldtype.NoCapacities.INSTANCE);
    public static final OrderCapacityQty OrderCapacityQty = register(org.fix4j.spec.fix50sp2.fieldtype.OrderCapacityQty.INSTANCE);
    public static final NoEvents NoEvents = register(org.fix4j.spec.fix50sp2.fieldtype.NoEvents.INSTANCE);
    public static final EventType EventType = register(org.fix4j.spec.fix50sp2.fieldtype.EventType.INSTANCE);
    public static final EventDate EventDate = register(org.fix4j.spec.fix50sp2.fieldtype.EventDate.INSTANCE);
    public static final EventPx EventPx = register(org.fix4j.spec.fix50sp2.fieldtype.EventPx.INSTANCE);
    public static final EventText EventText = register(org.fix4j.spec.fix50sp2.fieldtype.EventText.INSTANCE);
    public static final PctAtRisk PctAtRisk = register(org.fix4j.spec.fix50sp2.fieldtype.PctAtRisk.INSTANCE);
    public static final NoInstrAttrib NoInstrAttrib = register(org.fix4j.spec.fix50sp2.fieldtype.NoInstrAttrib.INSTANCE);
    public static final InstrAttribType InstrAttribType = register(org.fix4j.spec.fix50sp2.fieldtype.InstrAttribType.INSTANCE);
    public static final InstrAttribValue InstrAttribValue = register(org.fix4j.spec.fix50sp2.fieldtype.InstrAttribValue.INSTANCE);
    public static final DatedDate DatedDate = register(org.fix4j.spec.fix50sp2.fieldtype.DatedDate.INSTANCE);
    public static final InterestAccrualDate InterestAccrualDate = register(org.fix4j.spec.fix50sp2.fieldtype.InterestAccrualDate.INSTANCE);
    public static final CPProgram CPProgram = register(org.fix4j.spec.fix50sp2.fieldtype.CPProgram.INSTANCE);
    public static final CPRegType CPRegType = register(org.fix4j.spec.fix50sp2.fieldtype.CPRegType.INSTANCE);
    public static final UnderlyingCPProgram UnderlyingCPProgram = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingCPProgram.INSTANCE);
    public static final UnderlyingCPRegType UnderlyingCPRegType = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingCPRegType.INSTANCE);
    public static final UnderlyingQty UnderlyingQty = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingQty.INSTANCE);
    public static final TrdMatchID TrdMatchID = register(org.fix4j.spec.fix50sp2.fieldtype.TrdMatchID.INSTANCE);
    public static final SecondaryTradeReportRefID SecondaryTradeReportRefID = register(org.fix4j.spec.fix50sp2.fieldtype.SecondaryTradeReportRefID.INSTANCE);
    public static final UnderlyingDirtyPrice UnderlyingDirtyPrice = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingDirtyPrice.INSTANCE);
    public static final UnderlyingEndPrice UnderlyingEndPrice = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingEndPrice.INSTANCE);
    public static final UnderlyingStartValue UnderlyingStartValue = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingStartValue.INSTANCE);
    public static final UnderlyingCurrentValue UnderlyingCurrentValue = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingCurrentValue.INSTANCE);
    public static final UnderlyingEndValue UnderlyingEndValue = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingEndValue.INSTANCE);
    public static final NoUnderlyingStips NoUnderlyingStips = register(org.fix4j.spec.fix50sp2.fieldtype.NoUnderlyingStips.INSTANCE);
    public static final UnderlyingStipType UnderlyingStipType = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingStipType.INSTANCE);
    public static final UnderlyingStipValue UnderlyingStipValue = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingStipValue.INSTANCE);
    public static final MaturityNetMoney MaturityNetMoney = register(org.fix4j.spec.fix50sp2.fieldtype.MaturityNetMoney.INSTANCE);
    public static final MiscFeeBasis MiscFeeBasis = register(org.fix4j.spec.fix50sp2.fieldtype.MiscFeeBasis.INSTANCE);
    public static final TotNoAllocs TotNoAllocs = register(org.fix4j.spec.fix50sp2.fieldtype.TotNoAllocs.INSTANCE);
    public static final LastFragment LastFragment = register(org.fix4j.spec.fix50sp2.fieldtype.LastFragment.INSTANCE);
    public static final CollReqID CollReqID = register(org.fix4j.spec.fix50sp2.fieldtype.CollReqID.INSTANCE);
    public static final CollAsgnReason CollAsgnReason = register(org.fix4j.spec.fix50sp2.fieldtype.CollAsgnReason.INSTANCE);
    public static final CollInquiryQualifier CollInquiryQualifier = register(org.fix4j.spec.fix50sp2.fieldtype.CollInquiryQualifier.INSTANCE);
    public static final NoTrades NoTrades = register(org.fix4j.spec.fix50sp2.fieldtype.NoTrades.INSTANCE);
    public static final MarginRatio MarginRatio = register(org.fix4j.spec.fix50sp2.fieldtype.MarginRatio.INSTANCE);
    public static final MarginExcess MarginExcess = register(org.fix4j.spec.fix50sp2.fieldtype.MarginExcess.INSTANCE);
    public static final TotalNetValue TotalNetValue = register(org.fix4j.spec.fix50sp2.fieldtype.TotalNetValue.INSTANCE);
    public static final CashOutstanding CashOutstanding = register(org.fix4j.spec.fix50sp2.fieldtype.CashOutstanding.INSTANCE);
    public static final CollAsgnID CollAsgnID = register(org.fix4j.spec.fix50sp2.fieldtype.CollAsgnID.INSTANCE);
    public static final CollAsgnTransType CollAsgnTransType = register(org.fix4j.spec.fix50sp2.fieldtype.CollAsgnTransType.INSTANCE);
    public static final CollRespID CollRespID = register(org.fix4j.spec.fix50sp2.fieldtype.CollRespID.INSTANCE);
    public static final CollAsgnRespType CollAsgnRespType = register(org.fix4j.spec.fix50sp2.fieldtype.CollAsgnRespType.INSTANCE);
    public static final CollAsgnRejectReason CollAsgnRejectReason = register(org.fix4j.spec.fix50sp2.fieldtype.CollAsgnRejectReason.INSTANCE);
    public static final CollAsgnRefID CollAsgnRefID = register(org.fix4j.spec.fix50sp2.fieldtype.CollAsgnRefID.INSTANCE);
    public static final CollRptID CollRptID = register(org.fix4j.spec.fix50sp2.fieldtype.CollRptID.INSTANCE);
    public static final CollInquiryID CollInquiryID = register(org.fix4j.spec.fix50sp2.fieldtype.CollInquiryID.INSTANCE);
    public static final CollStatus CollStatus = register(org.fix4j.spec.fix50sp2.fieldtype.CollStatus.INSTANCE);
    public static final TotNumReports TotNumReports = register(org.fix4j.spec.fix50sp2.fieldtype.TotNumReports.INSTANCE);
    public static final LastRptRequested LastRptRequested = register(org.fix4j.spec.fix50sp2.fieldtype.LastRptRequested.INSTANCE);
    public static final AgreementDesc AgreementDesc = register(org.fix4j.spec.fix50sp2.fieldtype.AgreementDesc.INSTANCE);
    public static final AgreementID AgreementID = register(org.fix4j.spec.fix50sp2.fieldtype.AgreementID.INSTANCE);
    public static final AgreementDate AgreementDate = register(org.fix4j.spec.fix50sp2.fieldtype.AgreementDate.INSTANCE);
    public static final StartDate StartDate = register(org.fix4j.spec.fix50sp2.fieldtype.StartDate.INSTANCE);
    public static final EndDate EndDate = register(org.fix4j.spec.fix50sp2.fieldtype.EndDate.INSTANCE);
    public static final AgreementCurrency AgreementCurrency = register(org.fix4j.spec.fix50sp2.fieldtype.AgreementCurrency.INSTANCE);
    public static final DeliveryType DeliveryType = register(org.fix4j.spec.fix50sp2.fieldtype.DeliveryType.INSTANCE);
    public static final EndAccruedInterestAmt EndAccruedInterestAmt = register(org.fix4j.spec.fix50sp2.fieldtype.EndAccruedInterestAmt.INSTANCE);
    public static final StartCash StartCash = register(org.fix4j.spec.fix50sp2.fieldtype.StartCash.INSTANCE);
    public static final EndCash EndCash = register(org.fix4j.spec.fix50sp2.fieldtype.EndCash.INSTANCE);
    public static final UserRequestID UserRequestID = register(org.fix4j.spec.fix50sp2.fieldtype.UserRequestID.INSTANCE);
    public static final UserRequestType UserRequestType = register(org.fix4j.spec.fix50sp2.fieldtype.UserRequestType.INSTANCE);
    public static final NewPassword NewPassword = register(org.fix4j.spec.fix50sp2.fieldtype.NewPassword.INSTANCE);
    public static final UserStatus UserStatus = register(org.fix4j.spec.fix50sp2.fieldtype.UserStatus.INSTANCE);
    public static final UserStatusText UserStatusText = register(org.fix4j.spec.fix50sp2.fieldtype.UserStatusText.INSTANCE);
    public static final StatusValue StatusValue = register(org.fix4j.spec.fix50sp2.fieldtype.StatusValue.INSTANCE);
    public static final StatusText StatusText = register(org.fix4j.spec.fix50sp2.fieldtype.StatusText.INSTANCE);
    public static final RefCompID RefCompID = register(org.fix4j.spec.fix50sp2.fieldtype.RefCompID.INSTANCE);
    public static final RefSubID RefSubID = register(org.fix4j.spec.fix50sp2.fieldtype.RefSubID.INSTANCE);
    public static final NetworkResponseID NetworkResponseID = register(org.fix4j.spec.fix50sp2.fieldtype.NetworkResponseID.INSTANCE);
    public static final NetworkRequestID NetworkRequestID = register(org.fix4j.spec.fix50sp2.fieldtype.NetworkRequestID.INSTANCE);
    public static final LastNetworkResponseID LastNetworkResponseID = register(org.fix4j.spec.fix50sp2.fieldtype.LastNetworkResponseID.INSTANCE);
    public static final NetworkRequestType NetworkRequestType = register(org.fix4j.spec.fix50sp2.fieldtype.NetworkRequestType.INSTANCE);
    public static final NoCompIDs NoCompIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoCompIDs.INSTANCE);
    public static final NetworkStatusResponseType NetworkStatusResponseType = register(org.fix4j.spec.fix50sp2.fieldtype.NetworkStatusResponseType.INSTANCE);
    public static final NoCollInquiryQualifier NoCollInquiryQualifier = register(org.fix4j.spec.fix50sp2.fieldtype.NoCollInquiryQualifier.INSTANCE);
    public static final TrdRptStatus TrdRptStatus = register(org.fix4j.spec.fix50sp2.fieldtype.TrdRptStatus.INSTANCE);
    public static final AffirmStatus AffirmStatus = register(org.fix4j.spec.fix50sp2.fieldtype.AffirmStatus.INSTANCE);
    public static final UnderlyingStrikeCurrency UnderlyingStrikeCurrency = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingStrikeCurrency.INSTANCE);
    public static final LegStrikeCurrency LegStrikeCurrency = register(org.fix4j.spec.fix50sp2.fieldtype.LegStrikeCurrency.INSTANCE);
    public static final TimeBracket TimeBracket = register(org.fix4j.spec.fix50sp2.fieldtype.TimeBracket.INSTANCE);
    public static final CollAction CollAction = register(org.fix4j.spec.fix50sp2.fieldtype.CollAction.INSTANCE);
    public static final CollInquiryStatus CollInquiryStatus = register(org.fix4j.spec.fix50sp2.fieldtype.CollInquiryStatus.INSTANCE);
    public static final CollInquiryResult CollInquiryResult = register(org.fix4j.spec.fix50sp2.fieldtype.CollInquiryResult.INSTANCE);
    public static final StrikeCurrency StrikeCurrency = register(org.fix4j.spec.fix50sp2.fieldtype.StrikeCurrency.INSTANCE);
    public static final NoNested3PartyIDs NoNested3PartyIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoNested3PartyIDs.INSTANCE);
    public static final Nested3PartyID Nested3PartyID = register(org.fix4j.spec.fix50sp2.fieldtype.Nested3PartyID.INSTANCE);
    public static final Nested3PartyIDSource Nested3PartyIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.Nested3PartyIDSource.INSTANCE);
    public static final Nested3PartyRole Nested3PartyRole = register(org.fix4j.spec.fix50sp2.fieldtype.Nested3PartyRole.INSTANCE);
    public static final NoNested3PartySubIDs NoNested3PartySubIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoNested3PartySubIDs.INSTANCE);
    public static final Nested3PartySubID Nested3PartySubID = register(org.fix4j.spec.fix50sp2.fieldtype.Nested3PartySubID.INSTANCE);
    public static final Nested3PartySubIDType Nested3PartySubIDType = register(org.fix4j.spec.fix50sp2.fieldtype.Nested3PartySubIDType.INSTANCE);
    public static final LegContractSettlMonth LegContractSettlMonth = register(org.fix4j.spec.fix50sp2.fieldtype.LegContractSettlMonth.INSTANCE);
    public static final LegInterestAccrualDate LegInterestAccrualDate = register(org.fix4j.spec.fix50sp2.fieldtype.LegInterestAccrualDate.INSTANCE);
    public static final NoStrategyParameters NoStrategyParameters = register(org.fix4j.spec.fix50sp2.fieldtype.NoStrategyParameters.INSTANCE);
    public static final StrategyParameterName StrategyParameterName = register(org.fix4j.spec.fix50sp2.fieldtype.StrategyParameterName.INSTANCE);
    public static final StrategyParameterType StrategyParameterType = register(org.fix4j.spec.fix50sp2.fieldtype.StrategyParameterType.INSTANCE);
    public static final StrategyParameterValue StrategyParameterValue = register(org.fix4j.spec.fix50sp2.fieldtype.StrategyParameterValue.INSTANCE);
    public static final HostCrossID HostCrossID = register(org.fix4j.spec.fix50sp2.fieldtype.HostCrossID.INSTANCE);
    public static final SideTimeInForce SideTimeInForce = register(org.fix4j.spec.fix50sp2.fieldtype.SideTimeInForce.INSTANCE);
    public static final MDReportID MDReportID = register(org.fix4j.spec.fix50sp2.fieldtype.MDReportID.INSTANCE);
    public static final SecurityReportID SecurityReportID = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityReportID.INSTANCE);
    public static final SecurityStatus SecurityStatus = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityStatus.INSTANCE);
    public static final SettleOnOpenFlag SettleOnOpenFlag = register(org.fix4j.spec.fix50sp2.fieldtype.SettleOnOpenFlag.INSTANCE);
    public static final StrikeMultiplier StrikeMultiplier = register(org.fix4j.spec.fix50sp2.fieldtype.StrikeMultiplier.INSTANCE);
    public static final StrikeValue StrikeValue = register(org.fix4j.spec.fix50sp2.fieldtype.StrikeValue.INSTANCE);
    public static final MinPriceIncrement MinPriceIncrement = register(org.fix4j.spec.fix50sp2.fieldtype.MinPriceIncrement.INSTANCE);
    public static final PositionLimit PositionLimit = register(org.fix4j.spec.fix50sp2.fieldtype.PositionLimit.INSTANCE);
    public static final NTPositionLimit NTPositionLimit = register(org.fix4j.spec.fix50sp2.fieldtype.NTPositionLimit.INSTANCE);
    public static final UnderlyingAllocationPercent UnderlyingAllocationPercent = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingAllocationPercent.INSTANCE);
    public static final UnderlyingCashAmount UnderlyingCashAmount = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingCashAmount.INSTANCE);
    public static final UnderlyingCashType UnderlyingCashType = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingCashType.INSTANCE);
    public static final UnderlyingSettlementType UnderlyingSettlementType = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingSettlementType.INSTANCE);
    public static final QuantityDate QuantityDate = register(org.fix4j.spec.fix50sp2.fieldtype.QuantityDate.INSTANCE);
    public static final ContIntRptID ContIntRptID = register(org.fix4j.spec.fix50sp2.fieldtype.ContIntRptID.INSTANCE);
    public static final LateIndicator LateIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.LateIndicator.INSTANCE);
    public static final InputSource InputSource = register(org.fix4j.spec.fix50sp2.fieldtype.InputSource.INSTANCE);
    public static final SecurityUpdateAction SecurityUpdateAction = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityUpdateAction.INSTANCE);
    public static final NoExpiration NoExpiration = register(org.fix4j.spec.fix50sp2.fieldtype.NoExpiration.INSTANCE);
    public static final ExpirationQtyType ExpirationQtyType = register(org.fix4j.spec.fix50sp2.fieldtype.ExpirationQtyType.INSTANCE);
    public static final ExpQty ExpQty = register(org.fix4j.spec.fix50sp2.fieldtype.ExpQty.INSTANCE);
    public static final NoUnderlyingAmounts NoUnderlyingAmounts = register(org.fix4j.spec.fix50sp2.fieldtype.NoUnderlyingAmounts.INSTANCE);
    public static final UnderlyingPayAmount UnderlyingPayAmount = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingPayAmount.INSTANCE);
    public static final UnderlyingCollectAmount UnderlyingCollectAmount = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingCollectAmount.INSTANCE);
    public static final UnderlyingSettlementDate UnderlyingSettlementDate = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingSettlementDate.INSTANCE);
    public static final UnderlyingSettlementStatus UnderlyingSettlementStatus = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingSettlementStatus.INSTANCE);
    public static final SecondaryIndividualAllocID SecondaryIndividualAllocID = register(org.fix4j.spec.fix50sp2.fieldtype.SecondaryIndividualAllocID.INSTANCE);
    public static final LegReportID LegReportID = register(org.fix4j.spec.fix50sp2.fieldtype.LegReportID.INSTANCE);
    public static final RndPx RndPx = register(org.fix4j.spec.fix50sp2.fieldtype.RndPx.INSTANCE);
    public static final IndividualAllocType IndividualAllocType = register(org.fix4j.spec.fix50sp2.fieldtype.IndividualAllocType.INSTANCE);
    public static final AllocCustomerCapacity AllocCustomerCapacity = register(org.fix4j.spec.fix50sp2.fieldtype.AllocCustomerCapacity.INSTANCE);
    public static final TierCode TierCode = register(org.fix4j.spec.fix50sp2.fieldtype.TierCode.INSTANCE);
    public static final UnitOfMeasure UnitOfMeasure = register(org.fix4j.spec.fix50sp2.fieldtype.UnitOfMeasure.INSTANCE);
    public static final TimeUnit TimeUnit = register(org.fix4j.spec.fix50sp2.fieldtype.TimeUnit.INSTANCE);
    public static final UnderlyingUnitOfMeasure UnderlyingUnitOfMeasure = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingUnitOfMeasure.INSTANCE);
    public static final LegUnitOfMeasure LegUnitOfMeasure = register(org.fix4j.spec.fix50sp2.fieldtype.LegUnitOfMeasure.INSTANCE);
    public static final UnderlyingTimeUnit UnderlyingTimeUnit = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingTimeUnit.INSTANCE);
    public static final LegTimeUnit LegTimeUnit = register(org.fix4j.spec.fix50sp2.fieldtype.LegTimeUnit.INSTANCE);
    public static final AllocMethod AllocMethod = register(org.fix4j.spec.fix50sp2.fieldtype.AllocMethod.INSTANCE);
    public static final TradeID TradeID = register(org.fix4j.spec.fix50sp2.fieldtype.TradeID.INSTANCE);
    public static final SideTradeReportID SideTradeReportID = register(org.fix4j.spec.fix50sp2.fieldtype.SideTradeReportID.INSTANCE);
    public static final SideFillStationCd SideFillStationCd = register(org.fix4j.spec.fix50sp2.fieldtype.SideFillStationCd.INSTANCE);
    public static final SideReasonCd SideReasonCd = register(org.fix4j.spec.fix50sp2.fieldtype.SideReasonCd.INSTANCE);
    public static final SideTrdSubTyp SideTrdSubTyp = register(org.fix4j.spec.fix50sp2.fieldtype.SideTrdSubTyp.INSTANCE);
    public static final SideLastQty SideLastQty = register(org.fix4j.spec.fix50sp2.fieldtype.SideLastQty.INSTANCE);
    public static final MessageEventSource MessageEventSource = register(org.fix4j.spec.fix50sp2.fieldtype.MessageEventSource.INSTANCE);
    public static final SideTrdRegTimestamp SideTrdRegTimestamp = register(org.fix4j.spec.fix50sp2.fieldtype.SideTrdRegTimestamp.INSTANCE);
    public static final SideTrdRegTimestampType SideTrdRegTimestampType = register(org.fix4j.spec.fix50sp2.fieldtype.SideTrdRegTimestampType.INSTANCE);
    public static final SideTrdRegTimestampSrc SideTrdRegTimestampSrc = register(org.fix4j.spec.fix50sp2.fieldtype.SideTrdRegTimestampSrc.INSTANCE);
    public static final AsOfIndicator AsOfIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.AsOfIndicator.INSTANCE);
    public static final NoSideTrdRegTS NoSideTrdRegTS = register(org.fix4j.spec.fix50sp2.fieldtype.NoSideTrdRegTS.INSTANCE);
    public static final LegOptionRatio LegOptionRatio = register(org.fix4j.spec.fix50sp2.fieldtype.LegOptionRatio.INSTANCE);
    public static final NoInstrumentParties NoInstrumentParties = register(org.fix4j.spec.fix50sp2.fieldtype.NoInstrumentParties.INSTANCE);
    public static final InstrumentPartyID InstrumentPartyID = register(org.fix4j.spec.fix50sp2.fieldtype.InstrumentPartyID.INSTANCE);
    public static final TradeVolume TradeVolume = register(org.fix4j.spec.fix50sp2.fieldtype.TradeVolume.INSTANCE);
    public static final MDBookType MDBookType = register(org.fix4j.spec.fix50sp2.fieldtype.MDBookType.INSTANCE);
    public static final MDFeedType MDFeedType = register(org.fix4j.spec.fix50sp2.fieldtype.MDFeedType.INSTANCE);
    public static final MDPriceLevel MDPriceLevel = register(org.fix4j.spec.fix50sp2.fieldtype.MDPriceLevel.INSTANCE);
    public static final MDOriginType MDOriginType = register(org.fix4j.spec.fix50sp2.fieldtype.MDOriginType.INSTANCE);
    public static final FirstPx FirstPx = register(org.fix4j.spec.fix50sp2.fieldtype.FirstPx.INSTANCE);
    public static final MDEntrySpotRate MDEntrySpotRate = register(org.fix4j.spec.fix50sp2.fieldtype.MDEntrySpotRate.INSTANCE);
    public static final MDEntryForwardPoints MDEntryForwardPoints = register(org.fix4j.spec.fix50sp2.fieldtype.MDEntryForwardPoints.INSTANCE);
    public static final ManualOrderIndicator ManualOrderIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.ManualOrderIndicator.INSTANCE);
    public static final CustDirectedOrder CustDirectedOrder = register(org.fix4j.spec.fix50sp2.fieldtype.CustDirectedOrder.INSTANCE);
    public static final ReceivedDeptID ReceivedDeptID = register(org.fix4j.spec.fix50sp2.fieldtype.ReceivedDeptID.INSTANCE);
    public static final CustOrderHandlingInst CustOrderHandlingInst = register(org.fix4j.spec.fix50sp2.fieldtype.CustOrderHandlingInst.INSTANCE);
    public static final OrderHandlingInstSource OrderHandlingInstSource = register(org.fix4j.spec.fix50sp2.fieldtype.OrderHandlingInstSource.INSTANCE);
    public static final DeskType DeskType = register(org.fix4j.spec.fix50sp2.fieldtype.DeskType.INSTANCE);
    public static final DeskTypeSource DeskTypeSource = register(org.fix4j.spec.fix50sp2.fieldtype.DeskTypeSource.INSTANCE);
    public static final DeskOrderHandlingInst DeskOrderHandlingInst = register(org.fix4j.spec.fix50sp2.fieldtype.DeskOrderHandlingInst.INSTANCE);
    public static final ExecAckStatus ExecAckStatus = register(org.fix4j.spec.fix50sp2.fieldtype.ExecAckStatus.INSTANCE);
    public static final UnderlyingDeliveryAmount UnderlyingDeliveryAmount = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingDeliveryAmount.INSTANCE);
    public static final UnderlyingCapValue UnderlyingCapValue = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingCapValue.INSTANCE);
    public static final UnderlyingSettlMethod UnderlyingSettlMethod = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingSettlMethod.INSTANCE);
    public static final SecondaryTradeID SecondaryTradeID = register(org.fix4j.spec.fix50sp2.fieldtype.SecondaryTradeID.INSTANCE);
    public static final FirmTradeID FirmTradeID = register(org.fix4j.spec.fix50sp2.fieldtype.FirmTradeID.INSTANCE);
    public static final SecondaryFirmTradeID SecondaryFirmTradeID = register(org.fix4j.spec.fix50sp2.fieldtype.SecondaryFirmTradeID.INSTANCE);
    public static final CollApplType CollApplType = register(org.fix4j.spec.fix50sp2.fieldtype.CollApplType.INSTANCE);
    public static final UnderlyingAdjustedQuantity UnderlyingAdjustedQuantity = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingAdjustedQuantity.INSTANCE);
    public static final UnderlyingFXRate UnderlyingFXRate = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingFXRate.INSTANCE);
    public static final UnderlyingFXRateCalc UnderlyingFXRateCalc = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingFXRateCalc.INSTANCE);
    public static final AllocPositionEffect AllocPositionEffect = register(org.fix4j.spec.fix50sp2.fieldtype.AllocPositionEffect.INSTANCE);
    public static final DealingCapacity DealingCapacity = register(org.fix4j.spec.fix50sp2.fieldtype.DealingCapacity.INSTANCE);
    public static final InstrmtAssignmentMethod InstrmtAssignmentMethod = register(org.fix4j.spec.fix50sp2.fieldtype.InstrmtAssignmentMethod.INSTANCE);
    public static final InstrumentPartyIDSource InstrumentPartyIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.InstrumentPartyIDSource.INSTANCE);
    public static final InstrumentPartyRole InstrumentPartyRole = register(org.fix4j.spec.fix50sp2.fieldtype.InstrumentPartyRole.INSTANCE);
    public static final NoInstrumentPartySubIDs NoInstrumentPartySubIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoInstrumentPartySubIDs.INSTANCE);
    public static final InstrumentPartySubID InstrumentPartySubID = register(org.fix4j.spec.fix50sp2.fieldtype.InstrumentPartySubID.INSTANCE);
    public static final InstrumentPartySubIDType InstrumentPartySubIDType = register(org.fix4j.spec.fix50sp2.fieldtype.InstrumentPartySubIDType.INSTANCE);
    public static final PositionCurrency PositionCurrency = register(org.fix4j.spec.fix50sp2.fieldtype.PositionCurrency.INSTANCE);
    public static final CalculatedCcyLastQty CalculatedCcyLastQty = register(org.fix4j.spec.fix50sp2.fieldtype.CalculatedCcyLastQty.INSTANCE);
    public static final AggressorIndicator AggressorIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.AggressorIndicator.INSTANCE);
    public static final NoUndlyInstrumentParties NoUndlyInstrumentParties = register(org.fix4j.spec.fix50sp2.fieldtype.NoUndlyInstrumentParties.INSTANCE);
    public static final UnderlyingInstrumentPartyID UnderlyingInstrumentPartyID = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingInstrumentPartyID.INSTANCE);
    public static final UnderlyingInstrumentPartyIDSource UnderlyingInstrumentPartyIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingInstrumentPartyIDSource.INSTANCE);
    public static final UnderlyingInstrumentPartyRole UnderlyingInstrumentPartyRole = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingInstrumentPartyRole.INSTANCE);
    public static final NoUndlyInstrumentPartySubIDs NoUndlyInstrumentPartySubIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoUndlyInstrumentPartySubIDs.INSTANCE);
    public static final UnderlyingInstrumentPartySubID UnderlyingInstrumentPartySubID = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingInstrumentPartySubID.INSTANCE);
    public static final UnderlyingInstrumentPartySubIDType UnderlyingInstrumentPartySubIDType = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingInstrumentPartySubIDType.INSTANCE);
    public static final BidSwapPoints BidSwapPoints = register(org.fix4j.spec.fix50sp2.fieldtype.BidSwapPoints.INSTANCE);
    public static final OfferSwapPoints OfferSwapPoints = register(org.fix4j.spec.fix50sp2.fieldtype.OfferSwapPoints.INSTANCE);
    public static final LegBidForwardPoints LegBidForwardPoints = register(org.fix4j.spec.fix50sp2.fieldtype.LegBidForwardPoints.INSTANCE);
    public static final LegOfferForwardPoints LegOfferForwardPoints = register(org.fix4j.spec.fix50sp2.fieldtype.LegOfferForwardPoints.INSTANCE);
    public static final SwapPoints SwapPoints = register(org.fix4j.spec.fix50sp2.fieldtype.SwapPoints.INSTANCE);
    public static final MDQuoteType MDQuoteType = register(org.fix4j.spec.fix50sp2.fieldtype.MDQuoteType.INSTANCE);
    public static final LastSwapPoints LastSwapPoints = register(org.fix4j.spec.fix50sp2.fieldtype.LastSwapPoints.INSTANCE);
    public static final SideGrossTradeAmt SideGrossTradeAmt = register(org.fix4j.spec.fix50sp2.fieldtype.SideGrossTradeAmt.INSTANCE);
    public static final LegLastForwardPoints LegLastForwardPoints = register(org.fix4j.spec.fix50sp2.fieldtype.LegLastForwardPoints.INSTANCE);
    public static final LegCalculatedCcyLastQty LegCalculatedCcyLastQty = register(org.fix4j.spec.fix50sp2.fieldtype.LegCalculatedCcyLastQty.INSTANCE);
    public static final LegGrossTradeAmt LegGrossTradeAmt = register(org.fix4j.spec.fix50sp2.fieldtype.LegGrossTradeAmt.INSTANCE);
    public static final MaturityTime MaturityTime = register(org.fix4j.spec.fix50sp2.fieldtype.MaturityTime.INSTANCE);
    public static final RefOrderID RefOrderID = register(org.fix4j.spec.fix50sp2.fieldtype.RefOrderID.INSTANCE);
    public static final RefOrderIDSource RefOrderIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.RefOrderIDSource.INSTANCE);
    public static final SecondaryDisplayQty SecondaryDisplayQty = register(org.fix4j.spec.fix50sp2.fieldtype.SecondaryDisplayQty.INSTANCE);
    public static final DisplayWhen DisplayWhen = register(org.fix4j.spec.fix50sp2.fieldtype.DisplayWhen.INSTANCE);
    public static final DisplayMethod DisplayMethod = register(org.fix4j.spec.fix50sp2.fieldtype.DisplayMethod.INSTANCE);
    public static final DisplayLowQty DisplayLowQty = register(org.fix4j.spec.fix50sp2.fieldtype.DisplayLowQty.INSTANCE);
    public static final DisplayHighQty DisplayHighQty = register(org.fix4j.spec.fix50sp2.fieldtype.DisplayHighQty.INSTANCE);
    public static final DisplayMinIncr DisplayMinIncr = register(org.fix4j.spec.fix50sp2.fieldtype.DisplayMinIncr.INSTANCE);
    public static final RefreshQty RefreshQty = register(org.fix4j.spec.fix50sp2.fieldtype.RefreshQty.INSTANCE);
    public static final MatchIncrement MatchIncrement = register(org.fix4j.spec.fix50sp2.fieldtype.MatchIncrement.INSTANCE);
    public static final MaxPriceLevels MaxPriceLevels = register(org.fix4j.spec.fix50sp2.fieldtype.MaxPriceLevels.INSTANCE);
    public static final PreTradeAnonymity PreTradeAnonymity = register(org.fix4j.spec.fix50sp2.fieldtype.PreTradeAnonymity.INSTANCE);
    public static final PriceProtectionScope PriceProtectionScope = register(org.fix4j.spec.fix50sp2.fieldtype.PriceProtectionScope.INSTANCE);
    public static final LotType LotType = register(org.fix4j.spec.fix50sp2.fieldtype.LotType.INSTANCE);
    public static final PegPriceType PegPriceType = register(org.fix4j.spec.fix50sp2.fieldtype.PegPriceType.INSTANCE);
    public static final PeggedRefPrice PeggedRefPrice = register(org.fix4j.spec.fix50sp2.fieldtype.PeggedRefPrice.INSTANCE);
    public static final PegSecurityIDSource PegSecurityIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.PegSecurityIDSource.INSTANCE);
    public static final PegSecurityID PegSecurityID = register(org.fix4j.spec.fix50sp2.fieldtype.PegSecurityID.INSTANCE);
    public static final PegSymbol PegSymbol = register(org.fix4j.spec.fix50sp2.fieldtype.PegSymbol.INSTANCE);
    public static final PegSecurityDesc PegSecurityDesc = register(org.fix4j.spec.fix50sp2.fieldtype.PegSecurityDesc.INSTANCE);
    public static final TriggerType TriggerType = register(org.fix4j.spec.fix50sp2.fieldtype.TriggerType.INSTANCE);
    public static final TriggerAction TriggerAction = register(org.fix4j.spec.fix50sp2.fieldtype.TriggerAction.INSTANCE);
    public static final TriggerPrice TriggerPrice = register(org.fix4j.spec.fix50sp2.fieldtype.TriggerPrice.INSTANCE);
    public static final TriggerSymbol TriggerSymbol = register(org.fix4j.spec.fix50sp2.fieldtype.TriggerSymbol.INSTANCE);
    public static final TriggerSecurityID TriggerSecurityID = register(org.fix4j.spec.fix50sp2.fieldtype.TriggerSecurityID.INSTANCE);
    public static final TriggerSecurityIDSource TriggerSecurityIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.TriggerSecurityIDSource.INSTANCE);
    public static final TriggerSecurityDesc TriggerSecurityDesc = register(org.fix4j.spec.fix50sp2.fieldtype.TriggerSecurityDesc.INSTANCE);
    public static final TriggerPriceType TriggerPriceType = register(org.fix4j.spec.fix50sp2.fieldtype.TriggerPriceType.INSTANCE);
    public static final TriggerPriceTypeScope TriggerPriceTypeScope = register(org.fix4j.spec.fix50sp2.fieldtype.TriggerPriceTypeScope.INSTANCE);
    public static final TriggerPriceDirection TriggerPriceDirection = register(org.fix4j.spec.fix50sp2.fieldtype.TriggerPriceDirection.INSTANCE);
    public static final TriggerNewPrice TriggerNewPrice = register(org.fix4j.spec.fix50sp2.fieldtype.TriggerNewPrice.INSTANCE);
    public static final TriggerOrderType TriggerOrderType = register(org.fix4j.spec.fix50sp2.fieldtype.TriggerOrderType.INSTANCE);
    public static final TriggerNewQty TriggerNewQty = register(org.fix4j.spec.fix50sp2.fieldtype.TriggerNewQty.INSTANCE);
    public static final TriggerTradingSessionID TriggerTradingSessionID = register(org.fix4j.spec.fix50sp2.fieldtype.TriggerTradingSessionID.INSTANCE);
    public static final TriggerTradingSessionSubID TriggerTradingSessionSubID = register(org.fix4j.spec.fix50sp2.fieldtype.TriggerTradingSessionSubID.INSTANCE);
    public static final OrderCategory OrderCategory = register(org.fix4j.spec.fix50sp2.fieldtype.OrderCategory.INSTANCE);
    public static final NoRootPartyIDs NoRootPartyIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoRootPartyIDs.INSTANCE);
    public static final RootPartyID RootPartyID = register(org.fix4j.spec.fix50sp2.fieldtype.RootPartyID.INSTANCE);
    public static final RootPartyIDSource RootPartyIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.RootPartyIDSource.INSTANCE);
    public static final RootPartyRole RootPartyRole = register(org.fix4j.spec.fix50sp2.fieldtype.RootPartyRole.INSTANCE);
    public static final NoRootPartySubIDs NoRootPartySubIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoRootPartySubIDs.INSTANCE);
    public static final RootPartySubID RootPartySubID = register(org.fix4j.spec.fix50sp2.fieldtype.RootPartySubID.INSTANCE);
    public static final RootPartySubIDType RootPartySubIDType = register(org.fix4j.spec.fix50sp2.fieldtype.RootPartySubIDType.INSTANCE);
    public static final TradeHandlingInstr TradeHandlingInstr = register(org.fix4j.spec.fix50sp2.fieldtype.TradeHandlingInstr.INSTANCE);
    public static final OrigTradeHandlingInstr OrigTradeHandlingInstr = register(org.fix4j.spec.fix50sp2.fieldtype.OrigTradeHandlingInstr.INSTANCE);
    public static final OrigTradeDate OrigTradeDate = register(org.fix4j.spec.fix50sp2.fieldtype.OrigTradeDate.INSTANCE);
    public static final OrigTradeID OrigTradeID = register(org.fix4j.spec.fix50sp2.fieldtype.OrigTradeID.INSTANCE);
    public static final OrigSecondaryTradeID OrigSecondaryTradeID = register(org.fix4j.spec.fix50sp2.fieldtype.OrigSecondaryTradeID.INSTANCE);
    public static final ApplVerID ApplVerID = register(org.fix4j.spec.fix50sp2.fieldtype.ApplVerID.INSTANCE);
    public static final CstmApplVerID CstmApplVerID = register(org.fix4j.spec.fix50sp2.fieldtype.CstmApplVerID.INSTANCE);
    public static final RefApplVerID RefApplVerID = register(org.fix4j.spec.fix50sp2.fieldtype.RefApplVerID.INSTANCE);
    public static final RefCstmApplVerID RefCstmApplVerID = register(org.fix4j.spec.fix50sp2.fieldtype.RefCstmApplVerID.INSTANCE);
    public static final TZTransactTime TZTransactTime = register(org.fix4j.spec.fix50sp2.fieldtype.TZTransactTime.INSTANCE);
    public static final ExDestinationIDSource ExDestinationIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.ExDestinationIDSource.INSTANCE);
    public static final ReportedPxDiff ReportedPxDiff = register(org.fix4j.spec.fix50sp2.fieldtype.ReportedPxDiff.INSTANCE);
    public static final RptSys RptSys = register(org.fix4j.spec.fix50sp2.fieldtype.RptSys.INSTANCE);
    public static final AllocClearingFeeIndicator AllocClearingFeeIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.AllocClearingFeeIndicator.INSTANCE);
    public static final DefaultApplVerID DefaultApplVerID = register(org.fix4j.spec.fix50sp2.fieldtype.DefaultApplVerID.INSTANCE);
    public static final DisplayQty DisplayQty = register(org.fix4j.spec.fix50sp2.fieldtype.DisplayQty.INSTANCE);
    public static final ExchangeSpecialInstructions ExchangeSpecialInstructions = register(org.fix4j.spec.fix50sp2.fieldtype.ExchangeSpecialInstructions.INSTANCE);
    public static final UnderlyingMaturityTime UnderlyingMaturityTime = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingMaturityTime.INSTANCE);
    public static final LegMaturityTime LegMaturityTime = register(org.fix4j.spec.fix50sp2.fieldtype.LegMaturityTime.INSTANCE);
    public static final MaxTradeVol MaxTradeVol = register(org.fix4j.spec.fix50sp2.fieldtype.MaxTradeVol.INSTANCE);
    public static final NoMDFeedTypes NoMDFeedTypes = register(org.fix4j.spec.fix50sp2.fieldtype.NoMDFeedTypes.INSTANCE);
    public static final MatchAlgorithm MatchAlgorithm = register(org.fix4j.spec.fix50sp2.fieldtype.MatchAlgorithm.INSTANCE);
    public static final MaxPriceVariation MaxPriceVariation = register(org.fix4j.spec.fix50sp2.fieldtype.MaxPriceVariation.INSTANCE);
    public static final ImpliedMarketIndicator ImpliedMarketIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.ImpliedMarketIndicator.INSTANCE);
    public static final EventTime EventTime = register(org.fix4j.spec.fix50sp2.fieldtype.EventTime.INSTANCE);
    public static final MinPriceIncrementAmount MinPriceIncrementAmount = register(org.fix4j.spec.fix50sp2.fieldtype.MinPriceIncrementAmount.INSTANCE);
    public static final UnitOfMeasureQty UnitOfMeasureQty = register(org.fix4j.spec.fix50sp2.fieldtype.UnitOfMeasureQty.INSTANCE);
    public static final LowLimitPrice LowLimitPrice = register(org.fix4j.spec.fix50sp2.fieldtype.LowLimitPrice.INSTANCE);
    public static final HighLimitPrice HighLimitPrice = register(org.fix4j.spec.fix50sp2.fieldtype.HighLimitPrice.INSTANCE);
    public static final TradingReferencePrice TradingReferencePrice = register(org.fix4j.spec.fix50sp2.fieldtype.TradingReferencePrice.INSTANCE);
    public static final SecurityGroup SecurityGroup = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityGroup.INSTANCE);
    public static final LegNumber LegNumber = register(org.fix4j.spec.fix50sp2.fieldtype.LegNumber.INSTANCE);
    public static final SettlementCycleNo SettlementCycleNo = register(org.fix4j.spec.fix50sp2.fieldtype.SettlementCycleNo.INSTANCE);
    public static final SideCurrency SideCurrency = register(org.fix4j.spec.fix50sp2.fieldtype.SideCurrency.INSTANCE);
    public static final SideSettlCurrency SideSettlCurrency = register(org.fix4j.spec.fix50sp2.fieldtype.SideSettlCurrency.INSTANCE);
    public static final CcyAmt CcyAmt = register(org.fix4j.spec.fix50sp2.fieldtype.CcyAmt.INSTANCE);
    public static final NoSettlDetails NoSettlDetails = register(org.fix4j.spec.fix50sp2.fieldtype.NoSettlDetails.INSTANCE);
    public static final SettlObligMode SettlObligMode = register(org.fix4j.spec.fix50sp2.fieldtype.SettlObligMode.INSTANCE);
    public static final SettlObligMsgID SettlObligMsgID = register(org.fix4j.spec.fix50sp2.fieldtype.SettlObligMsgID.INSTANCE);
    public static final SettlObligID SettlObligID = register(org.fix4j.spec.fix50sp2.fieldtype.SettlObligID.INSTANCE);
    public static final SettlObligTransType SettlObligTransType = register(org.fix4j.spec.fix50sp2.fieldtype.SettlObligTransType.INSTANCE);
    public static final SettlObligRefID SettlObligRefID = register(org.fix4j.spec.fix50sp2.fieldtype.SettlObligRefID.INSTANCE);
    public static final SettlObligSource SettlObligSource = register(org.fix4j.spec.fix50sp2.fieldtype.SettlObligSource.INSTANCE);
    public static final NoSettlOblig NoSettlOblig = register(org.fix4j.spec.fix50sp2.fieldtype.NoSettlOblig.INSTANCE);
    public static final QuoteMsgID QuoteMsgID = register(org.fix4j.spec.fix50sp2.fieldtype.QuoteMsgID.INSTANCE);
    public static final QuoteEntryStatus QuoteEntryStatus = register(org.fix4j.spec.fix50sp2.fieldtype.QuoteEntryStatus.INSTANCE);
    public static final TotNoCxldQuotes TotNoCxldQuotes = register(org.fix4j.spec.fix50sp2.fieldtype.TotNoCxldQuotes.INSTANCE);
    public static final TotNoAccQuotes TotNoAccQuotes = register(org.fix4j.spec.fix50sp2.fieldtype.TotNoAccQuotes.INSTANCE);
    public static final TotNoRejQuotes TotNoRejQuotes = register(org.fix4j.spec.fix50sp2.fieldtype.TotNoRejQuotes.INSTANCE);
    public static final PrivateQuote PrivateQuote = register(org.fix4j.spec.fix50sp2.fieldtype.PrivateQuote.INSTANCE);
    public static final RespondentType RespondentType = register(org.fix4j.spec.fix50sp2.fieldtype.RespondentType.INSTANCE);
    public static final MDSubBookType MDSubBookType = register(org.fix4j.spec.fix50sp2.fieldtype.MDSubBookType.INSTANCE);
    public static final SecurityTradingEvent SecurityTradingEvent = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityTradingEvent.INSTANCE);
    public static final NoStatsIndicators NoStatsIndicators = register(org.fix4j.spec.fix50sp2.fieldtype.NoStatsIndicators.INSTANCE);
    public static final StatsType StatsType = register(org.fix4j.spec.fix50sp2.fieldtype.StatsType.INSTANCE);
    public static final NoOfSecSizes NoOfSecSizes = register(org.fix4j.spec.fix50sp2.fieldtype.NoOfSecSizes.INSTANCE);
    public static final MDSecSizeType MDSecSizeType = register(org.fix4j.spec.fix50sp2.fieldtype.MDSecSizeType.INSTANCE);
    public static final MDSecSize MDSecSize = register(org.fix4j.spec.fix50sp2.fieldtype.MDSecSize.INSTANCE);
    public static final ApplID ApplID = register(org.fix4j.spec.fix50sp2.fieldtype.ApplID.INSTANCE);
    public static final ApplSeqNum ApplSeqNum = register(org.fix4j.spec.fix50sp2.fieldtype.ApplSeqNum.INSTANCE);
    public static final ApplBegSeqNum ApplBegSeqNum = register(org.fix4j.spec.fix50sp2.fieldtype.ApplBegSeqNum.INSTANCE);
    public static final ApplEndSeqNum ApplEndSeqNum = register(org.fix4j.spec.fix50sp2.fieldtype.ApplEndSeqNum.INSTANCE);
    public static final SecurityXMLLen SecurityXMLLen = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityXMLLen.INSTANCE);
    public static final SecurityXML SecurityXML = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityXML.INSTANCE);
    public static final SecurityXMLSchema SecurityXMLSchema = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityXMLSchema.INSTANCE);
    public static final RefreshIndicator RefreshIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.RefreshIndicator.INSTANCE);
    public static final Volatility Volatility = register(org.fix4j.spec.fix50sp2.fieldtype.Volatility.INSTANCE);
    public static final TimeToExpiration TimeToExpiration = register(org.fix4j.spec.fix50sp2.fieldtype.TimeToExpiration.INSTANCE);
    public static final RiskFreeRate RiskFreeRate = register(org.fix4j.spec.fix50sp2.fieldtype.RiskFreeRate.INSTANCE);
    public static final PriceUnitOfMeasure PriceUnitOfMeasure = register(org.fix4j.spec.fix50sp2.fieldtype.PriceUnitOfMeasure.INSTANCE);
    public static final PriceUnitOfMeasureQty PriceUnitOfMeasureQty = register(org.fix4j.spec.fix50sp2.fieldtype.PriceUnitOfMeasureQty.INSTANCE);
    public static final SettlMethod SettlMethod = register(org.fix4j.spec.fix50sp2.fieldtype.SettlMethod.INSTANCE);
    public static final ExerciseStyle ExerciseStyle = register(org.fix4j.spec.fix50sp2.fieldtype.ExerciseStyle.INSTANCE);
    public static final UnderlyingExerciseStyle UnderlyingExerciseStyle = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingExerciseStyle.INSTANCE);
    public static final LegExerciseStyle LegExerciseStyle = register(org.fix4j.spec.fix50sp2.fieldtype.LegExerciseStyle.INSTANCE);
    public static final OptPayoutAmount OptPayoutAmount = register(org.fix4j.spec.fix50sp2.fieldtype.OptPayoutAmount.INSTANCE);
    public static final PriceQuoteMethod PriceQuoteMethod = register(org.fix4j.spec.fix50sp2.fieldtype.PriceQuoteMethod.INSTANCE);
    public static final ValuationMethod ValuationMethod = register(org.fix4j.spec.fix50sp2.fieldtype.ValuationMethod.INSTANCE);
    public static final ListMethod ListMethod = register(org.fix4j.spec.fix50sp2.fieldtype.ListMethod.INSTANCE);
    public static final CapPrice CapPrice = register(org.fix4j.spec.fix50sp2.fieldtype.CapPrice.INSTANCE);
    public static final FloorPrice FloorPrice = register(org.fix4j.spec.fix50sp2.fieldtype.FloorPrice.INSTANCE);
    public static final NoStrikeRules NoStrikeRules = register(org.fix4j.spec.fix50sp2.fieldtype.NoStrikeRules.INSTANCE);
    public static final StartStrikePxRange StartStrikePxRange = register(org.fix4j.spec.fix50sp2.fieldtype.StartStrikePxRange.INSTANCE);
    public static final EndStrikePxRange EndStrikePxRange = register(org.fix4j.spec.fix50sp2.fieldtype.EndStrikePxRange.INSTANCE);
    public static final StrikeIncrement StrikeIncrement = register(org.fix4j.spec.fix50sp2.fieldtype.StrikeIncrement.INSTANCE);
    public static final NoTickRules NoTickRules = register(org.fix4j.spec.fix50sp2.fieldtype.NoTickRules.INSTANCE);
    public static final StartTickPriceRange StartTickPriceRange = register(org.fix4j.spec.fix50sp2.fieldtype.StartTickPriceRange.INSTANCE);
    public static final EndTickPriceRange EndTickPriceRange = register(org.fix4j.spec.fix50sp2.fieldtype.EndTickPriceRange.INSTANCE);
    public static final TickIncrement TickIncrement = register(org.fix4j.spec.fix50sp2.fieldtype.TickIncrement.INSTANCE);
    public static final TickRuleType TickRuleType = register(org.fix4j.spec.fix50sp2.fieldtype.TickRuleType.INSTANCE);
    public static final NestedInstrAttribType NestedInstrAttribType = register(org.fix4j.spec.fix50sp2.fieldtype.NestedInstrAttribType.INSTANCE);
    public static final NestedInstrAttribValue NestedInstrAttribValue = register(org.fix4j.spec.fix50sp2.fieldtype.NestedInstrAttribValue.INSTANCE);
    public static final DerivativeSymbol DerivativeSymbol = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeSymbol.INSTANCE);
    public static final DerivativeSymbolSfx DerivativeSymbolSfx = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeSymbolSfx.INSTANCE);
    public static final DerivativeSecurityID DerivativeSecurityID = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeSecurityID.INSTANCE);
    public static final DerivativeSecurityIDSource DerivativeSecurityIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeSecurityIDSource.INSTANCE);
    public static final NoDerivativeSecurityAltID NoDerivativeSecurityAltID = register(org.fix4j.spec.fix50sp2.fieldtype.NoDerivativeSecurityAltID.INSTANCE);
    public static final DerivativeSecurityAltID DerivativeSecurityAltID = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeSecurityAltID.INSTANCE);
    public static final DerivativeSecurityAltIDSource DerivativeSecurityAltIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeSecurityAltIDSource.INSTANCE);
    public static final SecondaryLowLimitPrice SecondaryLowLimitPrice = register(org.fix4j.spec.fix50sp2.fieldtype.SecondaryLowLimitPrice.INSTANCE);
    public static final SecondaryHighLimitPrice SecondaryHighLimitPrice = register(org.fix4j.spec.fix50sp2.fieldtype.SecondaryHighLimitPrice.INSTANCE);
    public static final MaturityRuleID MaturityRuleID = register(org.fix4j.spec.fix50sp2.fieldtype.MaturityRuleID.INSTANCE);
    public static final StrikeRuleID StrikeRuleID = register(org.fix4j.spec.fix50sp2.fieldtype.StrikeRuleID.INSTANCE);
    public static final DerivativeOptPayAmount DerivativeOptPayAmount = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeOptPayAmount.INSTANCE);
    public static final EndMaturityMonthYear EndMaturityMonthYear = register(org.fix4j.spec.fix50sp2.fieldtype.EndMaturityMonthYear.INSTANCE);
    public static final ProductComplex ProductComplex = register(org.fix4j.spec.fix50sp2.fieldtype.ProductComplex.INSTANCE);
    public static final DerivativeProductComplex DerivativeProductComplex = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeProductComplex.INSTANCE);
    public static final MaturityMonthYearIncrement MaturityMonthYearIncrement = register(org.fix4j.spec.fix50sp2.fieldtype.MaturityMonthYearIncrement.INSTANCE);
    public static final MinLotSize MinLotSize = register(org.fix4j.spec.fix50sp2.fieldtype.MinLotSize.INSTANCE);
    public static final NoExecInstRules NoExecInstRules = register(org.fix4j.spec.fix50sp2.fieldtype.NoExecInstRules.INSTANCE);
    public static final NoLotTypeRules NoLotTypeRules = register(org.fix4j.spec.fix50sp2.fieldtype.NoLotTypeRules.INSTANCE);
    public static final NoMatchRules NoMatchRules = register(org.fix4j.spec.fix50sp2.fieldtype.NoMatchRules.INSTANCE);
    public static final NoMaturityRules NoMaturityRules = register(org.fix4j.spec.fix50sp2.fieldtype.NoMaturityRules.INSTANCE);
    public static final NoOrdTypeRules NoOrdTypeRules = register(org.fix4j.spec.fix50sp2.fieldtype.NoOrdTypeRules.INSTANCE);
    public static final NoTimeInForceRules NoTimeInForceRules = register(org.fix4j.spec.fix50sp2.fieldtype.NoTimeInForceRules.INSTANCE);
    public static final SecondaryTradingReferencePrice SecondaryTradingReferencePrice = register(org.fix4j.spec.fix50sp2.fieldtype.SecondaryTradingReferencePrice.INSTANCE);
    public static final StartMaturityMonthYear StartMaturityMonthYear = register(org.fix4j.spec.fix50sp2.fieldtype.StartMaturityMonthYear.INSTANCE);
    public static final FlexProductEligibilityIndicator FlexProductEligibilityIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.FlexProductEligibilityIndicator.INSTANCE);
    public static final DerivFlexProductEligibilityIndicator DerivFlexProductEligibilityIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.DerivFlexProductEligibilityIndicator.INSTANCE);
    public static final FlexibleIndicator FlexibleIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.FlexibleIndicator.INSTANCE);
    public static final TradingCurrency TradingCurrency = register(org.fix4j.spec.fix50sp2.fieldtype.TradingCurrency.INSTANCE);
    public static final DerivativeProduct DerivativeProduct = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeProduct.INSTANCE);
    public static final DerivativeSecurityGroup DerivativeSecurityGroup = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeSecurityGroup.INSTANCE);
    public static final DerivativeCFICode DerivativeCFICode = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeCFICode.INSTANCE);
    public static final DerivativeSecurityType DerivativeSecurityType = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeSecurityType.INSTANCE);
    public static final DerivativeSecuritySubType DerivativeSecuritySubType = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeSecuritySubType.INSTANCE);
    public static final DerivativeMaturityMonthYear DerivativeMaturityMonthYear = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeMaturityMonthYear.INSTANCE);
    public static final DerivativeMaturityDate DerivativeMaturityDate = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeMaturityDate.INSTANCE);
    public static final DerivativeMaturityTime DerivativeMaturityTime = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeMaturityTime.INSTANCE);
    public static final DerivativeSettleOnOpenFlag DerivativeSettleOnOpenFlag = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeSettleOnOpenFlag.INSTANCE);
    public static final DerivativeInstrmtAssignmentMethod DerivativeInstrmtAssignmentMethod = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeInstrmtAssignmentMethod.INSTANCE);
    public static final DerivativeSecurityStatus DerivativeSecurityStatus = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeSecurityStatus.INSTANCE);
    public static final DerivativeInstrRegistry DerivativeInstrRegistry = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeInstrRegistry.INSTANCE);
    public static final DerivativeCountryOfIssue DerivativeCountryOfIssue = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeCountryOfIssue.INSTANCE);
    public static final DerivativeStateOrProvinceOfIssue DerivativeStateOrProvinceOfIssue = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeStateOrProvinceOfIssue.INSTANCE);
    public static final DerivativeLocaleOfIssue DerivativeLocaleOfIssue = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeLocaleOfIssue.INSTANCE);
    public static final DerivativeStrikePrice DerivativeStrikePrice = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeStrikePrice.INSTANCE);
    public static final DerivativeStrikeCurrency DerivativeStrikeCurrency = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeStrikeCurrency.INSTANCE);
    public static final DerivativeStrikeMultiplier DerivativeStrikeMultiplier = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeStrikeMultiplier.INSTANCE);
    public static final DerivativeStrikeValue DerivativeStrikeValue = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeStrikeValue.INSTANCE);
    public static final DerivativeOptAttribute DerivativeOptAttribute = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeOptAttribute.INSTANCE);
    public static final DerivativeContractMultiplier DerivativeContractMultiplier = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeContractMultiplier.INSTANCE);
    public static final DerivativeMinPriceIncrement DerivativeMinPriceIncrement = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeMinPriceIncrement.INSTANCE);
    public static final DerivativeMinPriceIncrementAmount DerivativeMinPriceIncrementAmount = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeMinPriceIncrementAmount.INSTANCE);
    public static final DerivativeUnitOfMeasure DerivativeUnitOfMeasure = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeUnitOfMeasure.INSTANCE);
    public static final DerivativeUnitOfMeasureQty DerivativeUnitOfMeasureQty = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeUnitOfMeasureQty.INSTANCE);
    public static final DerivativeTimeUnit DerivativeTimeUnit = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeTimeUnit.INSTANCE);
    public static final DerivativeSecurityExchange DerivativeSecurityExchange = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeSecurityExchange.INSTANCE);
    public static final DerivativePositionLimit DerivativePositionLimit = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativePositionLimit.INSTANCE);
    public static final DerivativeNTPositionLimit DerivativeNTPositionLimit = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeNTPositionLimit.INSTANCE);
    public static final DerivativeIssuer DerivativeIssuer = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeIssuer.INSTANCE);
    public static final DerivativeIssueDate DerivativeIssueDate = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeIssueDate.INSTANCE);
    public static final DerivativeEncodedIssuerLen DerivativeEncodedIssuerLen = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeEncodedIssuerLen.INSTANCE);
    public static final DerivativeEncodedIssuer DerivativeEncodedIssuer = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeEncodedIssuer.INSTANCE);
    public static final DerivativeSecurityDesc DerivativeSecurityDesc = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeSecurityDesc.INSTANCE);
    public static final DerivativeEncodedSecurityDescLen DerivativeEncodedSecurityDescLen = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeEncodedSecurityDescLen.INSTANCE);
    public static final DerivativeEncodedSecurityDesc DerivativeEncodedSecurityDesc = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeEncodedSecurityDesc.INSTANCE);
    public static final DerivativeSecurityXMLLen DerivativeSecurityXMLLen = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeSecurityXMLLen.INSTANCE);
    public static final DerivativeSecurityXML DerivativeSecurityXML = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeSecurityXML.INSTANCE);
    public static final DerivativeSecurityXMLSchema DerivativeSecurityXMLSchema = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeSecurityXMLSchema.INSTANCE);
    public static final DerivativeContractSettlMonth DerivativeContractSettlMonth = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeContractSettlMonth.INSTANCE);
    public static final NoDerivativeEvents NoDerivativeEvents = register(org.fix4j.spec.fix50sp2.fieldtype.NoDerivativeEvents.INSTANCE);
    public static final DerivativeEventType DerivativeEventType = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeEventType.INSTANCE);
    public static final DerivativeEventDate DerivativeEventDate = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeEventDate.INSTANCE);
    public static final DerivativeEventTime DerivativeEventTime = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeEventTime.INSTANCE);
    public static final DerivativeEventPx DerivativeEventPx = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeEventPx.INSTANCE);
    public static final DerivativeEventText DerivativeEventText = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeEventText.INSTANCE);
    public static final NoDerivativeInstrumentParties NoDerivativeInstrumentParties = register(org.fix4j.spec.fix50sp2.fieldtype.NoDerivativeInstrumentParties.INSTANCE);
    public static final DerivativeInstrumentPartyID DerivativeInstrumentPartyID = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeInstrumentPartyID.INSTANCE);
    public static final DerivativeInstrumentPartyIDSource DerivativeInstrumentPartyIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeInstrumentPartyIDSource.INSTANCE);
    public static final DerivativeInstrumentPartyRole DerivativeInstrumentPartyRole = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeInstrumentPartyRole.INSTANCE);
    public static final NoDerivativeInstrumentPartySubIDs NoDerivativeInstrumentPartySubIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoDerivativeInstrumentPartySubIDs.INSTANCE);
    public static final DerivativeInstrumentPartySubID DerivativeInstrumentPartySubID = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeInstrumentPartySubID.INSTANCE);
    public static final DerivativeInstrumentPartySubIDType DerivativeInstrumentPartySubIDType = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeInstrumentPartySubIDType.INSTANCE);
    public static final DerivativeExerciseStyle DerivativeExerciseStyle = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeExerciseStyle.INSTANCE);
    public static final MarketSegmentID MarketSegmentID = register(org.fix4j.spec.fix50sp2.fieldtype.MarketSegmentID.INSTANCE);
    public static final MarketID MarketID = register(org.fix4j.spec.fix50sp2.fieldtype.MarketID.INSTANCE);
    public static final MaturityMonthYearIncrementUnits MaturityMonthYearIncrementUnits = register(org.fix4j.spec.fix50sp2.fieldtype.MaturityMonthYearIncrementUnits.INSTANCE);
    public static final MaturityMonthYearFormat MaturityMonthYearFormat = register(org.fix4j.spec.fix50sp2.fieldtype.MaturityMonthYearFormat.INSTANCE);
    public static final StrikeExerciseStyle StrikeExerciseStyle = register(org.fix4j.spec.fix50sp2.fieldtype.StrikeExerciseStyle.INSTANCE);
    public static final SecondaryPriceLimitType SecondaryPriceLimitType = register(org.fix4j.spec.fix50sp2.fieldtype.SecondaryPriceLimitType.INSTANCE);
    public static final PriceLimitType PriceLimitType = register(org.fix4j.spec.fix50sp2.fieldtype.PriceLimitType.INSTANCE);
    public static final DerivativeSecurityListRequestType DerivativeSecurityListRequestType = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeSecurityListRequestType.INSTANCE);
    public static final ExecInstValue ExecInstValue = register(org.fix4j.spec.fix50sp2.fieldtype.ExecInstValue.INSTANCE);
    public static final NoTradingSessionRules NoTradingSessionRules = register(org.fix4j.spec.fix50sp2.fieldtype.NoTradingSessionRules.INSTANCE);
    public static final NoMarketSegments NoMarketSegments = register(org.fix4j.spec.fix50sp2.fieldtype.NoMarketSegments.INSTANCE);
    public static final NoDerivativeInstrAttrib NoDerivativeInstrAttrib = register(org.fix4j.spec.fix50sp2.fieldtype.NoDerivativeInstrAttrib.INSTANCE);
    public static final NoNestedInstrAttrib NoNestedInstrAttrib = register(org.fix4j.spec.fix50sp2.fieldtype.NoNestedInstrAttrib.INSTANCE);
    public static final DerivativeInstrAttribType DerivativeInstrAttribType = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeInstrAttribType.INSTANCE);
    public static final DerivativeInstrAttribValue DerivativeInstrAttribValue = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeInstrAttribValue.INSTANCE);
    public static final DerivativePriceUnitOfMeasure DerivativePriceUnitOfMeasure = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativePriceUnitOfMeasure.INSTANCE);
    public static final DerivativePriceUnitOfMeasureQty DerivativePriceUnitOfMeasureQty = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativePriceUnitOfMeasureQty.INSTANCE);
    public static final DerivativeSettlMethod DerivativeSettlMethod = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeSettlMethod.INSTANCE);
    public static final DerivativePriceQuoteMethod DerivativePriceQuoteMethod = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativePriceQuoteMethod.INSTANCE);
    public static final DerivativeValuationMethod DerivativeValuationMethod = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeValuationMethod.INSTANCE);
    public static final DerivativeListMethod DerivativeListMethod = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeListMethod.INSTANCE);
    public static final DerivativeCapPrice DerivativeCapPrice = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeCapPrice.INSTANCE);
    public static final DerivativeFloorPrice DerivativeFloorPrice = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeFloorPrice.INSTANCE);
    public static final DerivativePutOrCall DerivativePutOrCall = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativePutOrCall.INSTANCE);
    public static final ListUpdateAction ListUpdateAction = register(org.fix4j.spec.fix50sp2.fieldtype.ListUpdateAction.INSTANCE);
    public static final LegPutOrCall LegPutOrCall = register(org.fix4j.spec.fix50sp2.fieldtype.LegPutOrCall.INSTANCE);
    public static final LegUnitOfMeasureQty LegUnitOfMeasureQty = register(org.fix4j.spec.fix50sp2.fieldtype.LegUnitOfMeasureQty.INSTANCE);
    public static final LegPriceUnitOfMeasure LegPriceUnitOfMeasure = register(org.fix4j.spec.fix50sp2.fieldtype.LegPriceUnitOfMeasure.INSTANCE);
    public static final LegPriceUnitOfMeasureQty LegPriceUnitOfMeasureQty = register(org.fix4j.spec.fix50sp2.fieldtype.LegPriceUnitOfMeasureQty.INSTANCE);
    public static final UnderlyingUnitOfMeasureQty UnderlyingUnitOfMeasureQty = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingUnitOfMeasureQty.INSTANCE);
    public static final UnderlyingPriceUnitOfMeasure UnderlyingPriceUnitOfMeasure = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingPriceUnitOfMeasure.INSTANCE);
    public static final UnderlyingPriceUnitOfMeasureQty UnderlyingPriceUnitOfMeasureQty = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingPriceUnitOfMeasureQty.INSTANCE);
    public static final MarketReqID MarketReqID = register(org.fix4j.spec.fix50sp2.fieldtype.MarketReqID.INSTANCE);
    public static final MarketReportID MarketReportID = register(org.fix4j.spec.fix50sp2.fieldtype.MarketReportID.INSTANCE);
    public static final MarketUpdateAction MarketUpdateAction = register(org.fix4j.spec.fix50sp2.fieldtype.MarketUpdateAction.INSTANCE);
    public static final MarketSegmentDesc MarketSegmentDesc = register(org.fix4j.spec.fix50sp2.fieldtype.MarketSegmentDesc.INSTANCE);
    public static final EncodedMktSegmDescLen EncodedMktSegmDescLen = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedMktSegmDescLen.INSTANCE);
    public static final EncodedMktSegmDesc EncodedMktSegmDesc = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedMktSegmDesc.INSTANCE);
    public static final ParentMktSegmID ParentMktSegmID = register(org.fix4j.spec.fix50sp2.fieldtype.ParentMktSegmID.INSTANCE);
    public static final TradingSessionDesc TradingSessionDesc = register(org.fix4j.spec.fix50sp2.fieldtype.TradingSessionDesc.INSTANCE);
    public static final TradSesUpdateAction TradSesUpdateAction = register(org.fix4j.spec.fix50sp2.fieldtype.TradSesUpdateAction.INSTANCE);
    public static final RejectText RejectText = register(org.fix4j.spec.fix50sp2.fieldtype.RejectText.INSTANCE);
    public static final FeeMultiplier FeeMultiplier = register(org.fix4j.spec.fix50sp2.fieldtype.FeeMultiplier.INSTANCE);
    public static final UnderlyingLegSymbol UnderlyingLegSymbol = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingLegSymbol.INSTANCE);
    public static final UnderlyingLegSymbolSfx UnderlyingLegSymbolSfx = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingLegSymbolSfx.INSTANCE);
    public static final UnderlyingLegSecurityID UnderlyingLegSecurityID = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingLegSecurityID.INSTANCE);
    public static final UnderlyingLegSecurityIDSource UnderlyingLegSecurityIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingLegSecurityIDSource.INSTANCE);
    public static final NoUnderlyingLegSecurityAltID NoUnderlyingLegSecurityAltID = register(org.fix4j.spec.fix50sp2.fieldtype.NoUnderlyingLegSecurityAltID.INSTANCE);
    public static final UnderlyingLegSecurityAltID UnderlyingLegSecurityAltID = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingLegSecurityAltID.INSTANCE);
    public static final UnderlyingLegSecurityAltIDSource UnderlyingLegSecurityAltIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingLegSecurityAltIDSource.INSTANCE);
    public static final UnderlyingLegSecurityType UnderlyingLegSecurityType = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingLegSecurityType.INSTANCE);
    public static final UnderlyingLegSecuritySubType UnderlyingLegSecuritySubType = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingLegSecuritySubType.INSTANCE);
    public static final UnderlyingLegMaturityMonthYear UnderlyingLegMaturityMonthYear = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingLegMaturityMonthYear.INSTANCE);
    public static final UnderlyingLegPutOrCall UnderlyingLegPutOrCall = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingLegPutOrCall.INSTANCE);
    public static final UnderlyingLegStrikePrice UnderlyingLegStrikePrice = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingLegStrikePrice.INSTANCE);
    public static final UnderlyingLegSecurityExchange UnderlyingLegSecurityExchange = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingLegSecurityExchange.INSTANCE);
    public static final NoOfLegUnderlyings NoOfLegUnderlyings = register(org.fix4j.spec.fix50sp2.fieldtype.NoOfLegUnderlyings.INSTANCE);
    public static final UnderlyingLegCFICode UnderlyingLegCFICode = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingLegCFICode.INSTANCE);
    public static final UnderlyingLegMaturityDate UnderlyingLegMaturityDate = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingLegMaturityDate.INSTANCE);
    public static final UnderlyingLegMaturityTime UnderlyingLegMaturityTime = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingLegMaturityTime.INSTANCE);
    public static final UnderlyingLegOptAttribute UnderlyingLegOptAttribute = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingLegOptAttribute.INSTANCE);
    public static final UnderlyingLegSecurityDesc UnderlyingLegSecurityDesc = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingLegSecurityDesc.INSTANCE);
    public static final EncryptedPasswordMethod EncryptedPasswordMethod = register(org.fix4j.spec.fix50sp2.fieldtype.EncryptedPasswordMethod.INSTANCE);
    public static final EncryptedPasswordLen EncryptedPasswordLen = register(org.fix4j.spec.fix50sp2.fieldtype.EncryptedPasswordLen.INSTANCE);
    public static final EncryptedPassword EncryptedPassword = register(org.fix4j.spec.fix50sp2.fieldtype.EncryptedPassword.INSTANCE);
    public static final EncryptedNewPasswordLen EncryptedNewPasswordLen = register(org.fix4j.spec.fix50sp2.fieldtype.EncryptedNewPasswordLen.INSTANCE);
    public static final EncryptedNewPassword EncryptedNewPassword = register(org.fix4j.spec.fix50sp2.fieldtype.EncryptedNewPassword.INSTANCE);
    public static final ApplExtID ApplExtID = register(org.fix4j.spec.fix50sp2.fieldtype.ApplExtID.INSTANCE);
    public static final RefApplExtID RefApplExtID = register(org.fix4j.spec.fix50sp2.fieldtype.RefApplExtID.INSTANCE);
    public static final DefaultApplExtID DefaultApplExtID = register(org.fix4j.spec.fix50sp2.fieldtype.DefaultApplExtID.INSTANCE);
    public static final DefaultCstmApplVerID DefaultCstmApplVerID = register(org.fix4j.spec.fix50sp2.fieldtype.DefaultCstmApplVerID.INSTANCE);
    public static final SessionStatus SessionStatus = register(org.fix4j.spec.fix50sp2.fieldtype.SessionStatus.INSTANCE);
    public static final DefaultVerIndicator DefaultVerIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.DefaultVerIndicator.INSTANCE);
    public static final NoUsernames NoUsernames = register(org.fix4j.spec.fix50sp2.fieldtype.NoUsernames.INSTANCE);
    public static final LegAllocSettlCurrency LegAllocSettlCurrency = register(org.fix4j.spec.fix50sp2.fieldtype.LegAllocSettlCurrency.INSTANCE);
    public static final EncodedSymbolLen EncodedSymbolLen = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedSymbolLen.INSTANCE);
    public static final EncodedSymbol EncodedSymbol = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedSymbol.INSTANCE);
    public static final TotNoFills TotNoFills = register(org.fix4j.spec.fix50sp2.fieldtype.TotNoFills.INSTANCE);
    public static final NoFills NoFills = register(org.fix4j.spec.fix50sp2.fieldtype.NoFills.INSTANCE);
    public static final FillExecID FillExecID = register(org.fix4j.spec.fix50sp2.fieldtype.FillExecID.INSTANCE);
    public static final FillPx FillPx = register(org.fix4j.spec.fix50sp2.fieldtype.FillPx.INSTANCE);
    public static final FillQty FillQty = register(org.fix4j.spec.fix50sp2.fieldtype.FillQty.INSTANCE);
    public static final LegAllocID LegAllocID = register(org.fix4j.spec.fix50sp2.fieldtype.LegAllocID.INSTANCE);
    public static final TradSesEvent TradSesEvent = register(org.fix4j.spec.fix50sp2.fieldtype.TradSesEvent.INSTANCE);
    public static final MassActionReportID MassActionReportID = register(org.fix4j.spec.fix50sp2.fieldtype.MassActionReportID.INSTANCE);
    public static final NoNotAffectedOrders NoNotAffectedOrders = register(org.fix4j.spec.fix50sp2.fieldtype.NoNotAffectedOrders.INSTANCE);
    public static final NotAffectedOrderID NotAffectedOrderID = register(org.fix4j.spec.fix50sp2.fieldtype.NotAffectedOrderID.INSTANCE);
    public static final NotAffOrigClOrdID NotAffOrigClOrdID = register(org.fix4j.spec.fix50sp2.fieldtype.NotAffOrigClOrdID.INSTANCE);
    public static final MassActionType MassActionType = register(org.fix4j.spec.fix50sp2.fieldtype.MassActionType.INSTANCE);
    public static final MassActionScope MassActionScope = register(org.fix4j.spec.fix50sp2.fieldtype.MassActionScope.INSTANCE);
    public static final MassActionResponse MassActionResponse = register(org.fix4j.spec.fix50sp2.fieldtype.MassActionResponse.INSTANCE);
    public static final MassActionRejectReason MassActionRejectReason = register(org.fix4j.spec.fix50sp2.fieldtype.MassActionRejectReason.INSTANCE);
    public static final MultilegModel MultilegModel = register(org.fix4j.spec.fix50sp2.fieldtype.MultilegModel.INSTANCE);
    public static final MultilegPriceMethod MultilegPriceMethod = register(org.fix4j.spec.fix50sp2.fieldtype.MultilegPriceMethod.INSTANCE);
    public static final LegVolatility LegVolatility = register(org.fix4j.spec.fix50sp2.fieldtype.LegVolatility.INSTANCE);
    public static final DividendYield DividendYield = register(org.fix4j.spec.fix50sp2.fieldtype.DividendYield.INSTANCE);
    public static final LegDividendYield LegDividendYield = register(org.fix4j.spec.fix50sp2.fieldtype.LegDividendYield.INSTANCE);
    public static final CurrencyRatio CurrencyRatio = register(org.fix4j.spec.fix50sp2.fieldtype.CurrencyRatio.INSTANCE);
    public static final LegCurrencyRatio LegCurrencyRatio = register(org.fix4j.spec.fix50sp2.fieldtype.LegCurrencyRatio.INSTANCE);
    public static final LegExecInst LegExecInst = register(org.fix4j.spec.fix50sp2.fieldtype.LegExecInst.INSTANCE);
    public static final ContingencyType ContingencyType = register(org.fix4j.spec.fix50sp2.fieldtype.ContingencyType.INSTANCE);
    public static final ListRejectReason ListRejectReason = register(org.fix4j.spec.fix50sp2.fieldtype.ListRejectReason.INSTANCE);
    public static final NoTrdRepIndicators NoTrdRepIndicators = register(org.fix4j.spec.fix50sp2.fieldtype.NoTrdRepIndicators.INSTANCE);
    public static final TrdRepPartyRole TrdRepPartyRole = register(org.fix4j.spec.fix50sp2.fieldtype.TrdRepPartyRole.INSTANCE);
    public static final TrdRepIndicator TrdRepIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.TrdRepIndicator.INSTANCE);
    public static final TradePublishIndicator TradePublishIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.TradePublishIndicator.INSTANCE);
    public static final ApplReqID ApplReqID = register(org.fix4j.spec.fix50sp2.fieldtype.ApplReqID.INSTANCE);
    public static final ApplReqType ApplReqType = register(org.fix4j.spec.fix50sp2.fieldtype.ApplReqType.INSTANCE);
    public static final ApplResponseType ApplResponseType = register(org.fix4j.spec.fix50sp2.fieldtype.ApplResponseType.INSTANCE);
    public static final ApplTotalMessageCount ApplTotalMessageCount = register(org.fix4j.spec.fix50sp2.fieldtype.ApplTotalMessageCount.INSTANCE);
    public static final ApplLastSeqNum ApplLastSeqNum = register(org.fix4j.spec.fix50sp2.fieldtype.ApplLastSeqNum.INSTANCE);
    public static final NoApplIDs NoApplIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoApplIDs.INSTANCE);
    public static final ApplResendFlag ApplResendFlag = register(org.fix4j.spec.fix50sp2.fieldtype.ApplResendFlag.INSTANCE);
    public static final ApplResponseID ApplResponseID = register(org.fix4j.spec.fix50sp2.fieldtype.ApplResponseID.INSTANCE);
    public static final ApplResponseError ApplResponseError = register(org.fix4j.spec.fix50sp2.fieldtype.ApplResponseError.INSTANCE);
    public static final RefApplID RefApplID = register(org.fix4j.spec.fix50sp2.fieldtype.RefApplID.INSTANCE);
    public static final ApplReportID ApplReportID = register(org.fix4j.spec.fix50sp2.fieldtype.ApplReportID.INSTANCE);
    public static final RefApplLastSeqNum RefApplLastSeqNum = register(org.fix4j.spec.fix50sp2.fieldtype.RefApplLastSeqNum.INSTANCE);
    public static final ApplNewSeqNum ApplNewSeqNum = register(org.fix4j.spec.fix50sp2.fieldtype.ApplNewSeqNum.INSTANCE);
    public static final ApplReportType ApplReportType = register(org.fix4j.spec.fix50sp2.fieldtype.ApplReportType.INSTANCE);
    public static final Nested4PartySubIDType Nested4PartySubIDType = register(org.fix4j.spec.fix50sp2.fieldtype.Nested4PartySubIDType.INSTANCE);
    public static final Nested4PartySubID Nested4PartySubID = register(org.fix4j.spec.fix50sp2.fieldtype.Nested4PartySubID.INSTANCE);
    public static final NoNested4PartySubIDs NoNested4PartySubIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoNested4PartySubIDs.INSTANCE);
    public static final NoNested4PartyIDs NoNested4PartyIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoNested4PartyIDs.INSTANCE);
    public static final Nested4PartyID Nested4PartyID = register(org.fix4j.spec.fix50sp2.fieldtype.Nested4PartyID.INSTANCE);
    public static final Nested4PartyIDSource Nested4PartyIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.Nested4PartyIDSource.INSTANCE);
    public static final Nested4PartyRole Nested4PartyRole = register(org.fix4j.spec.fix50sp2.fieldtype.Nested4PartyRole.INSTANCE);
    public static final LegLastQty LegLastQty = register(org.fix4j.spec.fix50sp2.fieldtype.LegLastQty.INSTANCE);
    public static final SideExecID SideExecID = register(org.fix4j.spec.fix50sp2.fieldtype.SideExecID.INSTANCE);
    public static final OrderDelay OrderDelay = register(org.fix4j.spec.fix50sp2.fieldtype.OrderDelay.INSTANCE);
    public static final OrderDelayUnit OrderDelayUnit = register(org.fix4j.spec.fix50sp2.fieldtype.OrderDelayUnit.INSTANCE);
    public static final VenueType VenueType = register(org.fix4j.spec.fix50sp2.fieldtype.VenueType.INSTANCE);
    public static final RefOrdIDReason RefOrdIDReason = register(org.fix4j.spec.fix50sp2.fieldtype.RefOrdIDReason.INSTANCE);
    public static final OrigCustOrderCapacity OrigCustOrderCapacity = register(org.fix4j.spec.fix50sp2.fieldtype.OrigCustOrderCapacity.INSTANCE);
    public static final RefApplReqID RefApplReqID = register(org.fix4j.spec.fix50sp2.fieldtype.RefApplReqID.INSTANCE);
    public static final ModelType ModelType = register(org.fix4j.spec.fix50sp2.fieldtype.ModelType.INSTANCE);
    public static final ContractMultiplierUnit ContractMultiplierUnit = register(org.fix4j.spec.fix50sp2.fieldtype.ContractMultiplierUnit.INSTANCE);
    public static final LegContractMultiplierUnit LegContractMultiplierUnit = register(org.fix4j.spec.fix50sp2.fieldtype.LegContractMultiplierUnit.INSTANCE);
    public static final UnderlyingContractMultiplierUnit UnderlyingContractMultiplierUnit = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingContractMultiplierUnit.INSTANCE);
    public static final DerivativeContractMultiplierUnit DerivativeContractMultiplierUnit = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeContractMultiplierUnit.INSTANCE);
    public static final FlowScheduleType FlowScheduleType = register(org.fix4j.spec.fix50sp2.fieldtype.FlowScheduleType.INSTANCE);
    public static final LegFlowScheduleType LegFlowScheduleType = register(org.fix4j.spec.fix50sp2.fieldtype.LegFlowScheduleType.INSTANCE);
    public static final UnderlyingFlowScheduleType UnderlyingFlowScheduleType = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingFlowScheduleType.INSTANCE);
    public static final DerivativeFlowScheduleType DerivativeFlowScheduleType = register(org.fix4j.spec.fix50sp2.fieldtype.DerivativeFlowScheduleType.INSTANCE);
    public static final FillLiquidityInd FillLiquidityInd = register(org.fix4j.spec.fix50sp2.fieldtype.FillLiquidityInd.INSTANCE);
    public static final SideLiquidityInd SideLiquidityInd = register(org.fix4j.spec.fix50sp2.fieldtype.SideLiquidityInd.INSTANCE);
    public static final NoRateSources NoRateSources = register(org.fix4j.spec.fix50sp2.fieldtype.NoRateSources.INSTANCE);
    public static final RateSource RateSource = register(org.fix4j.spec.fix50sp2.fieldtype.RateSource.INSTANCE);
    public static final RateSourceType RateSourceType = register(org.fix4j.spec.fix50sp2.fieldtype.RateSourceType.INSTANCE);
    public static final ReferencePage ReferencePage = register(org.fix4j.spec.fix50sp2.fieldtype.ReferencePage.INSTANCE);
    public static final RestructuringType RestructuringType = register(org.fix4j.spec.fix50sp2.fieldtype.RestructuringType.INSTANCE);
    public static final Seniority Seniority = register(org.fix4j.spec.fix50sp2.fieldtype.Seniority.INSTANCE);
    public static final NotionalPercentageOutstanding NotionalPercentageOutstanding = register(org.fix4j.spec.fix50sp2.fieldtype.NotionalPercentageOutstanding.INSTANCE);
    public static final OriginalNotionalPercentageOutstanding OriginalNotionalPercentageOutstanding = register(org.fix4j.spec.fix50sp2.fieldtype.OriginalNotionalPercentageOutstanding.INSTANCE);
    public static final UnderlyingRestructuringType UnderlyingRestructuringType = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingRestructuringType.INSTANCE);
    public static final UnderlyingSeniority UnderlyingSeniority = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingSeniority.INSTANCE);
    public static final UnderlyingNotionalPercentageOutstanding UnderlyingNotionalPercentageOutstanding = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingNotionalPercentageOutstanding.INSTANCE);
    public static final UnderlyingOriginalNotionalPercentageOutstanding UnderlyingOriginalNotionalPercentageOutstanding = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingOriginalNotionalPercentageOutstanding.INSTANCE);
    public static final AttachmentPoint AttachmentPoint = register(org.fix4j.spec.fix50sp2.fieldtype.AttachmentPoint.INSTANCE);
    public static final DetachmentPoint DetachmentPoint = register(org.fix4j.spec.fix50sp2.fieldtype.DetachmentPoint.INSTANCE);
    public static final UnderlyingAttachmentPoint UnderlyingAttachmentPoint = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingAttachmentPoint.INSTANCE);
    public static final UnderlyingDetachmentPoint UnderlyingDetachmentPoint = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingDetachmentPoint.INSTANCE);
    public static final NoTargetPartyIDs NoTargetPartyIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoTargetPartyIDs.INSTANCE);
    public static final TargetPartyID TargetPartyID = register(org.fix4j.spec.fix50sp2.fieldtype.TargetPartyID.INSTANCE);
    public static final TargetPartyIDSource TargetPartyIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.TargetPartyIDSource.INSTANCE);
    public static final TargetPartyRole TargetPartyRole = register(org.fix4j.spec.fix50sp2.fieldtype.TargetPartyRole.INSTANCE);
    public static final SecurityListID SecurityListID = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityListID.INSTANCE);
    public static final SecurityListRefID SecurityListRefID = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityListRefID.INSTANCE);
    public static final SecurityListDesc SecurityListDesc = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityListDesc.INSTANCE);
    public static final EncodedSecurityListDescLen EncodedSecurityListDescLen = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedSecurityListDescLen.INSTANCE);
    public static final EncodedSecurityListDesc EncodedSecurityListDesc = register(org.fix4j.spec.fix50sp2.fieldtype.EncodedSecurityListDesc.INSTANCE);
    public static final SecurityListType SecurityListType = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityListType.INSTANCE);
    public static final SecurityListTypeSource SecurityListTypeSource = register(org.fix4j.spec.fix50sp2.fieldtype.SecurityListTypeSource.INSTANCE);
    public static final NewsID NewsID = register(org.fix4j.spec.fix50sp2.fieldtype.NewsID.INSTANCE);
    public static final NewsCategory NewsCategory = register(org.fix4j.spec.fix50sp2.fieldtype.NewsCategory.INSTANCE);
    public static final LanguageCode LanguageCode = register(org.fix4j.spec.fix50sp2.fieldtype.LanguageCode.INSTANCE);
    public static final NoNewsRefIDs NoNewsRefIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoNewsRefIDs.INSTANCE);
    public static final NewsRefID NewsRefID = register(org.fix4j.spec.fix50sp2.fieldtype.NewsRefID.INSTANCE);
    public static final NewsRefType NewsRefType = register(org.fix4j.spec.fix50sp2.fieldtype.NewsRefType.INSTANCE);
    public static final StrikePriceDeterminationMethod StrikePriceDeterminationMethod = register(org.fix4j.spec.fix50sp2.fieldtype.StrikePriceDeterminationMethod.INSTANCE);
    public static final StrikePriceBoundaryMethod StrikePriceBoundaryMethod = register(org.fix4j.spec.fix50sp2.fieldtype.StrikePriceBoundaryMethod.INSTANCE);
    public static final StrikePriceBoundaryPrecision StrikePriceBoundaryPrecision = register(org.fix4j.spec.fix50sp2.fieldtype.StrikePriceBoundaryPrecision.INSTANCE);
    public static final UnderlyingPriceDeterminationMethod UnderlyingPriceDeterminationMethod = register(org.fix4j.spec.fix50sp2.fieldtype.UnderlyingPriceDeterminationMethod.INSTANCE);
    public static final OptPayoutType OptPayoutType = register(org.fix4j.spec.fix50sp2.fieldtype.OptPayoutType.INSTANCE);
    public static final NoComplexEvents NoComplexEvents = register(org.fix4j.spec.fix50sp2.fieldtype.NoComplexEvents.INSTANCE);
    public static final ComplexEventType ComplexEventType = register(org.fix4j.spec.fix50sp2.fieldtype.ComplexEventType.INSTANCE);
    public static final ComplexOptPayoutAmount ComplexOptPayoutAmount = register(org.fix4j.spec.fix50sp2.fieldtype.ComplexOptPayoutAmount.INSTANCE);
    public static final ComplexEventPrice ComplexEventPrice = register(org.fix4j.spec.fix50sp2.fieldtype.ComplexEventPrice.INSTANCE);
    public static final ComplexEventPriceBoundaryMethod ComplexEventPriceBoundaryMethod = register(org.fix4j.spec.fix50sp2.fieldtype.ComplexEventPriceBoundaryMethod.INSTANCE);
    public static final ComplexEventPriceBoundaryPrecision ComplexEventPriceBoundaryPrecision = register(org.fix4j.spec.fix50sp2.fieldtype.ComplexEventPriceBoundaryPrecision.INSTANCE);
    public static final ComplexEventPriceTimeType ComplexEventPriceTimeType = register(org.fix4j.spec.fix50sp2.fieldtype.ComplexEventPriceTimeType.INSTANCE);
    public static final ComplexEventCondition ComplexEventCondition = register(org.fix4j.spec.fix50sp2.fieldtype.ComplexEventCondition.INSTANCE);
    public static final NoComplexEventDates NoComplexEventDates = register(org.fix4j.spec.fix50sp2.fieldtype.NoComplexEventDates.INSTANCE);
    public static final ComplexEventStartDate ComplexEventStartDate = register(org.fix4j.spec.fix50sp2.fieldtype.ComplexEventStartDate.INSTANCE);
    public static final ComplexEventEndDate ComplexEventEndDate = register(org.fix4j.spec.fix50sp2.fieldtype.ComplexEventEndDate.INSTANCE);
    public static final NoComplexEventTimes NoComplexEventTimes = register(org.fix4j.spec.fix50sp2.fieldtype.NoComplexEventTimes.INSTANCE);
    public static final ComplexEventStartTime ComplexEventStartTime = register(org.fix4j.spec.fix50sp2.fieldtype.ComplexEventStartTime.INSTANCE);
    public static final ComplexEventEndTime ComplexEventEndTime = register(org.fix4j.spec.fix50sp2.fieldtype.ComplexEventEndTime.INSTANCE);
    public static final StreamAsgnReqID StreamAsgnReqID = register(org.fix4j.spec.fix50sp2.fieldtype.StreamAsgnReqID.INSTANCE);
    public static final StreamAsgnReqType StreamAsgnReqType = register(org.fix4j.spec.fix50sp2.fieldtype.StreamAsgnReqType.INSTANCE);
    public static final NoAsgnReqs NoAsgnReqs = register(org.fix4j.spec.fix50sp2.fieldtype.NoAsgnReqs.INSTANCE);
    public static final MDStreamID MDStreamID = register(org.fix4j.spec.fix50sp2.fieldtype.MDStreamID.INSTANCE);
    public static final StreamAsgnRptID StreamAsgnRptID = register(org.fix4j.spec.fix50sp2.fieldtype.StreamAsgnRptID.INSTANCE);
    public static final StreamAsgnRejReason StreamAsgnRejReason = register(org.fix4j.spec.fix50sp2.fieldtype.StreamAsgnRejReason.INSTANCE);
    public static final StreamAsgnAckType StreamAsgnAckType = register(org.fix4j.spec.fix50sp2.fieldtype.StreamAsgnAckType.INSTANCE);
    public static final StreamAsgnType StreamAsgnType = register(org.fix4j.spec.fix50sp2.fieldtype.StreamAsgnType.INSTANCE);
    public static final RelSymTransactTime RelSymTransactTime = register(org.fix4j.spec.fix50sp2.fieldtype.RelSymTransactTime.INSTANCE);
    public static final PartyDetailsListRequestID PartyDetailsListRequestID = register(org.fix4j.spec.fix50sp2.fieldtype.PartyDetailsListRequestID.INSTANCE);
    public static final NoPartyListResponseTypes NoPartyListResponseTypes = register(org.fix4j.spec.fix50sp2.fieldtype.NoPartyListResponseTypes.INSTANCE);
    public static final PartyListResponseType PartyListResponseType = register(org.fix4j.spec.fix50sp2.fieldtype.PartyListResponseType.INSTANCE);
    public static final NoRequestedPartyRoles NoRequestedPartyRoles = register(org.fix4j.spec.fix50sp2.fieldtype.NoRequestedPartyRoles.INSTANCE);
    public static final RequestedPartyRole RequestedPartyRole = register(org.fix4j.spec.fix50sp2.fieldtype.RequestedPartyRole.INSTANCE);
    public static final PartyDetailsListReportID PartyDetailsListReportID = register(org.fix4j.spec.fix50sp2.fieldtype.PartyDetailsListReportID.INSTANCE);
    public static final PartyDetailsRequestResult PartyDetailsRequestResult = register(org.fix4j.spec.fix50sp2.fieldtype.PartyDetailsRequestResult.INSTANCE);
    public static final TotNoPartyList TotNoPartyList = register(org.fix4j.spec.fix50sp2.fieldtype.TotNoPartyList.INSTANCE);
    public static final NoPartyList NoPartyList = register(org.fix4j.spec.fix50sp2.fieldtype.NoPartyList.INSTANCE);
    public static final NoPartyRelationships NoPartyRelationships = register(org.fix4j.spec.fix50sp2.fieldtype.NoPartyRelationships.INSTANCE);
    public static final PartyRelationship PartyRelationship = register(org.fix4j.spec.fix50sp2.fieldtype.PartyRelationship.INSTANCE);
    public static final NoPartyAltIDs NoPartyAltIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoPartyAltIDs.INSTANCE);
    public static final PartyAltID PartyAltID = register(org.fix4j.spec.fix50sp2.fieldtype.PartyAltID.INSTANCE);
    public static final PartyAltIDSource PartyAltIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.PartyAltIDSource.INSTANCE);
    public static final NoPartyAltSubIDs NoPartyAltSubIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoPartyAltSubIDs.INSTANCE);
    public static final PartyAltSubID PartyAltSubID = register(org.fix4j.spec.fix50sp2.fieldtype.PartyAltSubID.INSTANCE);
    public static final PartyAltSubIDType PartyAltSubIDType = register(org.fix4j.spec.fix50sp2.fieldtype.PartyAltSubIDType.INSTANCE);
    public static final NoContextPartyIDs NoContextPartyIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoContextPartyIDs.INSTANCE);
    public static final ContextPartyID ContextPartyID = register(org.fix4j.spec.fix50sp2.fieldtype.ContextPartyID.INSTANCE);
    public static final ContextPartyIDSource ContextPartyIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.ContextPartyIDSource.INSTANCE);
    public static final ContextPartyRole ContextPartyRole = register(org.fix4j.spec.fix50sp2.fieldtype.ContextPartyRole.INSTANCE);
    public static final NoContextPartySubIDs NoContextPartySubIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoContextPartySubIDs.INSTANCE);
    public static final ContextPartySubID ContextPartySubID = register(org.fix4j.spec.fix50sp2.fieldtype.ContextPartySubID.INSTANCE);
    public static final ContextPartySubIDType ContextPartySubIDType = register(org.fix4j.spec.fix50sp2.fieldtype.ContextPartySubIDType.INSTANCE);
    public static final NoRiskLimits NoRiskLimits = register(org.fix4j.spec.fix50sp2.fieldtype.NoRiskLimits.INSTANCE);
    public static final RiskLimitType RiskLimitType = register(org.fix4j.spec.fix50sp2.fieldtype.RiskLimitType.INSTANCE);
    public static final RiskLimitAmount RiskLimitAmount = register(org.fix4j.spec.fix50sp2.fieldtype.RiskLimitAmount.INSTANCE);
    public static final RiskLimitCurrency RiskLimitCurrency = register(org.fix4j.spec.fix50sp2.fieldtype.RiskLimitCurrency.INSTANCE);
    public static final RiskLimitPlatform RiskLimitPlatform = register(org.fix4j.spec.fix50sp2.fieldtype.RiskLimitPlatform.INSTANCE);
    public static final NoRiskInstruments NoRiskInstruments = register(org.fix4j.spec.fix50sp2.fieldtype.NoRiskInstruments.INSTANCE);
    public static final RiskInstrumentOperator RiskInstrumentOperator = register(org.fix4j.spec.fix50sp2.fieldtype.RiskInstrumentOperator.INSTANCE);
    public static final RiskSymbol RiskSymbol = register(org.fix4j.spec.fix50sp2.fieldtype.RiskSymbol.INSTANCE);
    public static final RiskSymbolSfx RiskSymbolSfx = register(org.fix4j.spec.fix50sp2.fieldtype.RiskSymbolSfx.INSTANCE);
    public static final RiskSecurityID RiskSecurityID = register(org.fix4j.spec.fix50sp2.fieldtype.RiskSecurityID.INSTANCE);
    public static final RiskSecurityIDSource RiskSecurityIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.RiskSecurityIDSource.INSTANCE);
    public static final NoRiskSecurityAltID NoRiskSecurityAltID = register(org.fix4j.spec.fix50sp2.fieldtype.NoRiskSecurityAltID.INSTANCE);
    public static final RiskSecurityAltID RiskSecurityAltID = register(org.fix4j.spec.fix50sp2.fieldtype.RiskSecurityAltID.INSTANCE);
    public static final RiskSecurityAltIDSource RiskSecurityAltIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.RiskSecurityAltIDSource.INSTANCE);
    public static final RiskProduct RiskProduct = register(org.fix4j.spec.fix50sp2.fieldtype.RiskProduct.INSTANCE);
    public static final RiskProductComplex RiskProductComplex = register(org.fix4j.spec.fix50sp2.fieldtype.RiskProductComplex.INSTANCE);
    public static final RiskSecurityGroup RiskSecurityGroup = register(org.fix4j.spec.fix50sp2.fieldtype.RiskSecurityGroup.INSTANCE);
    public static final RiskCFICode RiskCFICode = register(org.fix4j.spec.fix50sp2.fieldtype.RiskCFICode.INSTANCE);
    public static final RiskSecurityType RiskSecurityType = register(org.fix4j.spec.fix50sp2.fieldtype.RiskSecurityType.INSTANCE);
    public static final RiskSecuritySubType RiskSecuritySubType = register(org.fix4j.spec.fix50sp2.fieldtype.RiskSecuritySubType.INSTANCE);
    public static final RiskMaturityMonthYear RiskMaturityMonthYear = register(org.fix4j.spec.fix50sp2.fieldtype.RiskMaturityMonthYear.INSTANCE);
    public static final RiskMaturityTime RiskMaturityTime = register(org.fix4j.spec.fix50sp2.fieldtype.RiskMaturityTime.INSTANCE);
    public static final RiskRestructuringType RiskRestructuringType = register(org.fix4j.spec.fix50sp2.fieldtype.RiskRestructuringType.INSTANCE);
    public static final RiskSeniority RiskSeniority = register(org.fix4j.spec.fix50sp2.fieldtype.RiskSeniority.INSTANCE);
    public static final RiskPutOrCall RiskPutOrCall = register(org.fix4j.spec.fix50sp2.fieldtype.RiskPutOrCall.INSTANCE);
    public static final RiskFlexibleIndicator RiskFlexibleIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.RiskFlexibleIndicator.INSTANCE);
    public static final RiskCouponRate RiskCouponRate = register(org.fix4j.spec.fix50sp2.fieldtype.RiskCouponRate.INSTANCE);
    public static final RiskSecurityExchange RiskSecurityExchange = register(org.fix4j.spec.fix50sp2.fieldtype.RiskSecurityExchange.INSTANCE);
    public static final RiskSecurityDesc RiskSecurityDesc = register(org.fix4j.spec.fix50sp2.fieldtype.RiskSecurityDesc.INSTANCE);
    public static final RiskEncodedSecurityDesc RiskEncodedSecurityDesc = register(org.fix4j.spec.fix50sp2.fieldtype.RiskEncodedSecurityDesc.INSTANCE);
    public static final RiskEncodedSecurityDescLen RiskEncodedSecurityDescLen = register(org.fix4j.spec.fix50sp2.fieldtype.RiskEncodedSecurityDescLen.INSTANCE);
    public static final RiskInstrumentSettlType RiskInstrumentSettlType = register(org.fix4j.spec.fix50sp2.fieldtype.RiskInstrumentSettlType.INSTANCE);
    public static final RiskInstrumentMultiplier RiskInstrumentMultiplier = register(org.fix4j.spec.fix50sp2.fieldtype.RiskInstrumentMultiplier.INSTANCE);
    public static final NoRiskWarningLevels NoRiskWarningLevels = register(org.fix4j.spec.fix50sp2.fieldtype.NoRiskWarningLevels.INSTANCE);
    public static final RiskWarningLevelPercent RiskWarningLevelPercent = register(org.fix4j.spec.fix50sp2.fieldtype.RiskWarningLevelPercent.INSTANCE);
    public static final RiskWarningLevelName RiskWarningLevelName = register(org.fix4j.spec.fix50sp2.fieldtype.RiskWarningLevelName.INSTANCE);
    public static final NoRelatedPartyIDs NoRelatedPartyIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoRelatedPartyIDs.INSTANCE);
    public static final RelatedPartyID RelatedPartyID = register(org.fix4j.spec.fix50sp2.fieldtype.RelatedPartyID.INSTANCE);
    public static final RelatedPartyIDSource RelatedPartyIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.RelatedPartyIDSource.INSTANCE);
    public static final RelatedPartyRole RelatedPartyRole = register(org.fix4j.spec.fix50sp2.fieldtype.RelatedPartyRole.INSTANCE);
    public static final NoRelatedPartySubIDs NoRelatedPartySubIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoRelatedPartySubIDs.INSTANCE);
    public static final RelatedPartySubID RelatedPartySubID = register(org.fix4j.spec.fix50sp2.fieldtype.RelatedPartySubID.INSTANCE);
    public static final RelatedPartySubIDType RelatedPartySubIDType = register(org.fix4j.spec.fix50sp2.fieldtype.RelatedPartySubIDType.INSTANCE);
    public static final NoRelatedPartyAltIDs NoRelatedPartyAltIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoRelatedPartyAltIDs.INSTANCE);
    public static final RelatedPartyAltID RelatedPartyAltID = register(org.fix4j.spec.fix50sp2.fieldtype.RelatedPartyAltID.INSTANCE);
    public static final RelatedPartyAltIDSource RelatedPartyAltIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.RelatedPartyAltIDSource.INSTANCE);
    public static final NoRelatedPartyAltSubIDs NoRelatedPartyAltSubIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoRelatedPartyAltSubIDs.INSTANCE);
    public static final RelatedPartyAltSubID RelatedPartyAltSubID = register(org.fix4j.spec.fix50sp2.fieldtype.RelatedPartyAltSubID.INSTANCE);
    public static final RelatedPartyAltSubIDType RelatedPartyAltSubIDType = register(org.fix4j.spec.fix50sp2.fieldtype.RelatedPartyAltSubIDType.INSTANCE);
    public static final NoRelatedContextPartyIDs NoRelatedContextPartyIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoRelatedContextPartyIDs.INSTANCE);
    public static final RelatedContextPartyID RelatedContextPartyID = register(org.fix4j.spec.fix50sp2.fieldtype.RelatedContextPartyID.INSTANCE);
    public static final RelatedContextPartyIDSource RelatedContextPartyIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.RelatedContextPartyIDSource.INSTANCE);
    public static final RelatedContextPartyRole RelatedContextPartyRole = register(org.fix4j.spec.fix50sp2.fieldtype.RelatedContextPartyRole.INSTANCE);
    public static final NoRelatedContextPartySubIDs NoRelatedContextPartySubIDs = register(org.fix4j.spec.fix50sp2.fieldtype.NoRelatedContextPartySubIDs.INSTANCE);
    public static final RelatedContextPartySubID RelatedContextPartySubID = register(org.fix4j.spec.fix50sp2.fieldtype.RelatedContextPartySubID.INSTANCE);
    public static final RelatedContextPartySubIDType RelatedContextPartySubIDType = register(org.fix4j.spec.fix50sp2.fieldtype.RelatedContextPartySubIDType.INSTANCE);
    public static final NoRelationshipRiskLimits NoRelationshipRiskLimits = register(org.fix4j.spec.fix50sp2.fieldtype.NoRelationshipRiskLimits.INSTANCE);
    public static final RelationshipRiskLimitType RelationshipRiskLimitType = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskLimitType.INSTANCE);
    public static final RelationshipRiskLimitAmount RelationshipRiskLimitAmount = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskLimitAmount.INSTANCE);
    public static final RelationshipRiskLimitCurrency RelationshipRiskLimitCurrency = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskLimitCurrency.INSTANCE);
    public static final RelationshipRiskLimitPlatform RelationshipRiskLimitPlatform = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskLimitPlatform.INSTANCE);
    public static final NoRelationshipRiskInstruments NoRelationshipRiskInstruments = register(org.fix4j.spec.fix50sp2.fieldtype.NoRelationshipRiskInstruments.INSTANCE);
    public static final RelationshipRiskInstrumentOperator RelationshipRiskInstrumentOperator = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskInstrumentOperator.INSTANCE);
    public static final RelationshipRiskSymbol RelationshipRiskSymbol = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskSymbol.INSTANCE);
    public static final RelationshipRiskSymbolSfx RelationshipRiskSymbolSfx = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskSymbolSfx.INSTANCE);
    public static final RelationshipRiskSecurityID RelationshipRiskSecurityID = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskSecurityID.INSTANCE);
    public static final RelationshipRiskSecurityIDSource RelationshipRiskSecurityIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskSecurityIDSource.INSTANCE);
    public static final NoRelationshipRiskSecurityAltID NoRelationshipRiskSecurityAltID = register(org.fix4j.spec.fix50sp2.fieldtype.NoRelationshipRiskSecurityAltID.INSTANCE);
    public static final RelationshipRiskSecurityAltID RelationshipRiskSecurityAltID = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskSecurityAltID.INSTANCE);
    public static final RelationshipRiskSecurityAltIDSource RelationshipRiskSecurityAltIDSource = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskSecurityAltIDSource.INSTANCE);
    public static final RelationshipRiskProduct RelationshipRiskProduct = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskProduct.INSTANCE);
    public static final RelationshipRiskProductComplex RelationshipRiskProductComplex = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskProductComplex.INSTANCE);
    public static final RelationshipRiskSecurityGroup RelationshipRiskSecurityGroup = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskSecurityGroup.INSTANCE);
    public static final RelationshipRiskCFICode RelationshipRiskCFICode = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskCFICode.INSTANCE);
    public static final RelationshipRiskSecurityType RelationshipRiskSecurityType = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskSecurityType.INSTANCE);
    public static final RelationshipRiskSecuritySubType RelationshipRiskSecuritySubType = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskSecuritySubType.INSTANCE);
    public static final RelationshipRiskMaturityMonthYear RelationshipRiskMaturityMonthYear = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskMaturityMonthYear.INSTANCE);
    public static final RelationshipRiskMaturityTime RelationshipRiskMaturityTime = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskMaturityTime.INSTANCE);
    public static final RelationshipRiskRestructuringType RelationshipRiskRestructuringType = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskRestructuringType.INSTANCE);
    public static final RelationshipRiskSeniority RelationshipRiskSeniority = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskSeniority.INSTANCE);
    public static final RelationshipRiskPutOrCall RelationshipRiskPutOrCall = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskPutOrCall.INSTANCE);
    public static final RelationshipRiskFlexibleIndicator RelationshipRiskFlexibleIndicator = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskFlexibleIndicator.INSTANCE);
    public static final RelationshipRiskCouponRate RelationshipRiskCouponRate = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskCouponRate.INSTANCE);
    public static final RelationshipRiskSecurityExchange RelationshipRiskSecurityExchange = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskSecurityExchange.INSTANCE);
    public static final RelationshipRiskSecurityDesc RelationshipRiskSecurityDesc = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskSecurityDesc.INSTANCE);
    public static final RelationshipRiskEncodedSecurityDesc RelationshipRiskEncodedSecurityDesc = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskEncodedSecurityDesc.INSTANCE);
    public static final RelationshipRiskEncodedSecurityDescLen RelationshipRiskEncodedSecurityDescLen = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskEncodedSecurityDescLen.INSTANCE);
    public static final RelationshipRiskInstrumentSettlType RelationshipRiskInstrumentSettlType = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskInstrumentSettlType.INSTANCE);
    public static final RelationshipRiskInstrumentMultiplier RelationshipRiskInstrumentMultiplier = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskInstrumentMultiplier.INSTANCE);
    public static final NoRelationshipRiskWarningLevels NoRelationshipRiskWarningLevels = register(org.fix4j.spec.fix50sp2.fieldtype.NoRelationshipRiskWarningLevels.INSTANCE);
    public static final RelationshipRiskWarningLevelPercent RelationshipRiskWarningLevelPercent = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskWarningLevelPercent.INSTANCE);
    public static final RelationshipRiskWarningLevelName RelationshipRiskWarningLevelName = register(org.fix4j.spec.fix50sp2.fieldtype.RelationshipRiskWarningLevelName.INSTANCE);


    private static <T extends FieldType> T register(final T fieldType) {
        fieldTypesByTagInt.put(fieldType.getTag().getValue(), fieldType);
        fieldTypesByName.put(fieldType.getName(), fieldType);
        return fieldType;
    }

    //Private, as this sucker should not be instantiated
    private FieldTypes(){}

    public static FieldType getFieldTypeByTag(final Tag<Integer> tag) {
        return fieldTypesByTagInt.get(tag.getValue());
    }

    public static FieldType getFieldTypeByName(final String name) {
        return fieldTypesByName.get(name);
    }

    public static FieldType getFieldTypeByTag(final int tag) {
        return fieldTypesByTagInt.get(tag);
    }

    public static FieldType forCustomTag(final int customTag){
        return FieldType.Factory.forCustomTag(customTag);
    }
}
